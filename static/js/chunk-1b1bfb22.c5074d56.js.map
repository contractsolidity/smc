{"version":3,"sources":["webpack:///./node_modules/@ethersproject/hash/lib.esm/namehash.js","webpack:///./node_modules/@ethersproject/random/lib.esm/index.js","webpack:///./node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/base64/lib.esm/base64.js","webpack:///./node_modules/@ethersproject/wallet/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/wallet/lib.esm/index.js","webpack:///./node_modules/@ethersproject/basex/lib.esm/index.js","webpack:///./node_modules/@ethersproject/sha2/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/sha2/lib.esm/sha2.js","webpack:///./node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js","webpack:///./node_modules/@ethersproject/constants/lib.esm/hashes.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/index.js","webpack:///./node_modules/ethers/lib/utils.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/random/lib.esm/shuffle.js","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/lang-en.js","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/wordlists.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/address.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/array.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/boolean.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/null.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/number.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/string.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/coders/tuple.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/abi-coder.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/_version.js","webpack:///./node_modules/core-js/internals/whitespaces.js","webpack:///./node_modules/core-js/internals/string-trim.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/inspect.js","webpack:///./node_modules/@ethersproject/random/lib.esm/random.js","webpack:///./node_modules/@ethersproject/contracts/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/contracts/lib.esm/index.js","webpack:///./node_modules/@ethersproject/networks/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/networks/lib.esm/index.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/formatter.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/base-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/json-rpc-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/ws.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/websocket-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/url-json-rpc-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/alchemy-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/ankr-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/cloudflare-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/etherscan-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/fallback-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/ipc-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/infura-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/json-rpc-batch-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/nodesmith-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/pocket-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/web3-provider.js","webpack:///./node_modules/@ethersproject/providers/lib.esm/index.js","webpack:///./node_modules/ethers/lib.esm/_version.js","webpack:///./node_modules/ethers/lib.esm/ethers.js","webpack:///./node_modules/ethers/lib.esm/index.js","webpack:///./node_modules/ethereum-multicall/dist/esm/enums/execution-type.js","webpack:///./node_modules/ethereum-multicall/dist/esm/enums/networks.js","webpack:///./node_modules/ethereum-multicall/dist/esm/utils.js","webpack:///./node_modules/ethereum-multicall/dist/esm/multicall.js","webpack:///./node_modules/@ethersproject/strings/lib.esm/bytes32.js","webpack:///./node_modules/@ethersproject/units/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/units/lib.esm/index.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/message.js","webpack:///./node_modules/@ethersproject/base64/lib.esm/index.js","webpack:///./node_modules/aes-js/index.js","webpack:///./node_modules/@ethersproject/abstract-signer/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/abstract-signer/lib.esm/index.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/index.js","webpack:///./node_modules/@ethersproject/sha2/lib.esm/index.js","webpack:///./node_modules/@ethersproject/strings/lib.esm/idna.js","webpack:///./node_modules/@ethersproject/strings/lib.esm/index.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/keystore.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/interface.js","webpack:///./node_modules/core-js/modules/es.number.constructor.js","webpack:///./node_modules/@ethersproject/constants/lib.esm/strings.js","webpack:///./node_modules/@ethersproject/web/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/web/lib.esm/geturl.js","webpack:///./node_modules/@ethersproject/web/lib.esm/index.js","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/wordlists/lib.esm/wordlist.js","webpack:///./node_modules/bech32/index.js","webpack:///./node_modules/@ethersproject/constants/lib.esm/addresses.js","webpack:///./node_modules/@ethersproject/abi/lib.esm/fragments.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/index.js","webpack:///./node_modules/@ethersproject/sha2/lib.esm/types.js","webpack:///./node_modules/@ethersproject/hash/lib.esm/typed-data.js","webpack:///./node_modules/@ethersproject/solidity/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/solidity/lib.esm/index.js","webpack:///./node_modules/@ethersproject/abstract-provider/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/abstract-provider/lib.esm/index.js","webpack:///./node_modules/@ethersproject/hdnode/lib.esm/_version.js","webpack:///./node_modules/@ethersproject/hdnode/lib.esm/index.js","webpack:///./node_modules/@ethersproject/json-wallets/lib.esm/utils.js","webpack:///./node_modules/@ethersproject/random/lib.esm/_version.js"],"names":["logger","Zeros","Uint8Array","fill","Partition","RegExp","isValidName","name","comps","split","i","length","Error","error","namehash","throwArgumentError","current","result","partition","match","label","dnsEncode","map","comp","bytes","_constructorGuard","Zero","from","NegativeOne","throwFault","message","fault","operation","value","params","undefined","throwError","errors","NUMERIC_FAULT","zeros","getMultiplier","decimals","toNumber","e","substring","formatFixed","multiplier","negative","lt","mul","fraction","mod","toString","whole","div","parseFixed","wholeValue","fractionValue","wei","add","FixedFormat","constructorGuard","signed","width","UNSUPPORTED_OPERATION","this","String","_multiplier","Object","freeze","parseInt","check","key","type","defaultValue","FixedNumber","hex","format","checkNew","_hex","_value","_isFixedNumber","other","_checkFormat","a","b","fromValue","sub","push","hasFraction","isNegative","subUnsafe","ONE","toFormat","addUnsafe","factor","bump","BUMP","mulUnsafe","floor","divUnsafe","fromTwos","toTwos","toHexString","parseFloat","fromString","fixedFormat","numeric","decimal","fromBytes","code","INVALID_ARGUMENT","version","decode","textData","atob","data","charCodeAt","encode","fromCharCode","btoa","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","done","then","apply","isAccount","privateKey","address","hasMnemonic","mnemonic","phrase","provider","super","signingKey","publicKey","srcMnemonic","path","locale","node","fromMnemonic","derivePath","isSigningKey","curve","isProvider","_mnemonic","_signingKey","transaction","tx","signature","signDigest","domain","types","populated","resolveNames","resolveName","hash","password","options","progressCallback","entropy","random","extraEntropy","json","account","wordlist","verifyMessage","verifyTypedData","BaseX","alphabet","charAt","_alphabetMap","source","digits","carry","j","base","string","k","_leader","q","TypeError","byte","reverse","Base32","Base58","ripemd160","update","digest","sha256","sha512","computeHmac","algorithm","hmac","pbkdf2","salt","iterations","keylen","hashAlgorithm","hLen","l","DK","block1","r","T","set","U","Math","ceil","destPos","len","slice","HashZero","__createBinding","create","o","m","k2","defineProperty","enumerable","get","__setModuleDefault","v","__importStar","__esModule","prototype","hasOwnProperty","call","exports","formatBytes32String","Utf8ErrorFuncs","toUtf8String","toUtf8CodePoints","toUtf8Bytes","_toEscapedUtf8String","nameprep","hexDataSlice","hexDataLength","hexZeroPad","hexValue","hexStripZeros","hexConcat","isHexString","hexlify","base64","base58","TransactionDescription","LogDescription","Interface","SigningKey","HDNode","defaultPath","isBytesLike","isBytes","zeroPad","stripZeros","concat","arrayify","shallowCopy","resolveProperties","getStatic","defineReadOnly","deepCopy","checkProperties","poll","fetchJson","_fetchData","RLP","Logger","checkResultErrors","FormatTypes","ParamType","FunctionFragment","EventFragment","ErrorFragment","ConstructorFragment","Fragment","defaultAbiCoder","AbiCoder","Indexed","Utf8ErrorReason","UnicodeNormalizationForm","SupportedAlgorithm","mnemonicToSeed","isValidMnemonic","entropyToMnemonic","mnemonicToEntropy","getAccountPath","recoverPublicKey","computePublicKey","recoverAddress","computeAddress","getJsonWalletAddress","TransactionTypes","serializeTransaction","parseTransaction","accessListify","joinSignature","splitSignature","soliditySha256","solidityKeccak256","solidityPack","shuffled","randomBytes","keccak256","commify","parseUnits","formatUnits","parseEther","formatEther","isAddress","getCreate2Address","getContractAddress","getIcapAddress","getAddress","_TypedDataEncoder","id","hashMessage","parseBytes32String","abi_1","address_1","basex_1","bytes_1","hash_1","hdnode_1","json_wallets_1","keccak256_1","logger_1","sha2_1","solidity_1","pack","random_1","properties_1","signing_key_1","strings_1","transactions_1","parse","serialize","units_1","wallet_1","web_1","sha2_2","strings_2","checkErrors","object","Array","isArray","childPath","Coder","localName","dynamic","Writer","wordSize","_data","_dataLength","_padding","writer","_writeData","paddingOffset","BUFFER_OVERRUN","offset","_getValue","Reader","coerceFunc","allowLoose","_offset","_coerceFunc","coerce","loose","alignedLength","_peekBytes","readBytes","array","tmp","words","loadWords","lang","replace","toLowerCase","index","word","indexOf","langEn","register","wordlists","en","_throwError","writeValue","reader","readValue","coder","coders","values","arrayValues","unique","argument","staticWriter","dynamicWriter","updateFuncs","forEach","dynamicOffset","updateFunc","writeUpdatableValue","baseOffset","func","appendWriter","unpack","baseReader","subReader","offsetReader","baseType","uniqueNames","reduce","accum","defaultChild","count","checkArgumentCount","isZero","writeBytes","size","maxUintValue","mask","bounds","gt","join","paramTypeBytes","paramTypeNumber","param","_getCoder","arrayChildren","arrayLength","components","component","_getWordSize","_getWriter","_getReader","module","uncurryThis","requireObjectCoercible","whitespaces","whitespace","ltrim","rtrim","createMethod","TYPE","$this","start","end","trim","isCrowdsaleWallet","JSON","encseed","ethaddr","isKeystoreWallet","getGlobal","self","window","global","anyGlobal","crypto","msCrypto","getRandomValues","warn","buffer","allowedTransactionKeys","chainId","gasLimit","gasPrice","nonce","to","accessList","maxFeePerGas","maxPriorityFeePerGas","customData","ccipReadEnabled","resolver","nameOrPromise","resolveAddresses","paramType","all","makeError","populateTransaction","contract","fragment","args","overrides","inputs","pop","signer","override","resolved","resolvedAddress","interface","encodeFunctionData","ro","gas","intrinsic","roValue","payable","leftovers","keys","filter","stringify","buildPopulate","buildEstimate","signerOrProvider","estimateGas","addContractWait","wait","bind","confirmations","receipt","events","logs","log","event","parsed","parseLog","topics","decodeEventLog","eventFragment","eventSignature","removeListener","getBlock","blockHash","getTransaction","transactionHash","getTransactionReceipt","buildCall","collapseSimple","blockTag","deployTransaction","_deployed","decodeFunctionResult","outputs","CALL_EXCEPTION","buildSend","txRequest","sendTransaction","buildDefault","constant","getEventTag","topic","tag","_listeners","listener","once","item","listenerCount","argsCopy","setTimeout","ErrorRunningEvent","contractInterface","getEventTopic","prepareEvent","decodeError","addressOrName","Contract","isSigner","uniqueFilters","filters","encodeFilterTopics","catch","uniqueSignatures","functions","callStatic","signatures","isInterface","_deployedPromise","getCode","contractAddress","deployed","isIndexed","runningEvent","_runningEvents","eventName","_normalizeRunningEvent","getEvent","emit","_wrappedEmits","off","_checkRunningEvents","addListener","wrappedEmit","_wrapEvent","getEmit","on","fromBlockOrBlockhash","toBlock","_getRunningEvent","fromBlock","getLogs","_addEventListener","run","listeners","removeAllListeners","bytecode","bytecodeHex","deploy","encodeDeploy","unsignedTx","getDeployTransaction","constructor","getContract","compilerOutput","MISSING_ARGUMENT","abi","evm","getInterface","isRenetworkable","ethDefaultProvider","network","providers","providerList","InfuraProvider","infura","EtherscanProvider","etherscan","AlchemyProvider","alchemy","PocketProvider","pocket","skip","CloudflareProvider","cloudflare","AnkrProvider","ankr","FallbackProvider","quorum","renetwork","etcDefaultProvider","url","JsonRpcProvider","homestead","ensAddress","_defaultProvider","ropsten","classicMordor","networks","unspecified","mainnet","morden","testnet","rinkeby","kovan","goerli","kintsugi","classic","classicMorden","classicTestnet","classicKotti","xdai","matic","maticmum","optimism","arbitrum","bnb","bnbt","standard","defaultProvider","formats","getDefaultFormats","bigNumber","number","strictData","allowNull","blockNumber","transactionIndex","uint256","s","creates","raw","transactionRequest","receiptLog","arrayOf","logIndex","root","gasUsed","logsBloom","cumulativeGasUsed","effectiveGasPrice","status","block","parentHash","timestamp","difficulty","miner","extraData","transactions","baseFeePerGas","blockWithTransactions","transactionResponse","filterLog","removed","boolean","allowFalsish","strict","author","_difficulty","_block","input","networkId","byzantium","checkKey","checkValue","nullValue","replaceValue","isCommunityResourcable","isCommunityResource","throttleMessage","showThrottleMessage","MAX_CCIP_REDIRECTS","checkTopic","serializeTopics","sorted","sort","deserializeTopics","isForkEvent","getTime","Date","stall","duration","PollableEvents","_lastBlockNumber","_inflight","coinInfos","symbol","p2pkh","p2sh","prefix","ilk","bytes32ify","base58Encode","sha2","matcherIpfs","matchers","_parseString","_parseBytes","getIpfsLink","link","numPad","padded","bytesPad","encodeBytes","datas","byteCount","formatter","_supportsEip2544","eq","selector","parameters","parseBytes","supportsWildcard","_fetch","coinType","hexBytes","coinInfo","toWords","unshift","callAddress","_fetchBytes","_getAddress","linkage","content","avatar","getText","scheme","owner","_resolvedAddress","addr","tokenId","tokenOwner","balance","metadataUrl","metadata","imageUrl","image","ipfs","ipns","swarm","keyBytes","defaultFormatter","nextPollId","_events","_emitted","disableCcipRead","getFormatter","anyNetwork","detectNetwork","_networkPromise","_ready","knownNetwork","_maxInternalBlockNumber","_maxFilterBlockRange","_pollingInterval","_fastQueryDate","_network","UNKNOWN_ERROR","NETWORK_ERROR","calldata","urls","sender","errorMessages","href","errorPassThrough","response","statusCode","errorMessage","SERVER_ERROR","maxAge","_internalBlockNumber","internalBlockNumber","respTime","reqTime","checkInternalBlockNumber","perform","networkError","getNetwork","_setFastBlockNumber","pollId","runners","_getInternalBlockNumber","pollingInterval","abs","previousBlockNumber","eventBlockNumber","runner","polling","currentNetwork","_fastBlockNumber","_fastBlockNumberPromise","detectedNetwork","_poller","setInterval","_bootstrapPoll","clearInterval","now","getBlockNumber","timeout","_waitForTransaction","replaceable","cancelFuncs","alreadyDone","minedHandler","lastBlockNumber","startBlock","scannedBlock","replaceHandler","getTransactionCount","mined","getBlockWithTransactions","ti","waitForTransaction","reason","TRANSACTION_REPLACED","cancelled","replacement","_wrapTransaction","timer","TIMEOUT","unref","clearTimeout","method","_getBlockTag","position","p","expectedHash","returnedHash","confirms","signedTransaction","hexTx","t","attempt","redirects","txSender","urlsOffset","urlsLength","urlsData","u","callbackSelector","ccipResult","ccipReadFetch","_call","_getTransactionRequest","blockHashOrBlockTag","includeTransactions","blockWithTxs","oncePoll","_getBlock","_getFilter","currentName","_getResolver","addrData","getResolver","resolverAddr","nameOrAddress","resolverAddress","getAvatar","NOT_IMPLEMENTED","pollable","_startEvent","stopped","eventTag","_stopEvent","found","errorGas","spelunk","checkError","body","responseText","INSUFFICIENT_FUNDS","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","UNPREDICTABLE_GAS_LIMIT","getResult","payload","getLowerCase","addressOrIndex","UncheckedJsonRpcSigner","_address","_index","send","accounts","fromAddress","estimate","hexlifyTransaction","sendUncheckedTransaction","getPayload","networkOrReady","_nextId","_eventLoopCache","_cache","_uncachedDetectNetwork","serverError","getSigner","connectUnchecked","request","jsonrpc","action","cache","connection","feeData","getFeeData","prepareRequest","_startPending","_pendingFilter","pendingFilter","filterId","hashes","seq","allowExtra","allowed","WS","WebSocket","NextId","_wsReady","websocket","onopen","_requests","onmessage","messageEvent","callback","_subs","subscription","processFunc","fauxPoll","_websocket","_detectNetwork","rid","subIdPromise","_subIds","subId","_subscribe","emitReceipt","readyState","CONNECTING","onerror","close","_super","apiKey","checkAbstract","defaultApiKey","host","arguments","allowGzip","throttleCallback","getHost","projectSecret","user","getTransactionPostData","maxFeePerGs","storageKeys","throttleRetry","getJsonResult","checkLogTag","getBaseUrl","query","baseUrl","apikey","post","getPostUrl","getUrl","getPostData","procFunc","throttleSlotInterval","payloadStr","headers","fetch","txhash","postData","topic0","blocks","ethusd","endBlock","startblock","endblock","timeStamp","checkNetworks","median","maxDelta","middle","isBigNumber","nextRid","cancel","promise","getPromise","ForwardErrors","ForwardProperties","exposeDebugConfig","config","weight","normalizedTally","normalize","configs","tally","c","getProcessFunc","_highestBlockNumber","waitForSync","getRunner","currentBlockNumber","getEtherPrice","getStorageAt","providerConfigs","configOrProvider","stallTimeout","priority","total","results","shuffle","first","t0","inflightWeight","staller","backend","waiting","race","errorCode","props","IpcProvider","defaultProjectId","projectId","apiKeyObj","assertArgument","_pendingBatch","inflightRequest","_pendingBatchAggregator","batch","inflight","defaultApplicationIds","n","applicationId","loadBalancer","applicationSecretKey","buildWeb3LegacyFetcher","sendFunc","fetcher","buildEip1193Fetcher","jsonRpcFetchFunc","subprovider","isMetaMask","sendAsync","getDefaultProvider","NodesmithProvider","Web3Provider","_ethers","ExecutionType","Networks","Utils","deepClone","__generator","f","y","g","_","sent","trys","ops","verb","Symbol","iterator","op","Multicall","_options","ABI","stateMutability","internalType","web3Instance","_executionType","web3","ethersProvider","ethers","nodeUrl","customHttp","contractCallContexts","aggregateResponse","returnObject","contractCallsResults","originalContractCallContext","returnObjectResult","methodContext","originalContractCallMethodContext","outputTypes","decodedReturnValues","_a","execute","buildAggregateCallContext","contractContextIndex","callsReturnContext","methodResults","calls","contractMethodIndex","findOutputTypesFromAbi","methodName","tryAggregate","success","getReturnDataFromResult","returnValues","formatReturnValues","decoded","reference","methodParameters","returnData","decodedReturnResults","aggregateCallContext","contractContext","executingInterface","utils","encodedData","target","_b","executeWithWeb3","executeWithEthersOrCustom","contractResponse","getTypedOptions","eth","net","getId","getContractBasedOnNetwork","methods","tryBlockAndAggregate","mapCallContextToMatchContractFormat","buildUpAggregateResponse","aggregate","customProvider","_loop_1","existingResponse","find","callData","multicallCustomContractAddress","bsc","bsc_testnet","mumbai","etherlite","avalauncheFuji","avalauncheMainnet","fantom","text","names","suffix","formatted","unitName","ether","messagePrefix","checkInt","checkInts","arrayish","coerceArray","arg","copy","ArrayBuffer","isView","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","convertUtf8","toBytes","encodeURI","substr","convertHex","Hex","numberOfRounds","16","24","32","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","_prepare","rounds","_Ke","_Kd","roundKeyCount","KC","tk","tt","rconpointer","encrypt","plaintext","decrypt","ciphertext","ModeOfOperationECB","description","_aes","ModeOfOperationCBC","iv","_lastCipherblock","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","pkcs7pad","padder","pkcs7strip","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utf8","padding","pkcs7","pad","strip","_arrayTest","forwardErrors","_checkProvider","getBalance","checkTransaction","signedTx","signTransaction","getGasPrice","hasEip1559","getChainId","_isSigner","_fail","bytes2","createTable","lo","pair","createRangeTable","hi","h","matchMap","ranges","range","d","Table_A_1_ranges","Table_B_1_flags","Table_B_2_ranges","Table_B_2_lut_abs","Table_B_2_lut_rel","Table_B_2_complex","Table_C_ranges","flatten","_nameprepTableA1","codepoint","_nameprepTableB2","codes","shift","complex","_nameprepTableC","codesTableB2","NFKC","KeystoreAccount","_isKeystoreAccount","_decrypt","cipher","aesCtr","_getAccount","computedMAC","mnemonicKey","mnemonicCiphertext","mnemonicIv","mnemonicCounter","mnemonicAesCtr","pbkdf2Sync","passwordBytes","dkLen","prfFunc","_computeKdfKey","pbkdf2Func","scryptFunc","kdf","N","prf","decryptSync","syncScrypt","scrypt","client","uuidRandom","uuid","derivedKey","macPrefix","mac","Crypto","cipherparams","kdfparams","dklen","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","gethFilename","ErrorDescription","_isIndexed","BuiltinErrors","wrapAccessError","property","wrap","fragments","bucket","full","sighash","nameOrSignatureOrSighash","getSighash","matching","nameOrSignatureOrTopic","topichash","getFunction","getError","_abiCoder","_encodeParams","_decodeParams","functionFragment","errorArgs","errorName","errorSignature","builtin","UNEXPECTED_ARGUMENT","anonymous","encodeTopic","indexed","dataTypes","dataValues","topicHash","expected","nonIndexed","fromObject","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","hexData","errorFragment","_isInterface","DESCRIPTORS","isForced","redefine","hasOwn","inheritIfRequired","isPrototypeOf","isSymbol","toPrimitive","fails","getOwnPropertyNames","getOwnPropertyDescriptor","thisNumberValue","NUMBER","NativeNumber","NumberPrototype","arraySlice","toNumeric","primValue","third","radix","maxCode","it","NaN","NumberWrapper","dummy","EtherSymbol","skipFetchSetup","mode","credentials","redirect","referrer","arrayBuffer","statusMessage","statusText","bodyify","attemptLimit","throttleLimit","allow304","allowInsecureAuthentication","authorization","reData","dataMatch","requestBody","requestMethod","flatHeaders","header","runningTimeout","runningFetch","location","tryAgain","retryAfter","pow","processJsonFunc","updated","hasContentType","ceiling","interval","retryLimit","onceBlock","exportWordlist","getWord","getWordIndex","ALPHABET","ALPHABET_MAP","z","x","polymodStep","pre","prefixChk","chk","LIMIT","__decode","str","lowered","uppered","toUpperCase","lastIndexOf","wordChars","decodeUnsafe","res","convert","inBits","outBits","bits","maxV","toWordsUnsafe","fromWordsUnsafe","fromWords","AddressZero","ModifiersBytes","memory","storage","ModifiersNest","checkModifier","parseParamType","allowIndexed","originalParam","newNode","parent","state","allowType","allowParams","verifyType","child","allowName","allowArray","sibling","readArray","populate","minimal","paramTypeArray","_isParamType","isParamType","ParamTypify","parseParams","allowIndex","splitNesting","_isFragment","isFragment","isEventFragment","verifyIdentifier","regexParen","modifier","parseGas","parseModifiers","verifyState","isConstructorFragment","parens","output","isFunctionFragment","returns","checkForbidden","sig","isErrorFragment","regexIdentifier","depth","_isCrowdsaleAccount","encryptedSeed","aesCbc","seed","seedHex","seedHexBytes","decryptJsonWallet","decryptJsonWalletSync","One","MaxUint256","hexPadRight","padOffset","hexTrue","hexFalse","domainFieldTypes","verifyingContract","domainFieldNames","checkString","domainChecks","getBaseEncoder","boundsUpper","boundsLower","encodeType","fields","TypedDataEncoder","links","parents","subtypes","field","encoder","primaryTypes","checkCircular","subtype","primaryType","st","_types","_encoderCache","_getEncoder","subEncoder","getEncoder","encodedType","encodeData","hashStruct","_visit","domainFields","EIP712Domain","hashDomain","ensCache","visit","domainValues","domainTypes","typesWithDomain","regexBytes","regexNumber","regexArray","_pack","byteLength","tight","_isForkEvent","_isProvider","MasterSecret","HardenedBit","getUpperMask","getLowerMask","bytes32","base58check","getWordlist","parentFingerprint","chainCode","mnemonicOrPath","compressedPublicKey","I","IL","IR","ki","Ki","ek","_addPoint","fingerprint","_derive","seedArray","_fromSeed","extendedKey","NFKD","checkNormalize","bit","entropyBits","checksumBits","checksumMask","checksum","indices","remainingBits","looseArrayify","hexString","zpad","getPassword","searchPath","currentChild","matchingChild","uuidV4"],"mappings":"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","file":"static/js/chunk-1b1bfb22.c5074d56.js","sourcesContent":["import { concat, hexlify } from \"@ethersproject/bytes\";\nimport { nameprep, toUtf8Bytes } from \"@ethersproject/strings\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst Zeros = new Uint8Array(32);\nZeros.fill(0);\nconst Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nexport function isValidName(name) {\n    try {\n        const comps = name.split(\".\");\n        for (let i = 0; i < comps.length; i++) {\n            if (nameprep(comps[i]).length === 0) {\n                throw new Error(\"empty\");\n            }\n        }\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function namehash(name) {\n    /* istanbul ignore if */\n    if (typeof (name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n    let current = name;\n    let result = Zeros;\n    while (current.length) {\n        const partition = current.match(Partition);\n        if (partition == null || partition[2] === \"\") {\n            logger.throwArgumentError(\"invalid ENS address; missing component\", \"name\", name);\n        }\n        const label = toUtf8Bytes(nameprep(partition[3]));\n        result = keccak256(concat([result, keccak256(label)]));\n        current = partition[2] || \"\";\n    }\n    return hexlify(result);\n}\nexport function dnsEncode(name) {\n    return hexlify(concat(name.split(\".\").map((comp) => {\n        // We jam in an _ prefix to fill in with the length later\n        // Note: Nameprep throws if the component is over 63 bytes\n        const bytes = toUtf8Bytes(\"_\" + nameprep(comp));\n        bytes[0] = bytes.length - 1;\n        return bytes;\n    }))) + \"00\";\n}\n//# sourceMappingURL=namehash.js.map","\"use strict\";\nexport { randomBytes } from \"./random\";\nexport { shuffled } from \"./shuffle\";\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { arrayify, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BigNumber, isBigNumberish } from \"./bignumber\";\nconst _constructorGuard = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\nfunction throwFault(message, fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        }\n        catch (e) { }\n    }\n    if (typeof (decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\nexport function formatFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n    const negative = value.lt(Zero);\n    if (negative) {\n        value = value.mul(NegativeOne);\n    }\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    }\n    else {\n        value = whole + \".\" + fraction;\n    }\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nexport function parseFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") {\n        fraction = \"0\";\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) {\n        fraction += \"0\";\n    }\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(NegativeOne);\n    }\n    return wei;\n}\nexport class FixedFormat {\n    constructor(constructorGuard, signed, width, decimals) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (value instanceof FixedFormat) {\n            return value;\n        }\n        if (typeof (value) === \"number\") {\n            value = `fixed128x${value}`;\n        }\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            }\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            const check = (key, type, defaultValue) => {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\nexport class FixedNumber {\n    constructor(constructorGuard, hex, value, format) {\n        logger.checkNew(new.target, FixedNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    _checkFormat(other) {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n    addUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n    subUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n    mulUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n    floor() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    ceiling() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    // @TODO: Support other rounding algorithms\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n    isZero() {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n    isNegative() {\n        return (this._value[0] === \"-\");\n    }\n    toString() { return this._value; }\n    toHexString(width) {\n        if (width == null) {\n            return this._hex;\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n        }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n    toUnsafeFloat() { return parseFloat(this.toString()); }\n    toFormat(format) {\n        return FixedNumber.fromString(this._value, format);\n    }\n    static fromValue(value, decimals, format) {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (format == null) {\n            format = \"fixed\";\n        }\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n    static fromString(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        const numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        let hex = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        }\n        else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static fromBytes(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) {\n            numeric = numeric.fromTwos(fixedFormat.width);\n        }\n        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static from(value, format) {\n        if (typeof (value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n    static isFixedNumber(value) {\n        return !!(value && value._isFixedNumber);\n    }\n}\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n//# sourceMappingURL=fixednumber.js.map","export const version = \"abi/5.6.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function decode(textData) {\n    textData = atob(textData);\n    const data = [];\n    for (let i = 0; i < textData.length; i++) {\n        data.push(textData.charCodeAt(i));\n    }\n    return arrayify(data);\n}\nexport function encode(data) {\n    data = arrayify(data);\n    let textData = \"\";\n    for (let i = 0; i < data.length; i++) {\n        textData += String.fromCharCode(data[i]);\n    }\n    return btoa(textData);\n}\n//# sourceMappingURL=base64.js.map","export const version = \"wallet/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { arrayify, concat, hexDataSlice, isHexString, joinSignature } from \"@ethersproject/bytes\";\nimport { hashMessage, _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { defaultPath, HDNode, entropyToMnemonic } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { decryptJsonWallet, decryptJsonWalletSync, encryptKeystore } from \"@ethersproject/json-wallets\";\nimport { computeAddress, recoverAddress, serialize } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction isAccount(value) {\n    return (value != null && isHexString(value.privateKey, 32) && value.address != null);\n}\nfunction hasMnemonic(value) {\n    const mnemonic = value.mnemonic;\n    return (mnemonic && mnemonic.phrase);\n}\nexport class Wallet extends Signer {\n    constructor(privateKey, provider) {\n        logger.checkNew(new.target, Wallet);\n        super();\n        if (isAccount(privateKey)) {\n            const signingKey = new SigningKey(privateKey.privateKey);\n            defineReadOnly(this, \"_signingKey\", () => signingKey);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n            if (this.address !== getAddress(privateKey.address)) {\n                logger.throwArgumentError(\"privateKey/address mismatch\", \"privateKey\", \"[REDACTED]\");\n            }\n            if (hasMnemonic(privateKey)) {\n                const srcMnemonic = privateKey.mnemonic;\n                defineReadOnly(this, \"_mnemonic\", () => ({\n                    phrase: srcMnemonic.phrase,\n                    path: srcMnemonic.path || defaultPath,\n                    locale: srcMnemonic.locale || \"en\"\n                }));\n                const mnemonic = this.mnemonic;\n                const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path);\n                if (computeAddress(node.privateKey) !== this.address) {\n                    logger.throwArgumentError(\"mnemonic/address mismatch\", \"privateKey\", \"[REDACTED]\");\n                }\n            }\n            else {\n                defineReadOnly(this, \"_mnemonic\", () => null);\n            }\n        }\n        else {\n            if (SigningKey.isSigningKey(privateKey)) {\n                /* istanbul ignore if */\n                if (privateKey.curve !== \"secp256k1\") {\n                    logger.throwArgumentError(\"unsupported curve; must be secp256k1\", \"privateKey\", \"[REDACTED]\");\n                }\n                defineReadOnly(this, \"_signingKey\", () => privateKey);\n            }\n            else {\n                // A lot of common tools do not prefix private keys with a 0x (see: #1166)\n                if (typeof (privateKey) === \"string\") {\n                    if (privateKey.match(/^[0-9a-f]*$/i) && privateKey.length === 64) {\n                        privateKey = \"0x\" + privateKey;\n                    }\n                }\n                const signingKey = new SigningKey(privateKey);\n                defineReadOnly(this, \"_signingKey\", () => signingKey);\n            }\n            defineReadOnly(this, \"_mnemonic\", () => null);\n            defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        }\n        /* istanbul ignore if */\n        if (provider && !Provider.isProvider(provider)) {\n            logger.throwArgumentError(\"invalid provider\", \"provider\", provider);\n        }\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    get mnemonic() { return this._mnemonic(); }\n    get privateKey() { return this._signingKey().privateKey; }\n    get publicKey() { return this._signingKey().publicKey; }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    connect(provider) {\n        return new Wallet(this, provider);\n    }\n    signTransaction(transaction) {\n        return resolveProperties(transaction).then((tx) => {\n            if (tx.from != null) {\n                if (getAddress(tx.from) !== this.address) {\n                    logger.throwArgumentError(\"transaction from address mismatch\", \"transaction.from\", transaction.from);\n                }\n                delete tx.from;\n            }\n            const signature = this._signingKey().signDigest(keccak256(serialize(tx)));\n            return serialize(tx, signature);\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return joinSignature(this._signingKey().signDigest(hashMessage(message)));\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                if (this.provider == null) {\n                    logger.throwError(\"cannot resolve ENS names without a provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                        operation: \"resolveName\",\n                        value: name\n                    });\n                }\n                return this.provider.resolveName(name);\n            });\n            return joinSignature(this._signingKey().signDigest(_TypedDataEncoder.hash(populated.domain, types, populated.value)));\n        });\n    }\n    encrypt(password, options, progressCallback) {\n        if (typeof (options) === \"function\" && !progressCallback) {\n            progressCallback = options;\n            options = {};\n        }\n        if (progressCallback && typeof (progressCallback) !== \"function\") {\n            throw new Error(\"invalid callback\");\n        }\n        if (!options) {\n            options = {};\n        }\n        return encryptKeystore(this, password, options, progressCallback);\n    }\n    /**\n     *  Static methods to create Wallet instances.\n     */\n    static createRandom(options) {\n        let entropy = randomBytes(16);\n        if (!options) {\n            options = {};\n        }\n        if (options.extraEntropy) {\n            entropy = arrayify(hexDataSlice(keccak256(concat([entropy, options.extraEntropy])), 0, 16));\n        }\n        const mnemonic = entropyToMnemonic(entropy, options.locale);\n        return Wallet.fromMnemonic(mnemonic, options.path, options.locale);\n    }\n    static fromEncryptedJson(json, password, progressCallback) {\n        return decryptJsonWallet(json, password, progressCallback).then((account) => {\n            return new Wallet(account);\n        });\n    }\n    static fromEncryptedJsonSync(json, password) {\n        return new Wallet(decryptJsonWalletSync(json, password));\n    }\n    static fromMnemonic(mnemonic, path, wordlist) {\n        if (!path) {\n            path = defaultPath;\n        }\n        return new Wallet(HDNode.fromMnemonic(mnemonic, null, wordlist).derivePath(path));\n    }\n}\nexport function verifyMessage(message, signature) {\n    return recoverAddress(hashMessage(message), signature);\n}\nexport function verifyTypedData(domain, types, value, signature) {\n    return recoverAddress(_TypedDataEncoder.hash(domain, types, value), signature);\n}\n//# sourceMappingURL=index.js.map","/**\n * var basex = require(\"base-x\");\n *\n * This implementation is heavily based on base-x. The main reason to\n * deviate was to prevent the dependency of Buffer.\n *\n * Contributors:\n *\n * base-x encoding\n * Forked from https://github.com/cryptocoinjs/bs58\n * Originally written by Mike Hearn for BitcoinJ\n * Copyright (c) 2011 Google Inc\n * Ported to JavaScript by Stefan Thomas\n * Merged Buffer refactorings from base58-native by Stephen Pair\n * Copyright (c) 2013 BitPay Inc\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n */\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nexport class BaseX {\n    constructor(alphabet) {\n        defineReadOnly(this, \"alphabet\", alphabet);\n        defineReadOnly(this, \"base\", alphabet.length);\n        defineReadOnly(this, \"_alphabetMap\", {});\n        defineReadOnly(this, \"_leader\", alphabet.charAt(0));\n        // pre-compute lookup table\n        for (let i = 0; i < alphabet.length; i++) {\n            this._alphabetMap[alphabet.charAt(i)] = i;\n        }\n    }\n    encode(value) {\n        let source = arrayify(value);\n        if (source.length === 0) {\n            return \"\";\n        }\n        let digits = [0];\n        for (let i = 0; i < source.length; ++i) {\n            let carry = source[i];\n            for (let j = 0; j < digits.length; ++j) {\n                carry += digits[j] << 8;\n                digits[j] = carry % this.base;\n                carry = (carry / this.base) | 0;\n            }\n            while (carry > 0) {\n                digits.push(carry % this.base);\n                carry = (carry / this.base) | 0;\n            }\n        }\n        let string = \"\";\n        // deal with leading zeros\n        for (let k = 0; source[k] === 0 && k < source.length - 1; ++k) {\n            string += this._leader;\n        }\n        // convert digits to a string\n        for (let q = digits.length - 1; q >= 0; --q) {\n            string += this.alphabet[digits[q]];\n        }\n        return string;\n    }\n    decode(value) {\n        if (typeof (value) !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n        let bytes = [];\n        if (value.length === 0) {\n            return new Uint8Array(bytes);\n        }\n        bytes.push(0);\n        for (let i = 0; i < value.length; i++) {\n            let byte = this._alphabetMap[value[i]];\n            if (byte === undefined) {\n                throw new Error(\"Non-base\" + this.base + \" character\");\n            }\n            let carry = byte;\n            for (let j = 0; j < bytes.length; ++j) {\n                carry += bytes[j] * this.base;\n                bytes[j] = carry & 0xff;\n                carry >>= 8;\n            }\n            while (carry > 0) {\n                bytes.push(carry & 0xff);\n                carry >>= 8;\n            }\n        }\n        // deal with leading zeros\n        for (let k = 0; value[k] === this._leader && k < value.length - 1; ++k) {\n            bytes.push(0);\n        }\n        return arrayify(new Uint8Array(bytes.reverse()));\n    }\n}\nconst Base32 = new BaseX(\"abcdefghijklmnopqrstuvwxyz234567\");\nconst Base58 = new BaseX(\"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\");\nexport { Base32, Base58 };\n//console.log(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\"))\n//console.log(Base58.encode(Base58.decode(\"Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj\")))\n//# sourceMappingURL=index.js.map","export const version = \"sha2/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { computeHmac } from \"@ethersproject/sha2\";\nexport function pbkdf2(password, salt, iterations, keylen, hashAlgorithm) {\n    password = arrayify(password);\n    salt = arrayify(salt);\n    let hLen;\n    let l = 1;\n    const DK = new Uint8Array(keylen);\n    const block1 = new Uint8Array(salt.length + 4);\n    block1.set(salt);\n    //salt.copy(block1, 0, 0, salt.length)\n    let r;\n    let T;\n    for (let i = 1; i <= l; i++) {\n        //block1.writeUInt32BE(i, salt.length)\n        block1[salt.length] = (i >> 24) & 0xff;\n        block1[salt.length + 1] = (i >> 16) & 0xff;\n        block1[salt.length + 2] = (i >> 8) & 0xff;\n        block1[salt.length + 3] = i & 0xff;\n        //let U = createHmac(password).update(block1).digest();\n        let U = arrayify(computeHmac(hashAlgorithm, password, block1));\n        if (!hLen) {\n            hLen = U.length;\n            T = new Uint8Array(hLen);\n            l = Math.ceil(keylen / hLen);\n            r = keylen - (l - 1) * hLen;\n        }\n        //U.copy(T, 0, 0, hLen)\n        T.set(U);\n        for (let j = 1; j < iterations; j++) {\n            //U = createHmac(password).update(U).digest();\n            U = arrayify(computeHmac(hashAlgorithm, password, U));\n            for (let k = 0; k < hLen; k++)\n                T[k] ^= U[k];\n        }\n        const destPos = (i - 1) * hLen;\n        const len = (i === l ? r : hLen);\n        //T.copy(DK, destPos, 0, len)\n        DK.set(arrayify(T).slice(0, len), destPos);\n    }\n    return hexlify(DK);\n}\n//# sourceMappingURL=pbkdf2.js.map","export const HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\n//# sourceMappingURL=hashes.js.map","\"use strict\";\nimport { ConstructorFragment, ErrorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, ParamType } from \"./fragments\";\nimport { AbiCoder, defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors, Indexed, Interface, LogDescription, TransactionDescription } from \"./interface\";\nexport { ConstructorFragment, ErrorFragment, EventFragment, Fragment, FunctionFragment, ParamType, FormatTypes, AbiCoder, defaultAbiCoder, Interface, Indexed, checkResultErrors, LogDescription, TransactionDescription };\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatBytes32String = exports.Utf8ErrorFuncs = exports.toUtf8String = exports.toUtf8CodePoints = exports.toUtf8Bytes = exports._toEscapedUtf8String = exports.nameprep = exports.hexDataSlice = exports.hexDataLength = exports.hexZeroPad = exports.hexValue = exports.hexStripZeros = exports.hexConcat = exports.isHexString = exports.hexlify = exports.base64 = exports.base58 = exports.TransactionDescription = exports.LogDescription = exports.Interface = exports.SigningKey = exports.HDNode = exports.defaultPath = exports.isBytesLike = exports.isBytes = exports.zeroPad = exports.stripZeros = exports.concat = exports.arrayify = exports.shallowCopy = exports.resolveProperties = exports.getStatic = exports.defineReadOnly = exports.deepCopy = exports.checkProperties = exports.poll = exports.fetchJson = exports._fetchData = exports.RLP = exports.Logger = exports.checkResultErrors = exports.FormatTypes = exports.ParamType = exports.FunctionFragment = exports.EventFragment = exports.ErrorFragment = exports.ConstructorFragment = exports.Fragment = exports.defaultAbiCoder = exports.AbiCoder = void 0;\nexports.Indexed = exports.Utf8ErrorReason = exports.UnicodeNormalizationForm = exports.SupportedAlgorithm = exports.mnemonicToSeed = exports.isValidMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.getAccountPath = exports.verifyTypedData = exports.verifyMessage = exports.recoverPublicKey = exports.computePublicKey = exports.recoverAddress = exports.computeAddress = exports.getJsonWalletAddress = exports.TransactionTypes = exports.serializeTransaction = exports.parseTransaction = exports.accessListify = exports.joinSignature = exports.splitSignature = exports.soliditySha256 = exports.solidityKeccak256 = exports.solidityPack = exports.shuffled = exports.randomBytes = exports.sha512 = exports.sha256 = exports.ripemd160 = exports.keccak256 = exports.computeHmac = exports.commify = exports.parseUnits = exports.formatUnits = exports.parseEther = exports.formatEther = exports.isAddress = exports.getCreate2Address = exports.getContractAddress = exports.getIcapAddress = exports.getAddress = exports._TypedDataEncoder = exports.id = exports.isValidName = exports.namehash = exports.hashMessage = exports.dnsEncode = exports.parseBytes32String = void 0;\nvar abi_1 = require(\"@ethersproject/abi\");\nObject.defineProperty(exports, \"AbiCoder\", { enumerable: true, get: function () { return abi_1.AbiCoder; } });\nObject.defineProperty(exports, \"checkResultErrors\", { enumerable: true, get: function () { return abi_1.checkResultErrors; } });\nObject.defineProperty(exports, \"ConstructorFragment\", { enumerable: true, get: function () { return abi_1.ConstructorFragment; } });\nObject.defineProperty(exports, \"defaultAbiCoder\", { enumerable: true, get: function () { return abi_1.defaultAbiCoder; } });\nObject.defineProperty(exports, \"ErrorFragment\", { enumerable: true, get: function () { return abi_1.ErrorFragment; } });\nObject.defineProperty(exports, \"EventFragment\", { enumerable: true, get: function () { return abi_1.EventFragment; } });\nObject.defineProperty(exports, \"FormatTypes\", { enumerable: true, get: function () { return abi_1.FormatTypes; } });\nObject.defineProperty(exports, \"Fragment\", { enumerable: true, get: function () { return abi_1.Fragment; } });\nObject.defineProperty(exports, \"FunctionFragment\", { enumerable: true, get: function () { return abi_1.FunctionFragment; } });\nObject.defineProperty(exports, \"Indexed\", { enumerable: true, get: function () { return abi_1.Indexed; } });\nObject.defineProperty(exports, \"Interface\", { enumerable: true, get: function () { return abi_1.Interface; } });\nObject.defineProperty(exports, \"LogDescription\", { enumerable: true, get: function () { return abi_1.LogDescription; } });\nObject.defineProperty(exports, \"ParamType\", { enumerable: true, get: function () { return abi_1.ParamType; } });\nObject.defineProperty(exports, \"TransactionDescription\", { enumerable: true, get: function () { return abi_1.TransactionDescription; } });\nvar address_1 = require(\"@ethersproject/address\");\nObject.defineProperty(exports, \"getAddress\", { enumerable: true, get: function () { return address_1.getAddress; } });\nObject.defineProperty(exports, \"getCreate2Address\", { enumerable: true, get: function () { return address_1.getCreate2Address; } });\nObject.defineProperty(exports, \"getContractAddress\", { enumerable: true, get: function () { return address_1.getContractAddress; } });\nObject.defineProperty(exports, \"getIcapAddress\", { enumerable: true, get: function () { return address_1.getIcapAddress; } });\nObject.defineProperty(exports, \"isAddress\", { enumerable: true, get: function () { return address_1.isAddress; } });\nvar base64 = __importStar(require(\"@ethersproject/base64\"));\nexports.base64 = base64;\nvar basex_1 = require(\"@ethersproject/basex\");\nObject.defineProperty(exports, \"base58\", { enumerable: true, get: function () { return basex_1.Base58; } });\nvar bytes_1 = require(\"@ethersproject/bytes\");\nObject.defineProperty(exports, \"arrayify\", { enumerable: true, get: function () { return bytes_1.arrayify; } });\nObject.defineProperty(exports, \"concat\", { enumerable: true, get: function () { return bytes_1.concat; } });\nObject.defineProperty(exports, \"hexConcat\", { enumerable: true, get: function () { return bytes_1.hexConcat; } });\nObject.defineProperty(exports, \"hexDataSlice\", { enumerable: true, get: function () { return bytes_1.hexDataSlice; } });\nObject.defineProperty(exports, \"hexDataLength\", { enumerable: true, get: function () { return bytes_1.hexDataLength; } });\nObject.defineProperty(exports, \"hexlify\", { enumerable: true, get: function () { return bytes_1.hexlify; } });\nObject.defineProperty(exports, \"hexStripZeros\", { enumerable: true, get: function () { return bytes_1.hexStripZeros; } });\nObject.defineProperty(exports, \"hexValue\", { enumerable: true, get: function () { return bytes_1.hexValue; } });\nObject.defineProperty(exports, \"hexZeroPad\", { enumerable: true, get: function () { return bytes_1.hexZeroPad; } });\nObject.defineProperty(exports, \"isBytes\", { enumerable: true, get: function () { return bytes_1.isBytes; } });\nObject.defineProperty(exports, \"isBytesLike\", { enumerable: true, get: function () { return bytes_1.isBytesLike; } });\nObject.defineProperty(exports, \"isHexString\", { enumerable: true, get: function () { return bytes_1.isHexString; } });\nObject.defineProperty(exports, \"joinSignature\", { enumerable: true, get: function () { return bytes_1.joinSignature; } });\nObject.defineProperty(exports, \"zeroPad\", { enumerable: true, get: function () { return bytes_1.zeroPad; } });\nObject.defineProperty(exports, \"splitSignature\", { enumerable: true, get: function () { return bytes_1.splitSignature; } });\nObject.defineProperty(exports, \"stripZeros\", { enumerable: true, get: function () { return bytes_1.stripZeros; } });\nvar hash_1 = require(\"@ethersproject/hash\");\nObject.defineProperty(exports, \"_TypedDataEncoder\", { enumerable: true, get: function () { return hash_1._TypedDataEncoder; } });\nObject.defineProperty(exports, \"dnsEncode\", { enumerable: true, get: function () { return hash_1.dnsEncode; } });\nObject.defineProperty(exports, \"hashMessage\", { enumerable: true, get: function () { return hash_1.hashMessage; } });\nObject.defineProperty(exports, \"id\", { enumerable: true, get: function () { return hash_1.id; } });\nObject.defineProperty(exports, \"isValidName\", { enumerable: true, get: function () { return hash_1.isValidName; } });\nObject.defineProperty(exports, \"namehash\", { enumerable: true, get: function () { return hash_1.namehash; } });\nvar hdnode_1 = require(\"@ethersproject/hdnode\");\nObject.defineProperty(exports, \"defaultPath\", { enumerable: true, get: function () { return hdnode_1.defaultPath; } });\nObject.defineProperty(exports, \"entropyToMnemonic\", { enumerable: true, get: function () { return hdnode_1.entropyToMnemonic; } });\nObject.defineProperty(exports, \"getAccountPath\", { enumerable: true, get: function () { return hdnode_1.getAccountPath; } });\nObject.defineProperty(exports, \"HDNode\", { enumerable: true, get: function () { return hdnode_1.HDNode; } });\nObject.defineProperty(exports, \"isValidMnemonic\", { enumerable: true, get: function () { return hdnode_1.isValidMnemonic; } });\nObject.defineProperty(exports, \"mnemonicToEntropy\", { enumerable: true, get: function () { return hdnode_1.mnemonicToEntropy; } });\nObject.defineProperty(exports, \"mnemonicToSeed\", { enumerable: true, get: function () { return hdnode_1.mnemonicToSeed; } });\nvar json_wallets_1 = require(\"@ethersproject/json-wallets\");\nObject.defineProperty(exports, \"getJsonWalletAddress\", { enumerable: true, get: function () { return json_wallets_1.getJsonWalletAddress; } });\nvar keccak256_1 = require(\"@ethersproject/keccak256\");\nObject.defineProperty(exports, \"keccak256\", { enumerable: true, get: function () { return keccak256_1.keccak256; } });\nvar logger_1 = require(\"@ethersproject/logger\");\nObject.defineProperty(exports, \"Logger\", { enumerable: true, get: function () { return logger_1.Logger; } });\nvar sha2_1 = require(\"@ethersproject/sha2\");\nObject.defineProperty(exports, \"computeHmac\", { enumerable: true, get: function () { return sha2_1.computeHmac; } });\nObject.defineProperty(exports, \"ripemd160\", { enumerable: true, get: function () { return sha2_1.ripemd160; } });\nObject.defineProperty(exports, \"sha256\", { enumerable: true, get: function () { return sha2_1.sha256; } });\nObject.defineProperty(exports, \"sha512\", { enumerable: true, get: function () { return sha2_1.sha512; } });\nvar solidity_1 = require(\"@ethersproject/solidity\");\nObject.defineProperty(exports, \"solidityKeccak256\", { enumerable: true, get: function () { return solidity_1.keccak256; } });\nObject.defineProperty(exports, \"solidityPack\", { enumerable: true, get: function () { return solidity_1.pack; } });\nObject.defineProperty(exports, \"soliditySha256\", { enumerable: true, get: function () { return solidity_1.sha256; } });\nvar random_1 = require(\"@ethersproject/random\");\nObject.defineProperty(exports, \"randomBytes\", { enumerable: true, get: function () { return random_1.randomBytes; } });\nObject.defineProperty(exports, \"shuffled\", { enumerable: true, get: function () { return random_1.shuffled; } });\nvar properties_1 = require(\"@ethersproject/properties\");\nObject.defineProperty(exports, \"checkProperties\", { enumerable: true, get: function () { return properties_1.checkProperties; } });\nObject.defineProperty(exports, \"deepCopy\", { enumerable: true, get: function () { return properties_1.deepCopy; } });\nObject.defineProperty(exports, \"defineReadOnly\", { enumerable: true, get: function () { return properties_1.defineReadOnly; } });\nObject.defineProperty(exports, \"getStatic\", { enumerable: true, get: function () { return properties_1.getStatic; } });\nObject.defineProperty(exports, \"resolveProperties\", { enumerable: true, get: function () { return properties_1.resolveProperties; } });\nObject.defineProperty(exports, \"shallowCopy\", { enumerable: true, get: function () { return properties_1.shallowCopy; } });\nvar RLP = __importStar(require(\"@ethersproject/rlp\"));\nexports.RLP = RLP;\nvar signing_key_1 = require(\"@ethersproject/signing-key\");\nObject.defineProperty(exports, \"computePublicKey\", { enumerable: true, get: function () { return signing_key_1.computePublicKey; } });\nObject.defineProperty(exports, \"recoverPublicKey\", { enumerable: true, get: function () { return signing_key_1.recoverPublicKey; } });\nObject.defineProperty(exports, \"SigningKey\", { enumerable: true, get: function () { return signing_key_1.SigningKey; } });\nvar strings_1 = require(\"@ethersproject/strings\");\nObject.defineProperty(exports, \"formatBytes32String\", { enumerable: true, get: function () { return strings_1.formatBytes32String; } });\nObject.defineProperty(exports, \"nameprep\", { enumerable: true, get: function () { return strings_1.nameprep; } });\nObject.defineProperty(exports, \"parseBytes32String\", { enumerable: true, get: function () { return strings_1.parseBytes32String; } });\nObject.defineProperty(exports, \"_toEscapedUtf8String\", { enumerable: true, get: function () { return strings_1._toEscapedUtf8String; } });\nObject.defineProperty(exports, \"toUtf8Bytes\", { enumerable: true, get: function () { return strings_1.toUtf8Bytes; } });\nObject.defineProperty(exports, \"toUtf8CodePoints\", { enumerable: true, get: function () { return strings_1.toUtf8CodePoints; } });\nObject.defineProperty(exports, \"toUtf8String\", { enumerable: true, get: function () { return strings_1.toUtf8String; } });\nObject.defineProperty(exports, \"Utf8ErrorFuncs\", { enumerable: true, get: function () { return strings_1.Utf8ErrorFuncs; } });\nvar transactions_1 = require(\"@ethersproject/transactions\");\nObject.defineProperty(exports, \"accessListify\", { enumerable: true, get: function () { return transactions_1.accessListify; } });\nObject.defineProperty(exports, \"computeAddress\", { enumerable: true, get: function () { return transactions_1.computeAddress; } });\nObject.defineProperty(exports, \"parseTransaction\", { enumerable: true, get: function () { return transactions_1.parse; } });\nObject.defineProperty(exports, \"recoverAddress\", { enumerable: true, get: function () { return transactions_1.recoverAddress; } });\nObject.defineProperty(exports, \"serializeTransaction\", { enumerable: true, get: function () { return transactions_1.serialize; } });\nObject.defineProperty(exports, \"TransactionTypes\", { enumerable: true, get: function () { return transactions_1.TransactionTypes; } });\nvar units_1 = require(\"@ethersproject/units\");\nObject.defineProperty(exports, \"commify\", { enumerable: true, get: function () { return units_1.commify; } });\nObject.defineProperty(exports, \"formatEther\", { enumerable: true, get: function () { return units_1.formatEther; } });\nObject.defineProperty(exports, \"parseEther\", { enumerable: true, get: function () { return units_1.parseEther; } });\nObject.defineProperty(exports, \"formatUnits\", { enumerable: true, get: function () { return units_1.formatUnits; } });\nObject.defineProperty(exports, \"parseUnits\", { enumerable: true, get: function () { return units_1.parseUnits; } });\nvar wallet_1 = require(\"@ethersproject/wallet\");\nObject.defineProperty(exports, \"verifyMessage\", { enumerable: true, get: function () { return wallet_1.verifyMessage; } });\nObject.defineProperty(exports, \"verifyTypedData\", { enumerable: true, get: function () { return wallet_1.verifyTypedData; } });\nvar web_1 = require(\"@ethersproject/web\");\nObject.defineProperty(exports, \"_fetchData\", { enumerable: true, get: function () { return web_1._fetchData; } });\nObject.defineProperty(exports, \"fetchJson\", { enumerable: true, get: function () { return web_1.fetchJson; } });\nObject.defineProperty(exports, \"poll\", { enumerable: true, get: function () { return web_1.poll; } });\n////////////////////////\n// Enums\nvar sha2_2 = require(\"@ethersproject/sha2\");\nObject.defineProperty(exports, \"SupportedAlgorithm\", { enumerable: true, get: function () { return sha2_2.SupportedAlgorithm; } });\nvar strings_2 = require(\"@ethersproject/strings\");\nObject.defineProperty(exports, \"UnicodeNormalizationForm\", { enumerable: true, get: function () { return strings_2.UnicodeNormalizationForm; } });\nObject.defineProperty(exports, \"Utf8ErrorReason\", { enumerable: true, get: function () { return strings_2.Utf8ErrorReason; } });\n//# sourceMappingURL=utils.js.map","\"use strict\";\nimport { arrayify, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nexport function checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nexport class Coder {\n    constructor(name, type, localName, dynamic) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    _throwError(message, value) {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n}\nexport class Writer {\n    constructor(wordSize) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n    get data() {\n        return hexConcat(this._data);\n    }\n    get length() { return this._dataLength; }\n    _writeData(data) {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n    appendWriter(writer) {\n        return this._writeData(concat(writer._data));\n    }\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value) {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([bytes, this._padding.slice(paddingOffset)]);\n        }\n        return this._writeData(bytes);\n    }\n    _getValue(value) {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n        }\n        return bytes;\n    }\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value) {\n        return this._writeData(this._getValue(value));\n    }\n    writeUpdatableValue() {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\nexport class Reader {\n    constructor(data, wordSize, coerceFunc, allowLoose) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n        this._offset = 0;\n    }\n    get data() { return hexlify(this._data); }\n    get consumed() { return this._offset; }\n    // The default Coerce function\n    static coerce(name, value) {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) {\n            value = value.toNumber();\n        }\n        return value;\n    }\n    coerce(name, value) {\n        if (this._coerceFunc) {\n            return this._coerceFunc(name, value);\n        }\n        return Reader.coerce(name, value);\n    }\n    _peekBytes(offset, length, loose) {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            }\n            else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength);\n    }\n    subReader(offset) {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n    readBytes(length, loose) {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    readValue() {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n//# sourceMappingURL=abstract-coder.js.map","export const version = \"json-wallets/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nexport function shuffled(array) {\n    array = array.slice();\n    for (let i = array.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const tmp = array[i];\n        array[i] = array[j];\n        array[j] = tmp;\n    }\n    return array;\n}\n//# sourceMappingURL=shuffle.js.map","\"use strict\";\nimport { Wordlist } from \"./wordlist\";\nconst words = \"AbandonAbilityAbleAboutAboveAbsentAbsorbAbstractAbsurdAbuseAccessAccidentAccountAccuseAchieveAcidAcousticAcquireAcrossActActionActorActressActualAdaptAddAddictAddressAdjustAdmitAdultAdvanceAdviceAerobicAffairAffordAfraidAgainAgeAgentAgreeAheadAimAirAirportAisleAlarmAlbumAlcoholAlertAlienAllAlleyAllowAlmostAloneAlphaAlreadyAlsoAlterAlwaysAmateurAmazingAmongAmountAmusedAnalystAnchorAncientAngerAngleAngryAnimalAnkleAnnounceAnnualAnotherAnswerAntennaAntiqueAnxietyAnyApartApologyAppearAppleApproveAprilArchArcticAreaArenaArgueArmArmedArmorArmyAroundArrangeArrestArriveArrowArtArtefactArtistArtworkAskAspectAssaultAssetAssistAssumeAsthmaAthleteAtomAttackAttendAttitudeAttractAuctionAuditAugustAuntAuthorAutoAutumnAverageAvocadoAvoidAwakeAwareAwayAwesomeAwfulAwkwardAxisBabyBachelorBaconBadgeBagBalanceBalconyBallBambooBananaBannerBarBarelyBargainBarrelBaseBasicBasketBattleBeachBeanBeautyBecauseBecomeBeefBeforeBeginBehaveBehindBelieveBelowBeltBenchBenefitBestBetrayBetterBetweenBeyondBicycleBidBikeBindBiologyBirdBirthBitterBlackBladeBlameBlanketBlastBleakBlessBlindBloodBlossomBlouseBlueBlurBlushBoardBoatBodyBoilBombBoneBonusBookBoostBorderBoringBorrowBossBottomBounceBoxBoyBracketBrainBrandBrassBraveBreadBreezeBrickBridgeBriefBrightBringBriskBroccoliBrokenBronzeBroomBrotherBrownBrushBubbleBuddyBudgetBuffaloBuildBulbBulkBulletBundleBunkerBurdenBurgerBurstBusBusinessBusyButterBuyerBuzzCabbageCabinCableCactusCageCakeCallCalmCameraCampCanCanalCancelCandyCannonCanoeCanvasCanyonCapableCapitalCaptainCarCarbonCardCargoCarpetCarryCartCaseCashCasinoCastleCasualCatCatalogCatchCategoryCattleCaughtCauseCautionCaveCeilingCeleryCementCensusCenturyCerealCertainChairChalkChampionChangeChaosChapterChargeChaseChatCheapCheckCheeseChefCherryChestChickenChiefChildChimneyChoiceChooseChronicChuckleChunkChurnCigarCinnamonCircleCitizenCityCivilClaimClapClarifyClawClayCleanClerkCleverClickClientCliffClimbClinicClipClockClogCloseClothCloudClownClubClumpClusterClutchCoachCoastCoconutCodeCoffeeCoilCoinCollectColorColumnCombineComeComfortComicCommonCompanyConcertConductConfirmCongressConnectConsiderControlConvinceCookCoolCopperCopyCoralCoreCornCorrectCostCottonCouchCountryCoupleCourseCousinCoverCoyoteCrackCradleCraftCramCraneCrashCraterCrawlCrazyCreamCreditCreekCrewCricketCrimeCrispCriticCropCrossCrouchCrowdCrucialCruelCruiseCrumbleCrunchCrushCryCrystalCubeCultureCupCupboardCuriousCurrentCurtainCurveCushionCustomCuteCycleDadDamageDampDanceDangerDaringDashDaughterDawnDayDealDebateDebrisDecadeDecemberDecideDeclineDecorateDecreaseDeerDefenseDefineDefyDegreeDelayDeliverDemandDemiseDenialDentistDenyDepartDependDepositDepthDeputyDeriveDescribeDesertDesignDeskDespairDestroyDetailDetectDevelopDeviceDevoteDiagramDialDiamondDiaryDiceDieselDietDifferDigitalDignityDilemmaDinnerDinosaurDirectDirtDisagreeDiscoverDiseaseDishDismissDisorderDisplayDistanceDivertDivideDivorceDizzyDoctorDocumentDogDollDolphinDomainDonateDonkeyDonorDoorDoseDoubleDoveDraftDragonDramaDrasticDrawDreamDressDriftDrillDrinkDripDriveDropDrumDryDuckDumbDuneDuringDustDutchDutyDwarfDynamicEagerEagleEarlyEarnEarthEasilyEastEasyEchoEcologyEconomyEdgeEditEducateEffortEggEightEitherElbowElderElectricElegantElementElephantElevatorEliteElseEmbarkEmbodyEmbraceEmergeEmotionEmployEmpowerEmptyEnableEnactEndEndlessEndorseEnemyEnergyEnforceEngageEngineEnhanceEnjoyEnlistEnoughEnrichEnrollEnsureEnterEntireEntryEnvelopeEpisodeEqualEquipEraEraseErodeErosionErrorEruptEscapeEssayEssenceEstateEternalEthicsEvidenceEvilEvokeEvolveExactExampleExcessExchangeExciteExcludeExcuseExecuteExerciseExhaustExhibitExileExistExitExoticExpandExpectExpireExplainExposeExpressExtendExtraEyeEyebrowFabricFaceFacultyFadeFaintFaithFallFalseFameFamilyFamousFanFancyFantasyFarmFashionFatFatalFatherFatigueFaultFavoriteFeatureFebruaryFederalFeeFeedFeelFemaleFenceFestivalFetchFeverFewFiberFictionFieldFigureFileFilmFilterFinalFindFineFingerFinishFireFirmFirstFiscalFishFitFitnessFixFlagFlameFlashFlatFlavorFleeFlightFlipFloatFlockFloorFlowerFluidFlushFlyFoamFocusFogFoilFoldFollowFoodFootForceForestForgetForkFortuneForumForwardFossilFosterFoundFoxFragileFrameFrequentFreshFriendFringeFrogFrontFrostFrownFrozenFruitFuelFunFunnyFurnaceFuryFutureGadgetGainGalaxyGalleryGameGapGarageGarbageGardenGarlicGarmentGasGaspGateGatherGaugeGazeGeneralGeniusGenreGentleGenuineGestureGhostGiantGiftGiggleGingerGiraffeGirlGiveGladGlanceGlareGlassGlideGlimpseGlobeGloomGloryGloveGlowGlueGoatGoddessGoldGoodGooseGorillaGospelGossipGovernGownGrabGraceGrainGrantGrapeGrassGravityGreatGreenGridGriefGritGroceryGroupGrowGruntGuardGuessGuideGuiltGuitarGunGymHabitHairHalfHammerHamsterHandHappyHarborHardHarshHarvestHatHaveHawkHazardHeadHealthHeartHeavyHedgehogHeightHelloHelmetHelpHenHeroHiddenHighHillHintHipHireHistoryHobbyHockeyHoldHoleHolidayHollowHomeHoneyHoodHopeHornHorrorHorseHospitalHostHotelHourHoverHubHugeHumanHumbleHumorHundredHungryHuntHurdleHurryHurtHusbandHybridIceIconIdeaIdentifyIdleIgnoreIllIllegalIllnessImageImitateImmenseImmuneImpactImposeImproveImpulseInchIncludeIncomeIncreaseIndexIndicateIndoorIndustryInfantInflictInformInhaleInheritInitialInjectInjuryInmateInnerInnocentInputInquiryInsaneInsectInsideInspireInstallIntactInterestIntoInvestInviteInvolveIronIslandIsolateIssueItemIvoryJacketJaguarJarJazzJealousJeansJellyJewelJobJoinJokeJourneyJoyJudgeJuiceJumpJungleJuniorJunkJustKangarooKeenKeepKetchupKeyKickKidKidneyKindKingdomKissKitKitchenKiteKittenKiwiKneeKnifeKnockKnowLabLabelLaborLadderLadyLakeLampLanguageLaptopLargeLaterLatinLaughLaundryLavaLawLawnLawsuitLayerLazyLeaderLeafLearnLeaveLectureLeftLegLegalLegendLeisureLemonLendLengthLensLeopardLessonLetterLevelLiarLibertyLibraryLicenseLifeLiftLightLikeLimbLimitLinkLionLiquidListLittleLiveLizardLoadLoanLobsterLocalLockLogicLonelyLongLoopLotteryLoudLoungeLoveLoyalLuckyLuggageLumberLunarLunchLuxuryLyricsMachineMadMagicMagnetMaidMailMainMajorMakeMammalManManageMandateMangoMansionManualMapleMarbleMarchMarginMarineMarketMarriageMaskMassMasterMatchMaterialMathMatrixMatterMaximumMazeMeadowMeanMeasureMeatMechanicMedalMediaMelodyMeltMemberMemoryMentionMenuMercyMergeMeritMerryMeshMessageMetalMethodMiddleMidnightMilkMillionMimicMindMinimumMinorMinuteMiracleMirrorMiseryMissMistakeMixMixedMixtureMobileModelModifyMomMomentMonitorMonkeyMonsterMonthMoonMoralMoreMorningMosquitoMotherMotionMotorMountainMouseMoveMovieMuchMuffinMuleMultiplyMuscleMuseumMushroomMusicMustMutualMyselfMysteryMythNaiveNameNapkinNarrowNastyNationNatureNearNeckNeedNegativeNeglectNeitherNephewNerveNestNetNetworkNeutralNeverNewsNextNiceNightNobleNoiseNomineeNoodleNormalNorthNoseNotableNoteNothingNoticeNovelNowNuclearNumberNurseNutOakObeyObjectObligeObscureObserveObtainObviousOccurOceanOctoberOdorOffOfferOfficeOftenOilOkayOldOliveOlympicOmitOnceOneOnionOnlineOnlyOpenOperaOpinionOpposeOptionOrangeOrbitOrchardOrderOrdinaryOrganOrientOriginalOrphanOstrichOtherOutdoorOuterOutputOutsideOvalOvenOverOwnOwnerOxygenOysterOzonePactPaddlePagePairPalacePalmPandaPanelPanicPantherPaperParadeParentParkParrotPartyPassPatchPathPatientPatrolPatternPausePavePaymentPeacePeanutPearPeasantPelicanPenPenaltyPencilPeoplePepperPerfectPermitPersonPetPhonePhotoPhrasePhysicalPianoPicnicPicturePiecePigPigeonPillPilotPinkPioneerPipePistolPitchPizzaPlacePlanetPlasticPlatePlayPleasePledgePluckPlugPlungePoemPoetPointPolarPolePolicePondPonyPoolPopularPortionPositionPossiblePostPotatoPotteryPovertyPowderPowerPracticePraisePredictPreferPreparePresentPrettyPreventPricePridePrimaryPrintPriorityPrisonPrivatePrizeProblemProcessProduceProfitProgramProjectPromoteProofPropertyProsperProtectProudProvidePublicPuddingPullPulpPulsePumpkinPunchPupilPuppyPurchasePurityPurposePursePushPutPuzzlePyramidQualityQuantumQuarterQuestionQuickQuitQuizQuoteRabbitRaccoonRaceRackRadarRadioRailRainRaiseRallyRampRanchRandomRangeRapidRareRateRatherRavenRawRazorReadyRealReasonRebelRebuildRecallReceiveRecipeRecordRecycleReduceReflectReformRefuseRegionRegretRegularRejectRelaxReleaseReliefRelyRemainRememberRemindRemoveRenderRenewRentReopenRepairRepeatReplaceReportRequireRescueResembleResistResourceResponseResultRetireRetreatReturnReunionRevealReviewRewardRhythmRibRibbonRiceRichRideRidgeRifleRightRigidRingRiotRippleRiskRitualRivalRiverRoadRoastRobotRobustRocketRomanceRoofRookieRoomRoseRotateRoughRoundRouteRoyalRubberRudeRugRuleRunRunwayRuralSadSaddleSadnessSafeSailSaladSalmonSalonSaltSaluteSameSampleSandSatisfySatoshiSauceSausageSaveSayScaleScanScareScatterSceneSchemeSchoolScienceScissorsScorpionScoutScrapScreenScriptScrubSeaSearchSeasonSeatSecondSecretSectionSecuritySeedSeekSegmentSelectSellSeminarSeniorSenseSentenceSeriesServiceSessionSettleSetupSevenShadowShaftShallowShareShedShellSheriffShieldShiftShineShipShiverShockShoeShootShopShortShoulderShoveShrimpShrugShuffleShySiblingSickSideSiegeSightSignSilentSilkSillySilverSimilarSimpleSinceSingSirenSisterSituateSixSizeSkateSketchSkiSkillSkinSkirtSkullSlabSlamSleepSlenderSliceSlideSlightSlimSloganSlotSlowSlushSmallSmartSmileSmokeSmoothSnackSnakeSnapSniffSnowSoapSoccerSocialSockSodaSoftSolarSoldierSolidSolutionSolveSomeoneSongSoonSorrySortSoulSoundSoupSourceSouthSpaceSpareSpatialSpawnSpeakSpecialSpeedSpellSpendSphereSpiceSpiderSpikeSpinSpiritSplitSpoilSponsorSpoonSportSpotSpraySpreadSpringSpySquareSqueezeSquirrelStableStadiumStaffStageStairsStampStandStartStateStaySteakSteelStemStepStereoStickStillStingStockStomachStoneStoolStoryStoveStrategyStreetStrikeStrongStruggleStudentStuffStumbleStyleSubjectSubmitSubwaySuccessSuchSuddenSufferSugarSuggestSuitSummerSunSunnySunsetSuperSupplySupremeSureSurfaceSurgeSurpriseSurroundSurveySuspectSustainSwallowSwampSwapSwarmSwearSweetSwiftSwimSwingSwitchSwordSymbolSymptomSyrupSystemTableTackleTagTailTalentTalkTankTapeTargetTaskTasteTattooTaxiTeachTeamTellTenTenantTennisTentTermTestTextThankThatThemeThenTheoryThereTheyThingThisThoughtThreeThriveThrowThumbThunderTicketTideTigerTiltTimberTimeTinyTipTiredTissueTitleToastTobaccoTodayToddlerToeTogetherToiletTokenTomatoTomorrowToneTongueTonightToolToothTopTopicToppleTorchTornadoTortoiseTossTotalTouristTowardTowerTownToyTrackTradeTrafficTragicTrainTransferTrapTrashTravelTrayTreatTreeTrendTrialTribeTrickTriggerTrimTripTrophyTroubleTruckTrueTrulyTrumpetTrustTruthTryTubeTuitionTumbleTunaTunnelTurkeyTurnTurtleTwelveTwentyTwiceTwinTwistTwoTypeTypicalUglyUmbrellaUnableUnawareUncleUncoverUnderUndoUnfairUnfoldUnhappyUniformUniqueUnitUniverseUnknownUnlockUntilUnusualUnveilUpdateUpgradeUpholdUponUpperUpsetUrbanUrgeUsageUseUsedUsefulUselessUsualUtilityVacantVacuumVagueValidValleyValveVanVanishVaporVariousVastVaultVehicleVelvetVendorVentureVenueVerbVerifyVersionVeryVesselVeteranViableVibrantViciousVictoryVideoViewVillageVintageViolinVirtualVirusVisaVisitVisualVitalVividVocalVoiceVoidVolcanoVolumeVoteVoyageWageWagonWaitWalkWallWalnutWantWarfareWarmWarriorWashWaspWasteWaterWaveWayWealthWeaponWearWeaselWeatherWebWeddingWeekendWeirdWelcomeWestWetWhaleWhatWheatWheelWhenWhereWhipWhisperWideWidthWifeWildWillWinWindowWineWingWinkWinnerWinterWireWisdomWiseWishWitnessWolfWomanWonderWoodWoolWordWorkWorldWorryWorthWrapWreckWrestleWristWriteWrongYardYearYellowYouYoungYouthZebraZeroZoneZoo\";\nlet wordlist = null;\nfunction loadWords(lang) {\n    if (wordlist != null) {\n        return;\n    }\n    wordlist = words.replace(/([A-Z])/g, \" $1\").toLowerCase().substring(1).split(\" \");\n    // Verify the computed list matches the official list\n    /* istanbul ignore if */\n    if (Wordlist.check(lang) !== \"0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60\") {\n        wordlist = null;\n        throw new Error(\"BIP39 Wordlist for en (English) FAILED\");\n    }\n}\nclass LangEn extends Wordlist {\n    constructor() {\n        super(\"en\");\n    }\n    getWord(index) {\n        loadWords(this);\n        return wordlist[index];\n    }\n    getWordIndex(word) {\n        loadWords(this);\n        return wordlist.indexOf(word);\n    }\n}\nconst langEn = new LangEn();\nWordlist.register(langEn);\nexport { langEn };\n//# sourceMappingURL=lang-en.js.map","\"use strict\";\nimport { langEn as en } from \"./lang-en\";\nexport const wordlists = {\n    en: en\n};\n//# sourceMappingURL=wordlists.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class AddressCoder extends Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    defaultValue() {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n    encode(writer, value) {\n        try {\n            value = getAddress(value);\n        }\n        catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    constructor(coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n    defaultValue() {\n        return this.coder.defaultValue();\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nimport { Coder, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\nexport function pack(writer, coders, values) {\n    let arrayValues = null;\n    if (Array.isArray(values)) {\n        arrayValues = values;\n    }\n    else if (values && typeof (values) === \"object\") {\n        let unique = {};\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            unique[name] = true;\n            return values[name];\n        });\n    }\n    else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n        }\n        else {\n            coder.encode(staticWriter, value);\n        }\n    });\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\nexport function unpack(reader, coders) {\n    let values = [];\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n        let value = null;\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        else {\n            try {\n                value = coder.decode(reader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) {\n                accum[name] = 0;\n            }\n            accum[name]++;\n        }\n        return accum;\n    }, {});\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder, index) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) {\n            return;\n        }\n        if (name === \"length\") {\n            name = \"_length\";\n        }\n        if (values[name] != null) {\n            return;\n        }\n        const value = values[index];\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n        else {\n            values[name] = value;\n        }\n    });\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n    }\n    return Object.freeze(values);\n}\nexport class ArrayCoder extends Coder {\n    constructor(coder, length, localName) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        this.coder = coder;\n        this.length = length;\n    }\n    defaultValue() {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n    encode(writer, value) {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n        let count = this.length;\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName ? (\" \" + this.localName) : \"\"));\n        let coders = [];\n        for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return pack(writer, coders, value);\n    }\n    decode(reader) {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) {\n            coders.push(new AnonymousCoder(this.coder));\n        }\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n//# sourceMappingURL=array.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class BooleanCoder extends Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    defaultValue() {\n        return false;\n    }\n    encode(writer, value) {\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n//# sourceMappingURL=boolean.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class DynamicBytesCoder extends Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    defaultValue() {\n        return \"0x\";\n    }\n    encode(writer, value) {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n    defaultValue() {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n    encode(writer, value) {\n        let data = arrayify(value);\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class NullCoder extends Coder {\n    constructor(localName) {\n        super(\"null\", \"\", localName, false);\n    }\n    defaultValue() {\n        return null;\n    }\n    encode(writer, value) {\n        if (value != null) {\n            this._throwError(\"not null\", value);\n        }\n        return writer.writeBytes([]);\n    }\n    decode(reader) {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n//# sourceMappingURL=null.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\nimport { Coder } from \"./abstract-coder\";\nexport class NumberCoder extends Coder {\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        this.size = size;\n        this.signed = signed;\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, value) {\n        let v = BigNumber.from(value);\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        }\n        else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n        return writer.writeValue(v);\n    }\n    decode(reader) {\n        let value = reader.readValue().mask(this.size * 8);\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n        return reader.coerce(this.name, value);\n    }\n}\n//# sourceMappingURL=number.js.map","\"use strict\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { DynamicBytesCoder } from \"./bytes\";\nexport class StringCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"string\", localName);\n    }\n    defaultValue() {\n        return \"\";\n    }\n    encode(writer, value) {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n    decode(reader) {\n        return toUtf8String(super.decode(reader));\n    }\n}\n//# sourceMappingURL=string.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\nexport class TupleCoder extends Coder {\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, value) {\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n//# sourceMappingURL=tuple.js.map","\"use strict\";\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Reader, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\nimport { ParamType } from \"./fragments\";\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nexport class AbiCoder {\n    constructor(coerceFunc) {\n        logger.checkNew(new.target, AbiCoder);\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n    _getCoder(param) {\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n    _getWordSize() { return 32; }\n    _getReader(data, allowLoose) {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n    _getWriter() {\n        return new Writer(this._getWordSize());\n    }\n    getDefaultValue(types) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n    encode(types, values) {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    decode(types, data, loose) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\nexport const defaultAbiCoder = new AbiCoder();\n//# sourceMappingURL=abi-coder.js.map","export const version = \"hash/5.6.0\";\n//# sourceMappingURL=_version.js.map","// a string of all valid unicode whitespaces\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar replace = uncurryThis(''.replace);\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = replace(string, ltrim, '');\n    if (TYPE & 2) string = replace(string, rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nexport function isCrowdsaleWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    return (data.encseed && data.ethaddr);\n}\nexport function isKeystoreWallet(json) {\n    let data = null;\n    try {\n        data = JSON.parse(json);\n    }\n    catch (error) {\n        return false;\n    }\n    if (!data.version || parseInt(data.version) !== data.version || parseInt(data.version) !== 3) {\n        return false;\n    }\n    // @TODO: Put more checks to make sure it has kdf, iv and all that good stuff\n    return true;\n}\n//export function isJsonWallet(json: string): boolean {\n//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));\n//}\nexport function getJsonWalletAddress(json) {\n    if (isCrowdsaleWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).ethaddr);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    if (isKeystoreWallet(json)) {\n        try {\n            return getAddress(JSON.parse(json).address);\n        }\n        catch (error) {\n            return null;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=inspect.js.map","\"use strict\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Debugging line for testing browser lib in node\n//const window = { crypto: { getRandomValues: () => { } } };\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    throw new Error('unable to locate global object');\n}\n;\nconst anyGlobal = getGlobal();\nlet crypto = anyGlobal.crypto || anyGlobal.msCrypto;\nif (!crypto || !crypto.getRandomValues) {\n    logger.warn(\"WARNING: Missing strong random number source\");\n    crypto = {\n        getRandomValues: function (buffer) {\n            return logger.throwError(\"no secure random source avaialble\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"crypto.getRandomValues\"\n            });\n        }\n    };\n}\nexport function randomBytes(length) {\n    if (length <= 0 || length > 1024 || (length % 1) || length != length) {\n        logger.throwArgumentError(\"invalid length\", \"length\", length);\n    }\n    const result = new Uint8Array(length);\n    crypto.getRandomValues(result);\n    return arrayify(result);\n}\n;\n//# sourceMappingURL=random.js.map","export const version = \"contracts/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { checkResultErrors, Indexed, Interface } from \"@ethersproject/abi\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n///////////////////////////////\nconst allowedTransactionKeys = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true,\n    customData: true,\n    ccipReadEnabled: true\n};\nfunction resolveName(resolver, nameOrPromise) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const name = yield nameOrPromise;\n        if (typeof (name) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n        }\n        // If it is already an address, just use it (after adding checksum)\n        try {\n            return getAddress(name);\n        }\n        catch (error) { }\n        if (!resolver) {\n            logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"resolveName\"\n            });\n        }\n        const address = yield resolver.resolveName(name);\n        if (address == null) {\n            logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n        }\n        return address;\n    });\n}\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nfunction resolveAddresses(resolver, value, paramType) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (Array.isArray(paramType)) {\n            return yield Promise.all(paramType.map((paramType, index) => {\n                return resolveAddresses(resolver, ((Array.isArray(value)) ? value[index] : value[paramType.name]), paramType);\n            }));\n        }\n        if (paramType.type === \"address\") {\n            return yield resolveName(resolver, value);\n        }\n        if (paramType.type === \"tuple\") {\n            return yield resolveAddresses(resolver, value, paramType.components);\n        }\n        if (paramType.baseType === \"array\") {\n            if (!Array.isArray(value)) {\n                return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"value\",\n                    value\n                }));\n            }\n            return yield Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n        }\n        return value;\n    });\n}\nfunction populateTransaction(contract, fragment, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // If an extra argument is given, it is overrides\n        let overrides = {};\n        if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            overrides = shallowCopy(args.pop());\n        }\n        // Make sure the parameter count matches\n        logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n        // Populate \"from\" override (allow promises)\n        if (contract.signer) {\n            if (overrides.from) {\n                // Contracts with a Signer are from the Signer's frame-of-reference;\n                // but we allow overriding \"from\" if it matches the signer\n                overrides.from = resolveProperties({\n                    override: resolveName(contract.signer, overrides.from),\n                    signer: contract.signer.getAddress()\n                }).then((check) => __awaiter(this, void 0, void 0, function* () {\n                    if (getAddress(check.signer) !== check.override) {\n                        logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"overrides.from\"\n                        });\n                    }\n                    return check.override;\n                }));\n            }\n            else {\n                overrides.from = contract.signer.getAddress();\n            }\n        }\n        else if (overrides.from) {\n            overrides.from = resolveName(contract.provider, overrides.from);\n            //} else {\n            // Contracts without a signer can override \"from\", and if\n            // unspecified the zero address is used\n            //overrides.from = AddressZero;\n        }\n        // Wait for all dependencies to be resolved (prefer the signer over the provider)\n        const resolved = yield resolveProperties({\n            args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n            address: contract.resolvedAddress,\n            overrides: (resolveProperties(overrides) || {})\n        });\n        // The ABI coded transaction\n        const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n        const tx = {\n            data: data,\n            to: resolved.address\n        };\n        // Resolved Overrides\n        const ro = resolved.overrides;\n        // Populate simple overrides\n        if (ro.nonce != null) {\n            tx.nonce = BigNumber.from(ro.nonce).toNumber();\n        }\n        if (ro.gasLimit != null) {\n            tx.gasLimit = BigNumber.from(ro.gasLimit);\n        }\n        if (ro.gasPrice != null) {\n            tx.gasPrice = BigNumber.from(ro.gasPrice);\n        }\n        if (ro.maxFeePerGas != null) {\n            tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas);\n        }\n        if (ro.maxPriorityFeePerGas != null) {\n            tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas);\n        }\n        if (ro.from != null) {\n            tx.from = ro.from;\n        }\n        if (ro.type != null) {\n            tx.type = ro.type;\n        }\n        if (ro.accessList != null) {\n            tx.accessList = accessListify(ro.accessList);\n        }\n        // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n        if (tx.gasLimit == null && fragment.gas != null) {\n            // Compute the intrinsic gas cost for this transaction\n            // @TODO: This is based on the yellow paper as of Petersburg; this is something\n            // we may wish to parameterize in v6 as part of the Network object. Since this\n            // is always a non-nil to address, we can ignore G_create, but may wish to add\n            // similar logic to the ContractFactory.\n            let intrinsic = 21000;\n            const bytes = arrayify(data);\n            for (let i = 0; i < bytes.length; i++) {\n                intrinsic += 4;\n                if (bytes[i]) {\n                    intrinsic += 64;\n                }\n            }\n            tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n        }\n        // Populate \"value\" override\n        if (ro.value) {\n            const roValue = BigNumber.from(ro.value);\n            if (!roValue.isZero() && !fragment.payable) {\n                logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: overrides.value\n                });\n            }\n            tx.value = roValue;\n        }\n        if (ro.customData) {\n            tx.customData = shallowCopy(ro.customData);\n        }\n        if (ro.ccipReadEnabled) {\n            tx.ccipReadEnabled = !!ro.ccipReadEnabled;\n        }\n        // Remove the overrides\n        delete overrides.nonce;\n        delete overrides.gasLimit;\n        delete overrides.gasPrice;\n        delete overrides.from;\n        delete overrides.value;\n        delete overrides.type;\n        delete overrides.accessList;\n        delete overrides.maxFeePerGas;\n        delete overrides.maxPriorityFeePerGas;\n        delete overrides.customData;\n        delete overrides.ccipReadEnabled;\n        // Make sure there are no stray overrides, which may indicate a\n        // typo or using an unsupported key.\n        const leftovers = Object.keys(overrides).filter((key) => (overrides[key] != null));\n        if (leftovers.length) {\n            logger.throwError(`cannot override ${leftovers.map((l) => JSON.stringify(l)).join(\",\")}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides\",\n                overrides: leftovers\n            });\n        }\n        return tx;\n    });\n}\nfunction buildPopulate(contract, fragment) {\n    return function (...args) {\n        return populateTransaction(contract, fragment, args);\n    };\n}\nfunction buildEstimate(contract, fragment) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!signerOrProvider) {\n                logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"estimateGas\"\n                });\n            }\n            const tx = yield populateTransaction(contract, fragment, args);\n            return yield signerOrProvider.estimateGas(tx);\n        });\n    };\n}\nfunction addContractWait(contract, tx) {\n    const wait = tx.wait.bind(tx);\n    tx.wait = (confirmations) => {\n        return wait(confirmations).then((receipt) => {\n            receipt.events = receipt.logs.map((log) => {\n                let event = deepCopy(log);\n                let parsed = null;\n                try {\n                    parsed = contract.interface.parseLog(log);\n                }\n                catch (e) { }\n                // Successfully parsed the event log; include it\n                if (parsed) {\n                    event.args = parsed.args;\n                    event.decode = (data, topics) => {\n                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                    };\n                    event.event = parsed.name;\n                    event.eventSignature = parsed.signature;\n                }\n                // Useful operations\n                event.removeListener = () => { return contract.provider; };\n                event.getBlock = () => {\n                    return contract.provider.getBlock(receipt.blockHash);\n                };\n                event.getTransaction = () => {\n                    return contract.provider.getTransaction(receipt.transactionHash);\n                };\n                event.getTransactionReceipt = () => {\n                    return Promise.resolve(receipt);\n                };\n                return event;\n            });\n            return receipt;\n        });\n    };\n}\nfunction buildCall(contract, fragment, collapseSimple) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Extract the \"blockTag\" override if present\n            let blockTag = undefined;\n            if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n                const overrides = shallowCopy(args.pop());\n                if (overrides.blockTag != null) {\n                    blockTag = yield overrides.blockTag;\n                }\n                delete overrides.blockTag;\n                args.push(overrides);\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed(blockTag);\n            }\n            // Call a node and get the result\n            const tx = yield populateTransaction(contract, fragment, args);\n            const result = yield signerOrProvider.call(tx, blockTag);\n            try {\n                let value = contract.interface.decodeFunctionResult(fragment, result);\n                if (collapseSimple && fragment.outputs.length === 1) {\n                    value = value[0];\n                }\n                return value;\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    error.address = contract.address;\n                    error.args = args;\n                    error.transaction = tx;\n                }\n                throw error;\n            }\n        });\n    };\n}\nfunction buildSend(contract, fragment) {\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!contract.signer) {\n                logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"sendTransaction\"\n                });\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed();\n            }\n            const txRequest = yield populateTransaction(contract, fragment, args);\n            const tx = yield contract.signer.sendTransaction(txRequest);\n            // Tweak the tx.wait so the receipt has extra properties\n            addContractWait(contract, tx);\n            return tx;\n        });\n    };\n}\nfunction buildDefault(contract, fragment, collapseSimple) {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\nfunction getEventTag(filter) {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\") : \"\");\n}\nclass RunningEvent {\n    constructor(tag, filter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [];\n    }\n    addListener(listener, once) {\n        this._listeners.push({ listener: listener, once: once });\n    }\n    removeListener(listener) {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) {\n                return true;\n            }\n            done = true;\n            return false;\n        });\n    }\n    removeAllListeners() {\n        this._listeners = [];\n    }\n    listeners() {\n        return this._listeners.map((i) => i.listener);\n    }\n    listenerCount() {\n        return this._listeners.length;\n    }\n    run(args) {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n            const argsCopy = args.slice();\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n        return listenerCount;\n    }\n    prepareEvent(event) {\n    }\n    // Returns the array that will be applied to an emit\n    getEmit(event) {\n        return [event];\n    }\n}\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    constructor(address, contractInterface, fragment, topics) {\n        const filter = {\n            address: address\n        };\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) {\n                logger.throwArgumentError(\"topic mismatch\", \"topics\", topics);\n            }\n            filter.topics = topics.slice();\n        }\n        else {\n            filter.topics = [topic];\n        }\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n        event.decode = (data, topics) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        }\n        catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n    getEmit(event) {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) {\n            throw errors[0].error;\n        }\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n// A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    constructor(address, contractInterface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n            event.decode = (data, topics) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n            event.args = parsed.args;\n        }\n        catch (error) {\n            // No matching event\n        }\n    }\n}\nexport class BaseContract {\n    constructor(addressOrName, contractInterface, signerOrProvider) {\n        logger.checkNew(new.target, Contract);\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        }\n        else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n        defineReadOnly(this, \"callStatic\", {});\n        defineReadOnly(this, \"estimateGas\", {});\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"populateTransaction\", {});\n        defineReadOnly(this, \"filters\", {});\n        {\n            const uniqueFilters = {};\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                    };\n                });\n                if (!uniqueFilters[event.name]) {\n                    uniqueFilters[event.name] = [];\n                }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                }\n                else {\n                    logger.warn(`Duplicate definition of ${name} (${filters.join(\", \")})`);\n                }\n            });\n        }\n        defineReadOnly(this, \"_runningEvents\", {});\n        defineReadOnly(this, \"_wrappedEmits\", {});\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        }\n        else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            }\n            catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n        // Swallow bad ENS names to prevent Unhandled Exceptions\n        this.resolvedAddress.catch((e) => { });\n        const uniqueNames = {};\n        const uniqueSignatures = {};\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${JSON.stringify(signature)}`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[`%${name}`]) {\n                    uniqueNames[`%${name}`] = [];\n                }\n                uniqueNames[`%${name}`].push(signature);\n            }\n            if (this[signature] == null) {\n                defineReadOnly(this, signature, buildDefault(this, fragment, true));\n            }\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) {\n                return;\n            }\n            // Strip off the leading \"%\" used for prototype protection\n            name = name.substring(1);\n            const signature = signatures[0];\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if (this[name] == null) {\n                    defineReadOnly(this, name, this[signature]);\n                }\n            }\n            catch (e) { }\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n    static getContractAddress(transaction) {\n        return getContractAddress(transaction);\n    }\n    static getInterface(contractInterface) {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n    // @TODO: Allow timeout?\n    deployed() {\n        return this._deployed();\n    }\n    _deployed(blockTag) {\n        if (!this._deployedPromise) {\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n            }\n            else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n        return this._deployedPromise;\n    }\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n    fallback(overrides) {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" });\n        }\n        const tx = shallowCopy(overrides || {});\n        [\"from\", \"to\"].forEach(function (key) {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider) {\n        if (typeof (signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n        const contract = new (this.constructor)(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n        return contract;\n    }\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName) {\n        return new (this.constructor)(addressOrName, this.interface, this.signer || this.provider);\n    }\n    static isIndexed(value) {\n        return Indexed.isIndexed(value);\n    }\n    _normalizeRunningEvent(runningEvent) {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n        }\n        return runningEvent;\n    }\n    _getRunningEvent(eventName) {\n        if (typeof (eventName) === \"string\") {\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName);\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof (topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            }\n            catch (error) { }\n            // Filter by the unknown topichash\n            const filter = {\n                address: this.address,\n                topics: eventName.topics\n            };\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n    _checkRunningEvents(runningEvent) {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent, log, listener) {\n        const event = deepCopy(log);\n        event.removeListener = () => {\n            if (!listener) {\n                return;\n            }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); };\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); };\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); };\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n        return event;\n    }\n    _addEventListener(runningEvent, listener, once) {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" });\n        }\n        runningEvent.addListener(listener, once);\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    }\n                    catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n    queryFilter(event, fromBlockOrBlockhash, toBlock) {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n        if (typeof (fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            filter.blockHash = fromBlockOrBlockhash;\n        }\n        else {\n            filter.fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash : 0);\n            filter.toBlock = ((toBlock != null) ? toBlock : \"latest\");\n        }\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n    on(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n    once(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n    emit(eventName, ...args) {\n        if (!this.provider) {\n            return false;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!this.provider) {\n            return 0;\n        }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n    listeners(eventName) {\n        if (!this.provider) {\n            return [];\n        }\n        if (eventName == null) {\n            const result = [];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener);\n                });\n            }\n            return result;\n        }\n        return this._getRunningEvent(eventName).listeners();\n    }\n    removeAllListeners(eventName) {\n        if (!this.provider) {\n            return this;\n        }\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    off(eventName, listener) {\n        if (!this.provider) {\n            return this;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n}\nexport class Contract extends BaseContract {\n}\nexport class ContractFactory {\n    constructor(contractInterface, bytecode, signer) {\n        let bytecodeHex = null;\n        if (typeof (bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        }\n        else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        }\n        else if (bytecode && typeof (bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = bytecode.object;\n        }\n        else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") {\n            bytecodeHex = \"0x\" + bytecodeHex;\n        }\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n    // @TODO: Future; rename to populateTransaction?\n    getDeployTransaction(...args) {\n        let tx = {};\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n        return tx;\n    }\n    deploy(...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let overrides = {};\n            // If 1 extra parameter was passed in, it contains overrides\n            if (args.length === this.interface.deploy.inputs.length + 1) {\n                overrides = args.pop();\n            }\n            // Make sure the call matches the constructor signature\n            logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n            // Resolve ENS names and promises in the arguments\n            const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n            params.push(overrides);\n            // Get the deployment transaction (with optional overrides)\n            const unsignedTx = this.getDeployTransaction(...params);\n            // Send the deployment transaction\n            const tx = yield this.signer.sendTransaction(unsignedTx);\n            const address = getStatic(this.constructor, \"getContractAddress\")(tx);\n            const contract = getStatic(this.constructor, \"getContract\")(address, this.interface, this.signer);\n            // Add the modified wait that wraps events\n            addContractWait(contract, tx);\n            defineReadOnly(contract, \"deployTransaction\", tx);\n            return contract;\n        });\n    }\n    attach(address) {\n        return (this.constructor).getContract(address, this.interface, this.signer);\n    }\n    connect(signer) {\n        return new (this.constructor)(this.interface, this.bytecode, signer);\n    }\n    static fromSolidity(compilerOutput, signer) {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n        if (typeof (compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n        const abi = compilerOutput.abi;\n        let bytecode = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        }\n        else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n        return new this(abi, bytecode, signer);\n    }\n    static getInterface(contractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n    static getContractAddress(tx) {\n        return getContractAddress(tx);\n    }\n    static getContract(address, contractInterface, signer) {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"networks/5.6.2\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nfunction isRenetworkable(value) {\n    return (value && typeof (value.renetwork) === \"function\");\n}\nfunction ethDefaultProvider(network) {\n    const func = function (providers, options) {\n        if (options == null) {\n            options = {};\n        }\n        const providerList = [];\n        if (providers.InfuraProvider && options.infura !== \"-\") {\n            try {\n                providerList.push(new providers.InfuraProvider(network, options.infura));\n            }\n            catch (error) { }\n        }\n        if (providers.EtherscanProvider && options.etherscan !== \"-\") {\n            try {\n                providerList.push(new providers.EtherscanProvider(network, options.etherscan));\n            }\n            catch (error) { }\n        }\n        if (providers.AlchemyProvider && options.alchemy !== \"-\") {\n            try {\n                providerList.push(new providers.AlchemyProvider(network, options.alchemy));\n            }\n            catch (error) { }\n        }\n        if (providers.PocketProvider && options.pocket !== \"-\") {\n            // These networks are currently faulty on Pocket as their\n            // network does not handle the Berlin hardfork, which is\n            // live on these ones.\n            // @TODO: This goes away once Pocket has upgraded their nodes\n            const skip = [\"goerli\", \"ropsten\", \"rinkeby\"];\n            try {\n                const provider = new providers.PocketProvider(network, options.pocket);\n                if (provider.network && skip.indexOf(provider.network.name) === -1) {\n                    providerList.push(provider);\n                }\n            }\n            catch (error) { }\n        }\n        if (providers.CloudflareProvider && options.cloudflare !== \"-\") {\n            try {\n                providerList.push(new providers.CloudflareProvider(network));\n            }\n            catch (error) { }\n        }\n        if (providers.AnkrProvider && options.ankr !== \"-\") {\n            try {\n                providerList.push(new providers.AnkrProvider(network, options.ankr));\n            }\n            catch (error) { }\n        }\n        if (providerList.length === 0) {\n            return null;\n        }\n        if (providers.FallbackProvider) {\n            let quorum = 1;\n            if (options.quorum != null) {\n                quorum = options.quorum;\n            }\n            else if (network === \"homestead\") {\n                quorum = 2;\n            }\n            return new providers.FallbackProvider(providerList, quorum);\n        }\n        return providerList[0];\n    };\n    func.renetwork = function (network) {\n        return ethDefaultProvider(network);\n    };\n    return func;\n}\nfunction etcDefaultProvider(url, network) {\n    const func = function (providers, options) {\n        if (providers.JsonRpcProvider) {\n            return new providers.JsonRpcProvider(url, network);\n        }\n        return null;\n    };\n    func.renetwork = function (network) {\n        return etcDefaultProvider(url, network);\n    };\n    return func;\n}\nconst homestead = {\n    chainId: 1,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"homestead\",\n    _defaultProvider: ethDefaultProvider(\"homestead\")\n};\nconst ropsten = {\n    chainId: 3,\n    ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n    name: \"ropsten\",\n    _defaultProvider: ethDefaultProvider(\"ropsten\")\n};\nconst classicMordor = {\n    chainId: 63,\n    name: \"classicMordor\",\n    _defaultProvider: etcDefaultProvider(\"https://www.ethercluster.com/mordor\", \"classicMordor\")\n};\n// See: https://chainlist.org\nconst networks = {\n    unspecified: { chainId: 0, name: \"unspecified\" },\n    homestead: homestead,\n    mainnet: homestead,\n    morden: { chainId: 2, name: \"morden\" },\n    ropsten: ropsten,\n    testnet: ropsten,\n    rinkeby: {\n        chainId: 4,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"rinkeby\",\n        _defaultProvider: ethDefaultProvider(\"rinkeby\")\n    },\n    kovan: {\n        chainId: 42,\n        name: \"kovan\",\n        _defaultProvider: ethDefaultProvider(\"kovan\")\n    },\n    goerli: {\n        chainId: 5,\n        ensAddress: \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\",\n        name: \"goerli\",\n        _defaultProvider: ethDefaultProvider(\"goerli\")\n    },\n    kintsugi: { chainId: 1337702, name: \"kintsugi\" },\n    // ETC (See: #351)\n    classic: {\n        chainId: 61,\n        name: \"classic\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/etc\", \"classic\")\n    },\n    classicMorden: { chainId: 62, name: \"classicMorden\" },\n    classicMordor: classicMordor,\n    classicTestnet: classicMordor,\n    classicKotti: {\n        chainId: 6,\n        name: \"classicKotti\",\n        _defaultProvider: etcDefaultProvider(\"https:/\\/www.ethercluster.com/kotti\", \"classicKotti\")\n    },\n    xdai: { chainId: 100, name: \"xdai\" },\n    matic: { chainId: 137, name: \"matic\" },\n    maticmum: { chainId: 80001, name: \"maticmum\" },\n    optimism: { chainId: 10, name: \"optimism\" },\n    \"optimism-kovan\": { chainId: 69, name: \"optimism-kovan\" },\n    \"optimism-goerli\": { chainId: 420, name: \"optimism-goerli\" },\n    arbitrum: { chainId: 42161, name: \"arbitrum\" },\n    \"arbitrum-rinkeby\": { chainId: 421611, name: \"arbitrum-rinkeby\" },\n    bnb: { chainId: 56, name: \"bnb\" },\n    bnbt: { chainId: 97, name: \"bnbt\" },\n};\n/**\n *  getNetwork\n *\n *  Converts a named common networks or chain ID (network ID) to a Network\n *  and verifies a network is a valid Network..\n */\nexport function getNetwork(network) {\n    // No network (null)\n    if (network == null) {\n        return null;\n    }\n    if (typeof (network) === \"number\") {\n        for (const name in networks) {\n            const standard = networks[name];\n            if (standard.chainId === network) {\n                return {\n                    name: standard.name,\n                    chainId: standard.chainId,\n                    ensAddress: (standard.ensAddress || null),\n                    _defaultProvider: (standard._defaultProvider || null)\n                };\n            }\n        }\n        return {\n            chainId: network,\n            name: \"unknown\"\n        };\n    }\n    if (typeof (network) === \"string\") {\n        const standard = networks[network];\n        if (standard == null) {\n            return null;\n        }\n        return {\n            name: standard.name,\n            chainId: standard.chainId,\n            ensAddress: standard.ensAddress,\n            _defaultProvider: (standard._defaultProvider || null)\n        };\n    }\n    const standard = networks[network.name];\n    // Not a standard network; check that it is a valid network in general\n    if (!standard) {\n        if (typeof (network.chainId) !== \"number\") {\n            logger.throwArgumentError(\"invalid network chainId\", \"network\", network);\n        }\n        return network;\n    }\n    // Make sure the chainId matches the expected network chainId (or is 0; disable EIP-155)\n    if (network.chainId !== 0 && network.chainId !== standard.chainId) {\n        logger.throwArgumentError(\"network chainId mismatch\", \"network\", network);\n    }\n    // @TODO: In the next major version add an attach function to a defaultProvider\n    // class and move the _defaultProvider internal to this file (extend Network)\n    let defaultProvider = network._defaultProvider || null;\n    if (defaultProvider == null && standard._defaultProvider) {\n        if (isRenetworkable(standard._defaultProvider)) {\n            defaultProvider = standard._defaultProvider.renetwork(network);\n        }\n        else {\n            defaultProvider = standard._defaultProvider;\n        }\n    }\n    // Standard Network (allow overriding the ENS address)\n    return {\n        name: network.name,\n        chainId: standard.chainId,\n        ensAddress: (network.ensAddress || standard.ensAddress || null),\n        _defaultProvider: defaultProvider\n    };\n}\n//# sourceMappingURL=index.js.map","export const version = \"providers/5.6.4\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexDataLength, hexDataSlice, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify, parse as parseTransaction } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class Formatter {\n    constructor() {\n        logger.checkNew(new.target, Formatter);\n        this.formats = this.getDefaultFormats();\n    }\n    getDefaultFormats() {\n        const formats = ({});\n        const address = this.address.bind(this);\n        const bigNumber = this.bigNumber.bind(this);\n        const blockTag = this.blockTag.bind(this);\n        const data = this.data.bind(this);\n        const hash = this.hash.bind(this);\n        const hex = this.hex.bind(this);\n        const number = this.number.bind(this);\n        const type = this.type.bind(this);\n        const strictData = (v) => { return this.data(v, true); };\n        formats.transaction = {\n            hash: hash,\n            type: type,\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n            blockHash: Formatter.allowNull(hash, null),\n            blockNumber: Formatter.allowNull(number, null),\n            transactionIndex: Formatter.allowNull(number, null),\n            confirmations: Formatter.allowNull(number, null),\n            from: address,\n            // either (gasPrice) or (maxPriorityFeePerGas + maxFeePerGas)\n            // must be set\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            gasLimit: bigNumber,\n            to: Formatter.allowNull(address, null),\n            value: bigNumber,\n            nonce: number,\n            data: data,\n            r: Formatter.allowNull(this.uint256),\n            s: Formatter.allowNull(this.uint256),\n            v: Formatter.allowNull(number),\n            creates: Formatter.allowNull(address, null),\n            raw: Formatter.allowNull(data),\n        };\n        formats.transactionRequest = {\n            from: Formatter.allowNull(address),\n            nonce: Formatter.allowNull(number),\n            gasLimit: Formatter.allowNull(bigNumber),\n            gasPrice: Formatter.allowNull(bigNumber),\n            maxPriorityFeePerGas: Formatter.allowNull(bigNumber),\n            maxFeePerGas: Formatter.allowNull(bigNumber),\n            to: Formatter.allowNull(address),\n            value: Formatter.allowNull(bigNumber),\n            data: Formatter.allowNull(strictData),\n            type: Formatter.allowNull(number),\n            accessList: Formatter.allowNull(this.accessList.bind(this), null),\n        };\n        formats.receiptLog = {\n            transactionIndex: number,\n            blockNumber: number,\n            transactionHash: hash,\n            address: address,\n            topics: Formatter.arrayOf(hash),\n            data: data,\n            logIndex: number,\n            blockHash: hash,\n        };\n        formats.receipt = {\n            to: Formatter.allowNull(this.address, null),\n            from: Formatter.allowNull(this.address, null),\n            contractAddress: Formatter.allowNull(address, null),\n            transactionIndex: number,\n            // should be allowNull(hash), but broken-EIP-658 support is handled in receipt\n            root: Formatter.allowNull(hex),\n            gasUsed: bigNumber,\n            logsBloom: Formatter.allowNull(data),\n            blockHash: hash,\n            transactionHash: hash,\n            logs: Formatter.arrayOf(this.receiptLog.bind(this)),\n            blockNumber: number,\n            confirmations: Formatter.allowNull(number, null),\n            cumulativeGasUsed: bigNumber,\n            effectiveGasPrice: Formatter.allowNull(bigNumber),\n            status: Formatter.allowNull(number),\n            type: type\n        };\n        formats.block = {\n            hash: Formatter.allowNull(hash),\n            parentHash: hash,\n            number: number,\n            timestamp: number,\n            nonce: Formatter.allowNull(hex),\n            difficulty: this.difficulty.bind(this),\n            gasLimit: bigNumber,\n            gasUsed: bigNumber,\n            miner: Formatter.allowNull(address),\n            extraData: data,\n            transactions: Formatter.allowNull(Formatter.arrayOf(hash)),\n            baseFeePerGas: Formatter.allowNull(bigNumber)\n        };\n        formats.blockWithTransactions = shallowCopy(formats.block);\n        formats.blockWithTransactions.transactions = Formatter.allowNull(Formatter.arrayOf(this.transactionResponse.bind(this)));\n        formats.filter = {\n            fromBlock: Formatter.allowNull(blockTag, undefined),\n            toBlock: Formatter.allowNull(blockTag, undefined),\n            blockHash: Formatter.allowNull(hash, undefined),\n            address: Formatter.allowNull(address, undefined),\n            topics: Formatter.allowNull(this.topics.bind(this), undefined),\n        };\n        formats.filterLog = {\n            blockNumber: Formatter.allowNull(number),\n            blockHash: Formatter.allowNull(hash),\n            transactionIndex: number,\n            removed: Formatter.allowNull(this.boolean.bind(this)),\n            address: address,\n            data: Formatter.allowFalsish(data, \"0x\"),\n            topics: Formatter.arrayOf(hash),\n            transactionHash: hash,\n            logIndex: number,\n        };\n        return formats;\n    }\n    accessList(accessList) {\n        return accessListify(accessList || []);\n    }\n    // Requires a BigNumberish that is within the IEEE754 safe integer range; returns a number\n    // Strict! Used on input.\n    number(number) {\n        if (number === \"0x\") {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    type(number) {\n        if (number === \"0x\" || number == null) {\n            return 0;\n        }\n        return BigNumber.from(number).toNumber();\n    }\n    // Strict! Used on input.\n    bigNumber(value) {\n        return BigNumber.from(value);\n    }\n    // Requires a boolean, \"true\" or  \"false\"; returns a boolean\n    boolean(value) {\n        if (typeof (value) === \"boolean\") {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            value = value.toLowerCase();\n            if (value === \"true\") {\n                return true;\n            }\n            if (value === \"false\") {\n                return false;\n            }\n        }\n        throw new Error(\"invalid boolean - \" + value);\n    }\n    hex(value, strict) {\n        if (typeof (value) === \"string\") {\n            if (!strict && value.substring(0, 2) !== \"0x\") {\n                value = \"0x\" + value;\n            }\n            if (isHexString(value)) {\n                return value.toLowerCase();\n            }\n        }\n        return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n    }\n    data(value, strict) {\n        const result = this.hex(value, strict);\n        if ((result.length % 2) !== 0) {\n            throw new Error(\"invalid data; odd-length - \" + value);\n        }\n        return result;\n    }\n    // Requires an address\n    // Strict! Used on input.\n    address(value) {\n        return getAddress(value);\n    }\n    callAddress(value) {\n        if (!isHexString(value, 32)) {\n            return null;\n        }\n        const address = getAddress(hexDataSlice(value, 12));\n        return (address === AddressZero) ? null : address;\n    }\n    contractAddress(value) {\n        return getContractAddress(value);\n    }\n    // Strict! Used on input.\n    blockTag(blockTag) {\n        if (blockTag == null) {\n            return \"latest\";\n        }\n        if (blockTag === \"earliest\") {\n            return \"0x0\";\n        }\n        if (blockTag === \"latest\" || blockTag === \"pending\") {\n            return blockTag;\n        }\n        if (typeof (blockTag) === \"number\" || isHexString(blockTag)) {\n            return hexValue(blockTag);\n        }\n        throw new Error(\"invalid blockTag\");\n    }\n    // Requires a hash, optionally requires 0x prefix; returns prefixed lowercase hash.\n    hash(value, strict) {\n        const result = this.hex(value, strict);\n        if (hexDataLength(result) !== 32) {\n            return logger.throwArgumentError(\"invalid hash\", \"value\", value);\n        }\n        return result;\n    }\n    // Returns the difficulty as a number, or if too large (i.e. PoA network) null\n    difficulty(value) {\n        if (value == null) {\n            return null;\n        }\n        const v = BigNumber.from(value);\n        try {\n            return v.toNumber();\n        }\n        catch (error) { }\n        return null;\n    }\n    uint256(value) {\n        if (!isHexString(value)) {\n            throw new Error(\"invalid uint256\");\n        }\n        return hexZeroPad(value, 32);\n    }\n    _block(value, format) {\n        if (value.author != null && value.miner == null) {\n            value.miner = value.author;\n        }\n        // The difficulty may need to come from _difficulty in recursed blocks\n        const difficulty = (value._difficulty != null) ? value._difficulty : value.difficulty;\n        const result = Formatter.check(format, value);\n        result._difficulty = ((difficulty == null) ? null : BigNumber.from(difficulty));\n        return result;\n    }\n    block(value) {\n        return this._block(value, this.formats.block);\n    }\n    blockWithTransactions(value) {\n        return this._block(value, this.formats.blockWithTransactions);\n    }\n    // Strict! Used on input.\n    transactionRequest(value) {\n        return Formatter.check(this.formats.transactionRequest, value);\n    }\n    transactionResponse(transaction) {\n        // Rename gas to gasLimit\n        if (transaction.gas != null && transaction.gasLimit == null) {\n            transaction.gasLimit = transaction.gas;\n        }\n        // Some clients (TestRPC) do strange things like return 0x0 for the\n        // 0 address; correct this to be a real address\n        if (transaction.to && BigNumber.from(transaction.to).isZero()) {\n            transaction.to = \"0x0000000000000000000000000000000000000000\";\n        }\n        // Rename input to data\n        if (transaction.input != null && transaction.data == null) {\n            transaction.data = transaction.input;\n        }\n        // If to and creates are empty, populate the creates from the transaction\n        if (transaction.to == null && transaction.creates == null) {\n            transaction.creates = this.contractAddress(transaction);\n        }\n        if ((transaction.type === 1 || transaction.type === 2) && transaction.accessList == null) {\n            transaction.accessList = [];\n        }\n        const result = Formatter.check(this.formats.transaction, transaction);\n        if (transaction.chainId != null) {\n            let chainId = transaction.chainId;\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            result.chainId = chainId;\n        }\n        else {\n            let chainId = transaction.networkId;\n            // geth-etc returns chainId\n            if (chainId == null && result.v == null) {\n                chainId = transaction.chainId;\n            }\n            if (isHexString(chainId)) {\n                chainId = BigNumber.from(chainId).toNumber();\n            }\n            if (typeof (chainId) !== \"number\" && result.v != null) {\n                chainId = (result.v - 35) / 2;\n                if (chainId < 0) {\n                    chainId = 0;\n                }\n                chainId = parseInt(chainId);\n            }\n            if (typeof (chainId) !== \"number\") {\n                chainId = 0;\n            }\n            result.chainId = chainId;\n        }\n        // 0x0000... should actually be null\n        if (result.blockHash && result.blockHash.replace(/0/g, \"\") === \"x\") {\n            result.blockHash = null;\n        }\n        return result;\n    }\n    transaction(value) {\n        return parseTransaction(value);\n    }\n    receiptLog(value) {\n        return Formatter.check(this.formats.receiptLog, value);\n    }\n    receipt(value) {\n        const result = Formatter.check(this.formats.receipt, value);\n        // RSK incorrectly implemented EIP-658, so we munge things a bit here for it\n        if (result.root != null) {\n            if (result.root.length <= 4) {\n                // Could be 0x00, 0x0, 0x01 or 0x1\n                const value = BigNumber.from(result.root).toNumber();\n                if (value === 0 || value === 1) {\n                    // Make sure if both are specified, they match\n                    if (result.status != null && (result.status !== value)) {\n                        logger.throwArgumentError(\"alt-root-status/status mismatch\", \"value\", { root: result.root, status: result.status });\n                    }\n                    result.status = value;\n                    delete result.root;\n                }\n                else {\n                    logger.throwArgumentError(\"invalid alt-root-status\", \"value.root\", result.root);\n                }\n            }\n            else if (result.root.length !== 66) {\n                // Must be a valid bytes32\n                logger.throwArgumentError(\"invalid root hash\", \"value.root\", result.root);\n            }\n        }\n        if (result.status != null) {\n            result.byzantium = true;\n        }\n        return result;\n    }\n    topics(value) {\n        if (Array.isArray(value)) {\n            return value.map((v) => this.topics(v));\n        }\n        else if (value != null) {\n            return this.hash(value, true);\n        }\n        return null;\n    }\n    filter(value) {\n        return Formatter.check(this.formats.filter, value);\n    }\n    filterLog(value) {\n        return Formatter.check(this.formats.filterLog, value);\n    }\n    static check(format, object) {\n        const result = {};\n        for (const key in format) {\n            try {\n                const value = format[key](object[key]);\n                if (value !== undefined) {\n                    result[key] = value;\n                }\n            }\n            catch (error) {\n                error.checkKey = key;\n                error.checkValue = object[key];\n                throw error;\n            }\n        }\n        return result;\n    }\n    // if value is null-ish, nullValue is returned\n    static allowNull(format, nullValue) {\n        return (function (value) {\n            if (value == null) {\n                return nullValue;\n            }\n            return format(value);\n        });\n    }\n    // If value is false-ish, replaceValue is returned\n    static allowFalsish(format, replaceValue) {\n        return (function (value) {\n            if (!value) {\n                return replaceValue;\n            }\n            return format(value);\n        });\n    }\n    // Requires an Array satisfying check\n    static arrayOf(format) {\n        return (function (array) {\n            if (!Array.isArray(array)) {\n                throw new Error(\"not an array\");\n            }\n            const result = [];\n            array.forEach(function (value) {\n                result.push(format(value));\n            });\n            return result;\n        });\n    }\n}\nexport function isCommunityResourcable(value) {\n    return (value && typeof (value.isCommunityResource) === \"function\");\n}\nexport function isCommunityResource(value) {\n    return (isCommunityResourcable(value) && value.isCommunityResource());\n}\n// Show the throttle message only once\nlet throttleMessage = false;\nexport function showThrottleMessage() {\n    if (throttleMessage) {\n        return;\n    }\n    throttleMessage = true;\n    console.log(\"========= NOTICE =========\");\n    console.log(\"Request-Rate Exceeded  (this message will not be repeated)\");\n    console.log(\"\");\n    console.log(\"The default API keys for each service are provided as a highly-throttled,\");\n    console.log(\"community resource for low-traffic projects and early prototyping.\");\n    console.log(\"\");\n    console.log(\"While your application will continue to function, we highly recommended\");\n    console.log(\"signing up for your own API keys to improve performance, increase your\");\n    console.log(\"request rate/limit and enable other perks, such as metrics and advanced APIs.\");\n    console.log(\"\");\n    console.log(\"For more details: https:/\\/docs.ethers.io/api-keys/\");\n    console.log(\"==========================\");\n}\n//# sourceMappingURL=formatter.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ForkEvent, Provider } from \"@ethersproject/abstract-provider\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexConcat, hexDataLength, hexDataSlice, hexlify, hexValue, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { dnsEncode, namehash } from \"@ethersproject/hash\";\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { defineReadOnly, getStatic, resolveProperties } from \"@ethersproject/properties\";\nimport { sha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport bech32 from \"bech32\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Formatter } from \"./formatter\";\nconst MAX_CCIP_REDIRECTS = 10;\n//////////////////////////////\n// Event Serializeing\nfunction checkTopic(topic) {\n    if (topic == null) {\n        return \"null\";\n    }\n    if (hexDataLength(topic) !== 32) {\n        logger.throwArgumentError(\"invalid topic\", \"topic\", topic);\n    }\n    return topic.toLowerCase();\n}\nfunction serializeTopics(topics) {\n    // Remove trailing null AND-topics; they are redundant\n    topics = topics.slice();\n    while (topics.length > 0 && topics[topics.length - 1] == null) {\n        topics.pop();\n    }\n    return topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            // Only track unique OR-topics\n            const unique = {};\n            topic.forEach((topic) => {\n                unique[checkTopic(topic)] = true;\n            });\n            // The order of OR-topics does not matter\n            const sorted = Object.keys(unique);\n            sorted.sort();\n            return sorted.join(\"|\");\n        }\n        else {\n            return checkTopic(topic);\n        }\n    }).join(\"&\");\n}\nfunction deserializeTopics(data) {\n    if (data === \"\") {\n        return [];\n    }\n    return data.split(/&/g).map((topic) => {\n        if (topic === \"\") {\n            return [];\n        }\n        const comps = topic.split(\"|\").map((topic) => {\n            return ((topic === \"null\") ? null : topic);\n        });\n        return ((comps.length === 1) ? comps[0] : comps);\n    });\n}\nfunction getEventTag(eventName) {\n    if (typeof (eventName) === \"string\") {\n        eventName = eventName.toLowerCase();\n        if (hexDataLength(eventName) === 32) {\n            return \"tx:\" + eventName;\n        }\n        if (eventName.indexOf(\":\") === -1) {\n            return eventName;\n        }\n    }\n    else if (Array.isArray(eventName)) {\n        return \"filter:*:\" + serializeTopics(eventName);\n    }\n    else if (ForkEvent.isForkEvent(eventName)) {\n        logger.warn(\"not implemented\");\n        throw new Error(\"not implemented\");\n    }\n    else if (eventName && typeof (eventName) === \"object\") {\n        return \"filter:\" + (eventName.address || \"*\") + \":\" + serializeTopics(eventName.topics || []);\n    }\n    throw new Error(\"invalid event - \" + eventName);\n}\n//////////////////////////////\n// Helper Object\nfunction getTime() {\n    return (new Date()).getTime();\n}\nfunction stall(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\n//////////////////////////////\n// Provider Object\n/**\n *  EventType\n *   - \"block\"\n *   - \"poll\"\n *   - \"didPoll\"\n *   - \"pending\"\n *   - \"error\"\n *   - \"network\"\n *   - filter\n *   - topics array\n *   - transaction hash\n */\nconst PollableEvents = [\"block\", \"network\", \"pending\", \"poll\"];\nexport class Event {\n    constructor(tag, listener, once) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"listener\", listener);\n        defineReadOnly(this, \"once\", once);\n        this._lastBlockNumber = -2;\n        this._inflight = false;\n    }\n    get event() {\n        switch (this.type) {\n            case \"tx\":\n                return this.hash;\n            case \"filter\":\n                return this.filter;\n        }\n        return this.tag;\n    }\n    get type() {\n        return this.tag.split(\":\")[0];\n    }\n    get hash() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"tx\") {\n            return null;\n        }\n        return comps[1];\n    }\n    get filter() {\n        const comps = this.tag.split(\":\");\n        if (comps[0] !== \"filter\") {\n            return null;\n        }\n        const address = comps[1];\n        const topics = deserializeTopics(comps[2]);\n        const filter = {};\n        if (topics.length > 0) {\n            filter.topics = topics;\n        }\n        if (address && address !== \"*\") {\n            filter.address = address;\n        }\n        return filter;\n    }\n    pollable() {\n        return (this.tag.indexOf(\":\") >= 0 || PollableEvents.indexOf(this.tag) >= 0);\n    }\n}\n;\n// https://github.com/satoshilabs/slips/blob/master/slip-0044.md\nconst coinInfos = {\n    \"0\": { symbol: \"btc\", p2pkh: 0x00, p2sh: 0x05, prefix: \"bc\" },\n    \"2\": { symbol: \"ltc\", p2pkh: 0x30, p2sh: 0x32, prefix: \"ltc\" },\n    \"3\": { symbol: \"doge\", p2pkh: 0x1e, p2sh: 0x16 },\n    \"60\": { symbol: \"eth\", ilk: \"eth\" },\n    \"61\": { symbol: \"etc\", ilk: \"eth\" },\n    \"700\": { symbol: \"xdai\", ilk: \"eth\" },\n};\nfunction bytes32ify(value) {\n    return hexZeroPad(BigNumber.from(value).toHexString(), 32);\n}\n// Compute the Base58Check encoded data (checksum is first 4 bytes of sha256d)\nfunction base58Encode(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nconst matcherIpfs = new RegExp(\"^(ipfs):/\\/(.*)$\", \"i\");\nconst matchers = [\n    new RegExp(\"^(https):/\\/(.*)$\", \"i\"),\n    new RegExp(\"^(data):(.*)$\", \"i\"),\n    matcherIpfs,\n    new RegExp(\"^eip155:[0-9]+/(erc[0-9]+):(.*)$\", \"i\"),\n];\nfunction _parseString(result, start) {\n    try {\n        return toUtf8String(_parseBytes(result, start));\n    }\n    catch (error) { }\n    return null;\n}\nfunction _parseBytes(result, start) {\n    if (result === \"0x\") {\n        return null;\n    }\n    const offset = BigNumber.from(hexDataSlice(result, start, start + 32)).toNumber();\n    const length = BigNumber.from(hexDataSlice(result, offset, offset + 32)).toNumber();\n    return hexDataSlice(result, offset + 32, offset + 32 + length);\n}\n// Trim off the ipfs:// prefix and return the default gateway URL\nfunction getIpfsLink(link) {\n    if (link.match(/^ipfs:\\/\\/ipfs\\//i)) {\n        link = link.substring(12);\n    }\n    else if (link.match(/^ipfs:\\/\\//i)) {\n        link = link.substring(7);\n    }\n    else {\n        logger.throwArgumentError(\"unsupported IPFS format\", \"link\", link);\n    }\n    return `https:/\\/gateway.ipfs.io/ipfs/${link}`;\n}\nfunction numPad(value) {\n    const result = arrayify(value);\n    if (result.length > 32) {\n        throw new Error(\"internal; should not happen\");\n    }\n    const padded = new Uint8Array(32);\n    padded.set(result, 32 - result.length);\n    return padded;\n}\nfunction bytesPad(value) {\n    if ((value.length % 32) === 0) {\n        return value;\n    }\n    const result = new Uint8Array(Math.ceil(value.length / 32) * 32);\n    result.set(value);\n    return result;\n}\n// ABI Encodes a series of (bytes, bytes, ...)\nfunction encodeBytes(datas) {\n    const result = [];\n    let byteCount = 0;\n    // Add place-holders for pointers as we add items\n    for (let i = 0; i < datas.length; i++) {\n        result.push(null);\n        byteCount += 32;\n    }\n    for (let i = 0; i < datas.length; i++) {\n        const data = arrayify(datas[i]);\n        // Update the bytes offset\n        result[i] = numPad(byteCount);\n        // The length and padded value of data\n        result.push(numPad(data.length));\n        result.push(bytesPad(data));\n        byteCount += 32 + Math.ceil(data.length / 32) * 32;\n    }\n    return hexConcat(result);\n}\nexport class Resolver {\n    // The resolvedAddress is only for creating a ReverseLookup resolver\n    constructor(provider, address, name, resolvedAddress) {\n        defineReadOnly(this, \"provider\", provider);\n        defineReadOnly(this, \"name\", name);\n        defineReadOnly(this, \"address\", provider.formatter.address(address));\n        defineReadOnly(this, \"_resolvedAddress\", resolvedAddress);\n    }\n    supportsWildcard() {\n        if (!this._supportsEip2544) {\n            // supportsInterface(bytes4 = selector(\"resolve(bytes,bytes)\"))\n            this._supportsEip2544 = this.provider.call({\n                to: this.address,\n                data: \"0x01ffc9a79061b92300000000000000000000000000000000000000000000000000000000\"\n            }).then((result) => {\n                return BigNumber.from(result).eq(1);\n            }).catch((error) => {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return false;\n                }\n                // Rethrow the error: link is down, etc. Let future attempts retry.\n                this._supportsEip2544 = null;\n                throw error;\n            });\n        }\n        return this._supportsEip2544;\n    }\n    _fetch(selector, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // e.g. keccak256(\"addr(bytes32,uint256)\")\n            const tx = {\n                to: this.address,\n                ccipReadEnabled: true,\n                data: hexConcat([selector, namehash(this.name), (parameters || \"0x\")])\n            };\n            // Wildcard support; use EIP-2544 to resolve the request\n            let parseBytes = false;\n            if (yield this.supportsWildcard()) {\n                parseBytes = true;\n                // selector(\"resolve(bytes,bytes)\")\n                tx.data = hexConcat([\"0x9061b923\", encodeBytes([dnsEncode(this.name), tx.data])]);\n            }\n            try {\n                let result = yield this.provider.call(tx);\n                if ((arrayify(result).length % 32) === 4) {\n                    logger.throwError(\"resolver threw error\", Logger.errors.CALL_EXCEPTION, {\n                        transaction: tx, data: result\n                    });\n                }\n                if (parseBytes) {\n                    result = _parseBytes(result, 0);\n                }\n                return result;\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    return null;\n                }\n                throw error;\n            }\n        });\n    }\n    _fetchBytes(selector, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this._fetch(selector, parameters);\n            if (result != null) {\n                return _parseBytes(result, 0);\n            }\n            return null;\n        });\n    }\n    _getAddress(coinType, hexBytes) {\n        const coinInfo = coinInfos[String(coinType)];\n        if (coinInfo == null) {\n            logger.throwError(`unsupported coin type: ${coinType}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: `getAddress(${coinType})`\n            });\n        }\n        if (coinInfo.ilk === \"eth\") {\n            return this.provider.formatter.address(hexBytes);\n        }\n        const bytes = arrayify(hexBytes);\n        // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (coinInfo.p2pkh != null) {\n            const p2pkh = hexBytes.match(/^0x76a9([0-9a-f][0-9a-f])([0-9a-f]*)88ac$/);\n            if (p2pkh) {\n                const length = parseInt(p2pkh[1], 16);\n                if (p2pkh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2pkh], (\"0x\" + p2pkh[2])]));\n                }\n            }\n        }\n        // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (coinInfo.p2sh != null) {\n            const p2sh = hexBytes.match(/^0xa9([0-9a-f][0-9a-f])([0-9a-f]*)87$/);\n            if (p2sh) {\n                const length = parseInt(p2sh[1], 16);\n                if (p2sh[2].length === length * 2 && length >= 1 && length <= 75) {\n                    return base58Encode(concat([[coinInfo.p2sh], (\"0x\" + p2sh[2])]));\n                }\n            }\n        }\n        // Bech32\n        if (coinInfo.prefix != null) {\n            const length = bytes[1];\n            // https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki#witness-program\n            let version = bytes[0];\n            if (version === 0x00) {\n                if (length !== 20 && length !== 32) {\n                    version = -1;\n                }\n            }\n            else {\n                version = -1;\n            }\n            if (version >= 0 && bytes.length === 2 + length && length >= 1 && length <= 75) {\n                const words = bech32.toWords(bytes.slice(2));\n                words.unshift(version);\n                return bech32.encode(coinInfo.prefix, words);\n            }\n        }\n        return null;\n    }\n    getAddress(coinType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (coinType == null) {\n                coinType = 60;\n            }\n            // If Ethereum, use the standard `addr(bytes32)`\n            if (coinType === 60) {\n                try {\n                    // keccak256(\"addr(bytes32)\")\n                    const result = yield this._fetch(\"0x3b3b57de\");\n                    // No address\n                    if (result === \"0x\" || result === HashZero) {\n                        return null;\n                    }\n                    return this.provider.formatter.callAddress(result);\n                }\n                catch (error) {\n                    if (error.code === Logger.errors.CALL_EXCEPTION) {\n                        return null;\n                    }\n                    throw error;\n                }\n            }\n            // keccak256(\"addr(bytes32,uint256\")\n            const hexBytes = yield this._fetchBytes(\"0xf1cb7e06\", bytes32ify(coinType));\n            // No address\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // Compute the address\n            const address = this._getAddress(coinType, hexBytes);\n            if (address == null) {\n                logger.throwError(`invalid or unsupported coin data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `getAddress(${coinType})`,\n                    coinType: coinType,\n                    data: hexBytes\n                });\n            }\n            return address;\n        });\n    }\n    getAvatar() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const linkage = [{ type: \"name\", content: this.name }];\n            try {\n                // test data for ricmoo.eth\n                //const avatar = \"eip155:1/erc721:0x265385c7f4132228A0d54EB1A9e7460b91c0cC68/29233\";\n                const avatar = yield this.getText(\"avatar\");\n                if (avatar == null) {\n                    return null;\n                }\n                for (let i = 0; i < matchers.length; i++) {\n                    const match = avatar.match(matchers[i]);\n                    if (match == null) {\n                        continue;\n                    }\n                    const scheme = match[1].toLowerCase();\n                    switch (scheme) {\n                        case \"https\":\n                            linkage.push({ type: \"url\", content: avatar });\n                            return { linkage, url: avatar };\n                        case \"data\":\n                            linkage.push({ type: \"data\", content: avatar });\n                            return { linkage, url: avatar };\n                        case \"ipfs\":\n                            linkage.push({ type: \"ipfs\", content: avatar });\n                            return { linkage, url: getIpfsLink(avatar) };\n                        case \"erc721\":\n                        case \"erc1155\": {\n                            // Depending on the ERC type, use tokenURI(uint256) or url(uint256)\n                            const selector = (scheme === \"erc721\") ? \"0xc87b56dd\" : \"0x0e89341c\";\n                            linkage.push({ type: scheme, content: avatar });\n                            // The owner of this name\n                            const owner = (this._resolvedAddress || (yield this.getAddress()));\n                            const comps = (match[2] || \"\").split(\"/\");\n                            if (comps.length !== 2) {\n                                return null;\n                            }\n                            const addr = yield this.provider.formatter.address(comps[0]);\n                            const tokenId = hexZeroPad(BigNumber.from(comps[1]).toHexString(), 32);\n                            // Check that this account owns the token\n                            if (scheme === \"erc721\") {\n                                // ownerOf(uint256 tokenId)\n                                const tokenOwner = this.provider.formatter.callAddress(yield this.provider.call({\n                                    to: addr, data: hexConcat([\"0x6352211e\", tokenId])\n                                }));\n                                if (owner !== tokenOwner) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"owner\", content: tokenOwner });\n                            }\n                            else if (scheme === \"erc1155\") {\n                                // balanceOf(address owner, uint256 tokenId)\n                                const balance = BigNumber.from(yield this.provider.call({\n                                    to: addr, data: hexConcat([\"0x00fdd58e\", hexZeroPad(owner, 32), tokenId])\n                                }));\n                                if (balance.isZero()) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"balance\", content: balance.toString() });\n                            }\n                            // Call the token contract for the metadata URL\n                            const tx = {\n                                to: this.provider.formatter.address(comps[0]),\n                                data: hexConcat([selector, tokenId])\n                            };\n                            let metadataUrl = _parseString(yield this.provider.call(tx), 0);\n                            if (metadataUrl == null) {\n                                return null;\n                            }\n                            linkage.push({ type: \"metadata-url-base\", content: metadataUrl });\n                            // ERC-1155 allows a generic {id} in the URL\n                            if (scheme === \"erc1155\") {\n                                metadataUrl = metadataUrl.replace(\"{id}\", tokenId.substring(2));\n                                linkage.push({ type: \"metadata-url-expanded\", content: metadataUrl });\n                            }\n                            // Transform IPFS metadata links\n                            if (metadataUrl.match(/^ipfs:/i)) {\n                                metadataUrl = getIpfsLink(metadataUrl);\n                            }\n                            linkage.push({ type: \"metadata-url\", content: metadataUrl });\n                            // Get the token metadata\n                            const metadata = yield fetchJson(metadataUrl);\n                            if (!metadata) {\n                                return null;\n                            }\n                            linkage.push({ type: \"metadata\", content: JSON.stringify(metadata) });\n                            // Pull the image URL out\n                            let imageUrl = metadata.image;\n                            if (typeof (imageUrl) !== \"string\") {\n                                return null;\n                            }\n                            if (imageUrl.match(/^(https:\\/\\/|data:)/i)) {\n                                // Allow\n                            }\n                            else {\n                                // Transform IPFS link to gateway\n                                const ipfs = imageUrl.match(matcherIpfs);\n                                if (ipfs == null) {\n                                    return null;\n                                }\n                                linkage.push({ type: \"url-ipfs\", content: imageUrl });\n                                imageUrl = getIpfsLink(imageUrl);\n                            }\n                            linkage.push({ type: \"url\", content: imageUrl });\n                            return { linkage, url: imageUrl };\n                        }\n                    }\n                }\n            }\n            catch (error) { }\n            return null;\n        });\n    }\n    getContentHash() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // keccak256(\"contenthash()\")\n            const hexBytes = yield this._fetchBytes(\"0xbc1c58d1\");\n            // No contenthash\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            // IPFS (CID: 1, Type: DAG-PB)\n            const ipfs = hexBytes.match(/^0xe3010170(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n            if (ipfs) {\n                const length = parseInt(ipfs[3], 16);\n                if (ipfs[4].length === length * 2) {\n                    return \"ipfs:/\\/\" + Base58.encode(\"0x\" + ipfs[1]);\n                }\n            }\n            // IPNS (CID: 1, Type: libp2p-key)\n            const ipns = hexBytes.match(/^0xe5010172(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/);\n            if (ipns) {\n                const length = parseInt(ipns[3], 16);\n                if (ipns[4].length === length * 2) {\n                    return \"ipns:/\\/\" + Base58.encode(\"0x\" + ipns[1]);\n                }\n            }\n            // Swarm (CID: 1, Type: swarm-manifest; hash/length hard-coded to keccak256/32)\n            const swarm = hexBytes.match(/^0xe40101fa011b20([0-9a-f]*)$/);\n            if (swarm) {\n                if (swarm[1].length === (32 * 2)) {\n                    return \"bzz:/\\/\" + swarm[1];\n                }\n            }\n            return logger.throwError(`invalid or unsupported content hash data`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"getContentHash()\",\n                data: hexBytes\n            });\n        });\n    }\n    getText(key) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // The key encoded as parameter to fetchBytes\n            let keyBytes = toUtf8Bytes(key);\n            // The nodehash consumes the first slot, so the string pointer targets\n            // offset 64, with the length at offset 64 and data starting at offset 96\n            keyBytes = concat([bytes32ify(64), bytes32ify(keyBytes.length), keyBytes]);\n            // Pad to word-size (32 bytes)\n            if ((keyBytes.length % 32) !== 0) {\n                keyBytes = concat([keyBytes, hexZeroPad(\"0x\", 32 - (key.length % 32))]);\n            }\n            const hexBytes = yield this._fetchBytes(\"0x59d1d43c\", hexlify(keyBytes));\n            if (hexBytes == null || hexBytes === \"0x\") {\n                return null;\n            }\n            return toUtf8String(hexBytes);\n        });\n    }\n}\nlet defaultFormatter = null;\nlet nextPollId = 1;\nexport class BaseProvider extends Provider {\n    /**\n     *  ready\n     *\n     *  A Promise<Network> that resolves only once the provider is ready.\n     *\n     *  Sub-classes that call the super with a network without a chainId\n     *  MUST set this. Standard named networks have a known chainId.\n     *\n     */\n    constructor(network) {\n        logger.checkNew(new.target, Provider);\n        super();\n        // Events being listened to\n        this._events = [];\n        this._emitted = { block: -2 };\n        this.disableCcipRead = false;\n        this.formatter = new.target.getFormatter();\n        // If network is any, this Provider allows the underlying\n        // network to change dynamically, and we auto-detect the\n        // current network\n        defineReadOnly(this, \"anyNetwork\", (network === \"any\"));\n        if (this.anyNetwork) {\n            network = this.detectNetwork();\n        }\n        if (network instanceof Promise) {\n            this._networkPromise = network;\n            // Squash any \"unhandled promise\" errors; that do not need to be handled\n            network.catch((error) => { });\n            // Trigger initial network setting (async)\n            this._ready().catch((error) => { });\n        }\n        else {\n            const knownNetwork = getStatic(new.target, \"getNetwork\")(network);\n            if (knownNetwork) {\n                defineReadOnly(this, \"_network\", knownNetwork);\n                this.emit(\"network\", knownNetwork, null);\n            }\n            else {\n                logger.throwArgumentError(\"invalid network\", \"network\", network);\n            }\n        }\n        this._maxInternalBlockNumber = -1024;\n        this._lastBlockNumber = -2;\n        this._maxFilterBlockRange = 10;\n        this._pollingInterval = 4000;\n        this._fastQueryDate = 0;\n    }\n    _ready() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._network == null) {\n                let network = null;\n                if (this._networkPromise) {\n                    try {\n                        network = yield this._networkPromise;\n                    }\n                    catch (error) { }\n                }\n                // Try the Provider's network detection (this MUST throw if it cannot)\n                if (network == null) {\n                    network = yield this.detectNetwork();\n                }\n                // This should never happen; every Provider sub-class should have\n                // suggested a network by here (or have thrown).\n                if (!network) {\n                    logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // Possible this call stacked so do not call defineReadOnly again\n                if (this._network == null) {\n                    if (this.anyNetwork) {\n                        this._network = network;\n                    }\n                    else {\n                        defineReadOnly(this, \"_network\", network);\n                    }\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return this._network;\n        });\n    }\n    // This will always return the most recently established network.\n    // For \"any\", this can change (a \"network\" event is emitted before\n    // any change is reflected); otherwise this cannot change\n    get ready() {\n        return poll(() => {\n            return this._ready().then((network) => {\n                return network;\n            }, (error) => {\n                // If the network isn't running yet, we will wait\n                if (error.code === Logger.errors.NETWORK_ERROR && error.event === \"noNetwork\") {\n                    return undefined;\n                }\n                throw error;\n            });\n        });\n    }\n    // @TODO: Remove this and just create a singleton formatter\n    static getFormatter() {\n        if (defaultFormatter == null) {\n            defaultFormatter = new Formatter();\n        }\n        return defaultFormatter;\n    }\n    // @TODO: Remove this and just use getNetwork\n    static getNetwork(network) {\n        return getNetwork((network == null) ? \"homestead\" : network);\n    }\n    ccipReadFetch(tx, calldata, urls) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.disableCcipRead || urls.length === 0) {\n                return null;\n            }\n            const sender = tx.to.toLowerCase();\n            const data = calldata.toLowerCase();\n            const errorMessages = [];\n            for (let i = 0; i < urls.length; i++) {\n                const url = urls[i];\n                // URL expansion\n                const href = url.replace(\"{sender}\", sender).replace(\"{data}\", data);\n                // If no {data} is present, use POST; otherwise GET\n                const json = (url.indexOf(\"{data}\") >= 0) ? null : JSON.stringify({ data, sender });\n                const result = yield fetchJson({ url: href, errorPassThrough: true }, json, (value, response) => {\n                    value.status = response.statusCode;\n                    return value;\n                });\n                if (result.data) {\n                    return result.data;\n                }\n                const errorMessage = (result.message || \"unknown error\");\n                // 4xx indicates the result is not present; stop\n                if (result.status >= 400 && result.status < 500) {\n                    return logger.throwError(`response not found during CCIP fetch: ${errorMessage}`, Logger.errors.SERVER_ERROR, { url, errorMessage });\n                }\n                // 5xx indicates server issue; try the next url\n                errorMessages.push(errorMessage);\n            }\n            return logger.throwError(`error encountered during CCIP fetch: ${errorMessages.map((m) => JSON.stringify(m)).join(\", \")}`, Logger.errors.SERVER_ERROR, {\n                urls, errorMessages\n            });\n        });\n    }\n    // Fetches the blockNumber, but will reuse any result that is less\n    // than maxAge old or has been requested since the last request\n    _getInternalBlockNumber(maxAge) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._ready();\n            // Allowing stale data up to maxAge old\n            if (maxAge > 0) {\n                // While there are pending internal block requests...\n                while (this._internalBlockNumber) {\n                    // ...\"remember\" which fetch we started with\n                    const internalBlockNumber = this._internalBlockNumber;\n                    try {\n                        // Check the result is not too stale\n                        const result = yield internalBlockNumber;\n                        if ((getTime() - result.respTime) <= maxAge) {\n                            return result.blockNumber;\n                        }\n                        // Too old; fetch a new value\n                        break;\n                    }\n                    catch (error) {\n                        // The fetch rejected; if we are the first to get the\n                        // rejection, drop through so we replace it with a new\n                        // fetch; all others blocked will then get that fetch\n                        // which won't match the one they \"remembered\" and loop\n                        if (this._internalBlockNumber === internalBlockNumber) {\n                            break;\n                        }\n                    }\n                }\n            }\n            const reqTime = getTime();\n            const checkInternalBlockNumber = resolveProperties({\n                blockNumber: this.perform(\"getBlockNumber\", {}),\n                networkError: this.getNetwork().then((network) => (null), (error) => (error))\n            }).then(({ blockNumber, networkError }) => {\n                if (networkError) {\n                    // Unremember this bad internal block number\n                    if (this._internalBlockNumber === checkInternalBlockNumber) {\n                        this._internalBlockNumber = null;\n                    }\n                    throw networkError;\n                }\n                const respTime = getTime();\n                blockNumber = BigNumber.from(blockNumber).toNumber();\n                if (blockNumber < this._maxInternalBlockNumber) {\n                    blockNumber = this._maxInternalBlockNumber;\n                }\n                this._maxInternalBlockNumber = blockNumber;\n                this._setFastBlockNumber(blockNumber); // @TODO: Still need this?\n                return { blockNumber, reqTime, respTime };\n            });\n            this._internalBlockNumber = checkInternalBlockNumber;\n            // Swallow unhandled exceptions; if needed they are handled else where\n            checkInternalBlockNumber.catch((error) => {\n                // Don't null the dead (rejected) fetch, if it has already been updated\n                if (this._internalBlockNumber === checkInternalBlockNumber) {\n                    this._internalBlockNumber = null;\n                }\n            });\n            return (yield checkInternalBlockNumber).blockNumber;\n        });\n    }\n    poll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const pollId = nextPollId++;\n            // Track all running promises, so we can trigger a post-poll once they are complete\n            const runners = [];\n            let blockNumber = null;\n            try {\n                blockNumber = yield this._getInternalBlockNumber(100 + this.pollingInterval / 2);\n            }\n            catch (error) {\n                this.emit(\"error\", error);\n                return;\n            }\n            this._setFastBlockNumber(blockNumber);\n            // Emit a poll event after we have the latest (fast) block number\n            this.emit(\"poll\", pollId, blockNumber);\n            // If the block has not changed, meh.\n            if (blockNumber === this._lastBlockNumber) {\n                this.emit(\"didPoll\", pollId);\n                return;\n            }\n            // First polling cycle, trigger a \"block\" events\n            if (this._emitted.block === -2) {\n                this._emitted.block = blockNumber - 1;\n            }\n            if (Math.abs((this._emitted.block) - blockNumber) > 1000) {\n                logger.warn(`network block skew detected; skipping block events (emitted=${this._emitted.block} blockNumber${blockNumber})`);\n                this.emit(\"error\", logger.makeError(\"network block skew detected\", Logger.errors.NETWORK_ERROR, {\n                    blockNumber: blockNumber,\n                    event: \"blockSkew\",\n                    previousBlockNumber: this._emitted.block\n                }));\n                this.emit(\"block\", blockNumber);\n            }\n            else {\n                // Notify all listener for each block that has passed\n                for (let i = this._emitted.block + 1; i <= blockNumber; i++) {\n                    this.emit(\"block\", i);\n                }\n            }\n            // The emitted block was updated, check for obsolete events\n            if (this._emitted.block !== blockNumber) {\n                this._emitted.block = blockNumber;\n                Object.keys(this._emitted).forEach((key) => {\n                    // The block event does not expire\n                    if (key === \"block\") {\n                        return;\n                    }\n                    // The block we were at when we emitted this event\n                    const eventBlockNumber = this._emitted[key];\n                    // We cannot garbage collect pending transactions or blocks here\n                    // They should be garbage collected by the Provider when setting\n                    // \"pending\" events\n                    if (eventBlockNumber === \"pending\") {\n                        return;\n                    }\n                    // Evict any transaction hashes or block hashes over 12 blocks\n                    // old, since they should not return null anyways\n                    if (blockNumber - eventBlockNumber > 12) {\n                        delete this._emitted[key];\n                    }\n                });\n            }\n            // First polling cycle\n            if (this._lastBlockNumber === -2) {\n                this._lastBlockNumber = blockNumber - 1;\n            }\n            // Find all transaction hashes we are waiting on\n            this._events.forEach((event) => {\n                switch (event.type) {\n                    case \"tx\": {\n                        const hash = event.hash;\n                        let runner = this.getTransactionReceipt(hash).then((receipt) => {\n                            if (!receipt || receipt.blockNumber == null) {\n                                return null;\n                            }\n                            this._emitted[\"t:\" + hash] = receipt.blockNumber;\n                            this.emit(hash, receipt);\n                            return null;\n                        }).catch((error) => { this.emit(\"error\", error); });\n                        runners.push(runner);\n                        break;\n                    }\n                    case \"filter\": {\n                        // We only allow a single getLogs to be in-flight at a time\n                        if (!event._inflight) {\n                            event._inflight = true;\n                            // Filter from the last known event; due to load-balancing\n                            // and some nodes returning updated block numbers before\n                            // indexing events, a logs result with 0 entries cannot be\n                            // trusted and we must retry a range which includes it again\n                            const filter = event.filter;\n                            filter.fromBlock = event._lastBlockNumber + 1;\n                            filter.toBlock = blockNumber;\n                            // Prevent fitler ranges from growing too wild\n                            if (filter.toBlock - this._maxFilterBlockRange > filter.fromBlock) {\n                                filter.fromBlock = filter.toBlock - this._maxFilterBlockRange;\n                            }\n                            const runner = this.getLogs(filter).then((logs) => {\n                                // Allow the next getLogs\n                                event._inflight = false;\n                                if (logs.length === 0) {\n                                    return;\n                                }\n                                logs.forEach((log) => {\n                                    // Only when we get an event for a given block number\n                                    // can we trust the events are indexed\n                                    if (log.blockNumber > event._lastBlockNumber) {\n                                        event._lastBlockNumber = log.blockNumber;\n                                    }\n                                    // Make sure we stall requests to fetch blocks and txs\n                                    this._emitted[\"b:\" + log.blockHash] = log.blockNumber;\n                                    this._emitted[\"t:\" + log.transactionHash] = log.blockNumber;\n                                    this.emit(filter, log);\n                                });\n                            }).catch((error) => {\n                                this.emit(\"error\", error);\n                                // Allow another getLogs (the range was not updated)\n                                event._inflight = false;\n                            });\n                            runners.push(runner);\n                        }\n                        break;\n                    }\n                }\n            });\n            this._lastBlockNumber = blockNumber;\n            // Once all events for this loop have been processed, emit \"didPoll\"\n            Promise.all(runners).then(() => {\n                this.emit(\"didPoll\", pollId);\n            }).catch((error) => { this.emit(\"error\", error); });\n            return;\n        });\n    }\n    // Deprecated; do not use this\n    resetEventsBlock(blockNumber) {\n        this._lastBlockNumber = blockNumber - 1;\n        if (this.polling) {\n            this.poll();\n        }\n    }\n    get network() {\n        return this._network;\n    }\n    // This method should query the network if the underlying network\n    // can change, such as when connected to a JSON-RPC backend\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return logger.throwError(\"provider does not support network detection\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"provider.detectNetwork\"\n            });\n        });\n    }\n    getNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const network = yield this._ready();\n            // Make sure we are still connected to the same network; this is\n            // only an external call for backends which can have the underlying\n            // network change spontaneously\n            const currentNetwork = yield this.detectNetwork();\n            if (network.chainId !== currentNetwork.chainId) {\n                // We are allowing network changes, things can get complex fast;\n                // make sure you know what you are doing if you use \"any\"\n                if (this.anyNetwork) {\n                    this._network = currentNetwork;\n                    // Reset all internal block number guards and caches\n                    this._lastBlockNumber = -2;\n                    this._fastBlockNumber = null;\n                    this._fastBlockNumberPromise = null;\n                    this._fastQueryDate = 0;\n                    this._emitted.block = -2;\n                    this._maxInternalBlockNumber = -1024;\n                    this._internalBlockNumber = null;\n                    // The \"network\" event MUST happen before this method resolves\n                    // so any events have a chance to unregister, so we stall an\n                    // additional event loop before returning from /this/ call\n                    this.emit(\"network\", currentNetwork, network);\n                    yield stall(0);\n                    return this._network;\n                }\n                const error = logger.makeError(\"underlying network changed\", Logger.errors.NETWORK_ERROR, {\n                    event: \"changed\",\n                    network: network,\n                    detectedNetwork: currentNetwork\n                });\n                this.emit(\"error\", error);\n                throw error;\n            }\n            return network;\n        });\n    }\n    get blockNumber() {\n        this._getInternalBlockNumber(100 + this.pollingInterval / 2).then((blockNumber) => {\n            this._setFastBlockNumber(blockNumber);\n        }, (error) => { });\n        return (this._fastBlockNumber != null) ? this._fastBlockNumber : -1;\n    }\n    get polling() {\n        return (this._poller != null);\n    }\n    set polling(value) {\n        if (value && !this._poller) {\n            this._poller = setInterval(() => { this.poll(); }, this.pollingInterval);\n            if (!this._bootstrapPoll) {\n                this._bootstrapPoll = setTimeout(() => {\n                    this.poll();\n                    // We block additional polls until the polling interval\n                    // is done, to prevent overwhelming the poll function\n                    this._bootstrapPoll = setTimeout(() => {\n                        // If polling was disabled, something may require a poke\n                        // since starting the bootstrap poll and it was disabled\n                        if (!this._poller) {\n                            this.poll();\n                        }\n                        // Clear out the bootstrap so we can do another\n                        this._bootstrapPoll = null;\n                    }, this.pollingInterval);\n                }, 0);\n            }\n        }\n        else if (!value && this._poller) {\n            clearInterval(this._poller);\n            this._poller = null;\n        }\n    }\n    get pollingInterval() {\n        return this._pollingInterval;\n    }\n    set pollingInterval(value) {\n        if (typeof (value) !== \"number\" || value <= 0 || parseInt(String(value)) != value) {\n            throw new Error(\"invalid polling interval\");\n        }\n        this._pollingInterval = value;\n        if (this._poller) {\n            clearInterval(this._poller);\n            this._poller = setInterval(() => { this.poll(); }, this._pollingInterval);\n        }\n    }\n    _getFastBlockNumber() {\n        const now = getTime();\n        // Stale block number, request a newer value\n        if ((now - this._fastQueryDate) > 2 * this._pollingInterval) {\n            this._fastQueryDate = now;\n            this._fastBlockNumberPromise = this.getBlockNumber().then((blockNumber) => {\n                if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n                    this._fastBlockNumber = blockNumber;\n                }\n                return this._fastBlockNumber;\n            });\n        }\n        return this._fastBlockNumberPromise;\n    }\n    _setFastBlockNumber(blockNumber) {\n        // Older block, maybe a stale request\n        if (this._fastBlockNumber != null && blockNumber < this._fastBlockNumber) {\n            return;\n        }\n        // Update the time we updated the blocknumber\n        this._fastQueryDate = getTime();\n        // Newer block number, use  it\n        if (this._fastBlockNumber == null || blockNumber > this._fastBlockNumber) {\n            this._fastBlockNumber = blockNumber;\n            this._fastBlockNumberPromise = Promise.resolve(blockNumber);\n        }\n    }\n    waitForTransaction(transactionHash, confirmations, timeout) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._waitForTransaction(transactionHash, (confirmations == null) ? 1 : confirmations, timeout || 0, null);\n        });\n    }\n    _waitForTransaction(transactionHash, confirmations, timeout, replaceable) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const receipt = yield this.getTransactionReceipt(transactionHash);\n            // Receipt is already good\n            if ((receipt ? receipt.confirmations : 0) >= confirmations) {\n                return receipt;\n            }\n            // Poll until the receipt is good...\n            return new Promise((resolve, reject) => {\n                const cancelFuncs = [];\n                let done = false;\n                const alreadyDone = function () {\n                    if (done) {\n                        return true;\n                    }\n                    done = true;\n                    cancelFuncs.forEach((func) => { func(); });\n                    return false;\n                };\n                const minedHandler = (receipt) => {\n                    if (receipt.confirmations < confirmations) {\n                        return;\n                    }\n                    if (alreadyDone()) {\n                        return;\n                    }\n                    resolve(receipt);\n                };\n                this.on(transactionHash, minedHandler);\n                cancelFuncs.push(() => { this.removeListener(transactionHash, minedHandler); });\n                if (replaceable) {\n                    let lastBlockNumber = replaceable.startBlock;\n                    let scannedBlock = null;\n                    const replaceHandler = (blockNumber) => __awaiter(this, void 0, void 0, function* () {\n                        if (done) {\n                            return;\n                        }\n                        // Wait 1 second; this is only used in the case of a fault, so\n                        // we will trade off a little bit of latency for more consistent\n                        // results and fewer JSON-RPC calls\n                        yield stall(1000);\n                        this.getTransactionCount(replaceable.from).then((nonce) => __awaiter(this, void 0, void 0, function* () {\n                            if (done) {\n                                return;\n                            }\n                            if (nonce <= replaceable.nonce) {\n                                lastBlockNumber = blockNumber;\n                            }\n                            else {\n                                // First check if the transaction was mined\n                                {\n                                    const mined = yield this.getTransaction(transactionHash);\n                                    if (mined && mined.blockNumber != null) {\n                                        return;\n                                    }\n                                }\n                                // First time scanning. We start a little earlier for some\n                                // wiggle room here to handle the eventually consistent nature\n                                // of blockchain (e.g. the getTransactionCount was for a\n                                // different block)\n                                if (scannedBlock == null) {\n                                    scannedBlock = lastBlockNumber - 3;\n                                    if (scannedBlock < replaceable.startBlock) {\n                                        scannedBlock = replaceable.startBlock;\n                                    }\n                                }\n                                while (scannedBlock <= blockNumber) {\n                                    if (done) {\n                                        return;\n                                    }\n                                    const block = yield this.getBlockWithTransactions(scannedBlock);\n                                    for (let ti = 0; ti < block.transactions.length; ti++) {\n                                        const tx = block.transactions[ti];\n                                        // Successfully mined!\n                                        if (tx.hash === transactionHash) {\n                                            return;\n                                        }\n                                        // Matches our transaction from and nonce; its a replacement\n                                        if (tx.from === replaceable.from && tx.nonce === replaceable.nonce) {\n                                            if (done) {\n                                                return;\n                                            }\n                                            // Get the receipt of the replacement\n                                            const receipt = yield this.waitForTransaction(tx.hash, confirmations);\n                                            // Already resolved or rejected (prolly a timeout)\n                                            if (alreadyDone()) {\n                                                return;\n                                            }\n                                            // The reason we were replaced\n                                            let reason = \"replaced\";\n                                            if (tx.data === replaceable.data && tx.to === replaceable.to && tx.value.eq(replaceable.value)) {\n                                                reason = \"repriced\";\n                                            }\n                                            else if (tx.data === \"0x\" && tx.from === tx.to && tx.value.isZero()) {\n                                                reason = \"cancelled\";\n                                            }\n                                            // Explain why we were replaced\n                                            reject(logger.makeError(\"transaction was replaced\", Logger.errors.TRANSACTION_REPLACED, {\n                                                cancelled: (reason === \"replaced\" || reason === \"cancelled\"),\n                                                reason,\n                                                replacement: this._wrapTransaction(tx),\n                                                hash: transactionHash,\n                                                receipt\n                                            }));\n                                            return;\n                                        }\n                                    }\n                                    scannedBlock++;\n                                }\n                            }\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        }), (error) => {\n                            if (done) {\n                                return;\n                            }\n                            this.once(\"block\", replaceHandler);\n                        });\n                    });\n                    if (done) {\n                        return;\n                    }\n                    this.once(\"block\", replaceHandler);\n                    cancelFuncs.push(() => {\n                        this.removeListener(\"block\", replaceHandler);\n                    });\n                }\n                if (typeof (timeout) === \"number\" && timeout > 0) {\n                    const timer = setTimeout(() => {\n                        if (alreadyDone()) {\n                            return;\n                        }\n                        reject(logger.makeError(\"timeout exceeded\", Logger.errors.TIMEOUT, { timeout: timeout }));\n                    }, timeout);\n                    if (timer.unref) {\n                        timer.unref();\n                    }\n                    cancelFuncs.push(() => { clearTimeout(timer); });\n                }\n            });\n        });\n    }\n    getBlockNumber() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._getInternalBlockNumber(0);\n        });\n    }\n    getGasPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const result = yield this.perform(\"getGasPrice\", {});\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getGasPrice\",\n                    result, error\n                });\n            }\n        });\n    }\n    getBalance(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getBalance\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getBalance\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getTransactionCount(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getTransactionCount\", params);\n            try {\n                return BigNumber.from(result).toNumber();\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getTransactionCount\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getCode(addressOrName, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag)\n            });\n            const result = yield this.perform(\"getCode\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getCode\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    getStorageAt(addressOrName, position, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                address: this._getAddress(addressOrName),\n                blockTag: this._getBlockTag(blockTag),\n                position: Promise.resolve(position).then((p) => hexValue(p))\n            });\n            const result = yield this.perform(\"getStorageAt\", params);\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"getStorageAt\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    // This should be called by any subclass wrapping a TransactionResponse\n    _wrapTransaction(tx, hash, startBlock) {\n        if (hash != null && hexDataLength(hash) !== 32) {\n            throw new Error(\"invalid response - sendTransaction\");\n        }\n        const result = tx;\n        // Check the hash we expect is the same as the hash the server reported\n        if (hash != null && tx.hash !== hash) {\n            logger.throwError(\"Transaction hash mismatch from Provider.sendTransaction.\", Logger.errors.UNKNOWN_ERROR, { expectedHash: tx.hash, returnedHash: hash });\n        }\n        result.wait = (confirms, timeout) => __awaiter(this, void 0, void 0, function* () {\n            if (confirms == null) {\n                confirms = 1;\n            }\n            if (timeout == null) {\n                timeout = 0;\n            }\n            // Get the details to detect replacement\n            let replacement = undefined;\n            if (confirms !== 0 && startBlock != null) {\n                replacement = {\n                    data: tx.data,\n                    from: tx.from,\n                    nonce: tx.nonce,\n                    to: tx.to,\n                    value: tx.value,\n                    startBlock\n                };\n            }\n            const receipt = yield this._waitForTransaction(tx.hash, confirms, timeout, replacement);\n            if (receipt == null && confirms === 0) {\n                return null;\n            }\n            // No longer pending, allow the polling loop to garbage collect this\n            this._emitted[\"t:\" + tx.hash] = receipt.blockNumber;\n            if (receipt.status === 0) {\n                logger.throwError(\"transaction failed\", Logger.errors.CALL_EXCEPTION, {\n                    transactionHash: tx.hash,\n                    transaction: tx,\n                    receipt: receipt\n                });\n            }\n            return receipt;\n        });\n        return result;\n    }\n    sendTransaction(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const hexTx = yield Promise.resolve(signedTransaction).then(t => hexlify(t));\n            const tx = this.formatter.transaction(signedTransaction);\n            if (tx.confirmations == null) {\n                tx.confirmations = 0;\n            }\n            const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n            try {\n                const hash = yield this.perform(\"sendTransaction\", { signedTransaction: hexTx });\n                return this._wrapTransaction(tx, hash, blockNumber);\n            }\n            catch (error) {\n                error.transaction = tx;\n                error.transactionHash = tx.hash;\n                throw error;\n            }\n        });\n    }\n    _getTransactionRequest(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const values = yield transaction;\n            const tx = {};\n            [\"from\", \"to\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? this._getAddress(v) : null));\n            });\n            [\"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"value\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? BigNumber.from(v) : null));\n            });\n            [\"type\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => ((v != null) ? v : null));\n            });\n            if (values.accessList) {\n                tx.accessList = this.formatter.accessList(values.accessList);\n            }\n            [\"data\"].forEach((key) => {\n                if (values[key] == null) {\n                    return;\n                }\n                tx[key] = Promise.resolve(values[key]).then((v) => (v ? hexlify(v) : null));\n            });\n            return this.formatter.transactionRequest(yield resolveProperties(tx));\n        });\n    }\n    _getFilter(filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            filter = yield filter;\n            const result = {};\n            if (filter.address != null) {\n                result.address = this._getAddress(filter.address);\n            }\n            [\"blockHash\", \"topics\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = filter[key];\n            });\n            [\"fromBlock\", \"toBlock\"].forEach((key) => {\n                if (filter[key] == null) {\n                    return;\n                }\n                result[key] = this._getBlockTag(filter[key]);\n            });\n            return this.formatter.filter(yield resolveProperties(result));\n        });\n    }\n    _call(transaction, blockTag, attempt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (attempt >= MAX_CCIP_REDIRECTS) {\n                logger.throwError(\"CCIP read exceeded maximum redirections\", Logger.errors.SERVER_ERROR, {\n                    redirects: attempt, transaction\n                });\n            }\n            const txSender = transaction.to;\n            const result = yield this.perform(\"call\", { transaction, blockTag });\n            // CCIP Read request via OffchainLookup(address,string[],bytes,bytes4,bytes)\n            if (attempt >= 0 && blockTag === \"latest\" && txSender != null && result.substring(0, 10) === \"0x556f1830\" && (hexDataLength(result) % 32 === 4)) {\n                try {\n                    const data = hexDataSlice(result, 4);\n                    // Check the sender of the OffchainLookup matches the transaction\n                    const sender = hexDataSlice(data, 0, 32);\n                    if (!BigNumber.from(sender).eq(txSender)) {\n                        logger.throwError(\"CCIP Read sender did not match\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    // Read the URLs from the response\n                    const urls = [];\n                    const urlsOffset = BigNumber.from(hexDataSlice(data, 32, 64)).toNumber();\n                    const urlsLength = BigNumber.from(hexDataSlice(data, urlsOffset, urlsOffset + 32)).toNumber();\n                    const urlsData = hexDataSlice(data, urlsOffset + 32);\n                    for (let u = 0; u < urlsLength; u++) {\n                        const url = _parseString(urlsData, u * 32);\n                        if (url == null) {\n                            logger.throwError(\"CCIP Read contained corrupt URL string\", Logger.errors.CALL_EXCEPTION, {\n                                name: \"OffchainLookup\",\n                                signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                                transaction, data: result\n                            });\n                        }\n                        urls.push(url);\n                    }\n                    // Get the CCIP calldata to forward\n                    const calldata = _parseBytes(data, 64);\n                    // Get the callbackSelector (bytes4)\n                    if (!BigNumber.from(hexDataSlice(data, 100, 128)).isZero()) {\n                        logger.throwError(\"CCIP Read callback selector included junk\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    const callbackSelector = hexDataSlice(data, 96, 100);\n                    // Get the extra data to send back to the contract as context\n                    const extraData = _parseBytes(data, 128);\n                    const ccipResult = yield this.ccipReadFetch(transaction, calldata, urls);\n                    if (ccipResult == null) {\n                        logger.throwError(\"CCIP Read disabled or provided no URLs\", Logger.errors.CALL_EXCEPTION, {\n                            name: \"OffchainLookup\",\n                            signature: \"OffchainLookup(address,string[],bytes,bytes4,bytes)\",\n                            transaction, data: result\n                        });\n                    }\n                    const tx = {\n                        to: txSender,\n                        data: hexConcat([callbackSelector, encodeBytes([ccipResult, extraData])])\n                    };\n                    return this._call(tx, blockTag, attempt + 1);\n                }\n                catch (error) {\n                    if (error.code === Logger.errors.SERVER_ERROR) {\n                        throw error;\n                    }\n                }\n            }\n            try {\n                return hexlify(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"call\",\n                    params: { transaction, blockTag }, result, error\n                });\n            }\n        });\n    }\n    call(transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const resolved = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction),\n                blockTag: this._getBlockTag(blockTag),\n                ccipReadEnabled: Promise.resolve(transaction.ccipReadEnabled)\n            });\n            return this._call(resolved.transaction, resolved.blockTag, resolved.ccipReadEnabled ? 0 : -1);\n        });\n    }\n    estimateGas(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({\n                transaction: this._getTransactionRequest(transaction)\n            });\n            const result = yield this.perform(\"estimateGas\", params);\n            try {\n                return BigNumber.from(result);\n            }\n            catch (error) {\n                return logger.throwError(\"bad result from backend\", Logger.errors.SERVER_ERROR, {\n                    method: \"estimateGas\",\n                    params, result, error\n                });\n            }\n        });\n    }\n    _getAddress(addressOrName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            addressOrName = yield addressOrName;\n            if (typeof (addressOrName) !== \"string\") {\n                logger.throwArgumentError(\"invalid address or ENS name\", \"name\", addressOrName);\n            }\n            const address = yield this.resolveName(addressOrName);\n            if (address == null) {\n                logger.throwError(\"ENS name not configured\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: `resolveName(${JSON.stringify(addressOrName)})`\n                });\n            }\n            return address;\n        });\n    }\n    _getBlock(blockHashOrBlockTag, includeTransactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            blockHashOrBlockTag = yield blockHashOrBlockTag;\n            // If blockTag is a number (not \"latest\", etc), this is the block number\n            let blockNumber = -128;\n            const params = {\n                includeTransactions: !!includeTransactions\n            };\n            if (isHexString(blockHashOrBlockTag, 32)) {\n                params.blockHash = blockHashOrBlockTag;\n            }\n            else {\n                try {\n                    params.blockTag = yield this._getBlockTag(blockHashOrBlockTag);\n                    if (isHexString(params.blockTag)) {\n                        blockNumber = parseInt(params.blockTag.substring(2), 16);\n                    }\n                }\n                catch (error) {\n                    logger.throwArgumentError(\"invalid block hash or block tag\", \"blockHashOrBlockTag\", blockHashOrBlockTag);\n                }\n            }\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const block = yield this.perform(\"getBlock\", params);\n                // Block was not found\n                if (block == null) {\n                    // For blockhashes, if we didn't say it existed, that blockhash may\n                    // not exist. If we did see it though, perhaps from a log, we know\n                    // it exists, and this node is just not caught up yet.\n                    if (params.blockHash != null) {\n                        if (this._emitted[\"b:\" + params.blockHash] == null) {\n                            return null;\n                        }\n                    }\n                    // For block tags, if we are asking for a future block, we return null\n                    if (params.blockTag != null) {\n                        if (blockNumber > this._emitted.block) {\n                            return null;\n                        }\n                    }\n                    // Retry on the next block\n                    return undefined;\n                }\n                // Add transactions\n                if (includeTransactions) {\n                    let blockNumber = null;\n                    for (let i = 0; i < block.transactions.length; i++) {\n                        const tx = block.transactions[i];\n                        if (tx.blockNumber == null) {\n                            tx.confirmations = 0;\n                        }\n                        else if (tx.confirmations == null) {\n                            if (blockNumber == null) {\n                                blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                            }\n                            // Add the confirmations using the fast block number (pessimistic)\n                            let confirmations = (blockNumber - tx.blockNumber) + 1;\n                            if (confirmations <= 0) {\n                                confirmations = 1;\n                            }\n                            tx.confirmations = confirmations;\n                        }\n                    }\n                    const blockWithTxs = this.formatter.blockWithTransactions(block);\n                    blockWithTxs.transactions = blockWithTxs.transactions.map((tx) => this._wrapTransaction(tx));\n                    return blockWithTxs;\n                }\n                return this.formatter.block(block);\n            }), { oncePoll: this });\n        });\n    }\n    getBlock(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, false));\n    }\n    getBlockWithTransactions(blockHashOrBlockTag) {\n        return (this._getBlock(blockHashOrBlockTag, true));\n    }\n    getTransaction(transactionHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransaction\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                const tx = this.formatter.transactionResponse(result);\n                if (tx.blockNumber == null) {\n                    tx.confirmations = 0;\n                }\n                else if (tx.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - tx.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    tx.confirmations = confirmations;\n                }\n                return this._wrapTransaction(tx);\n            }), { oncePoll: this });\n        });\n    }\n    getTransactionReceipt(transactionHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            transactionHash = yield transactionHash;\n            const params = { transactionHash: this.formatter.hash(transactionHash, true) };\n            return poll(() => __awaiter(this, void 0, void 0, function* () {\n                const result = yield this.perform(\"getTransactionReceipt\", params);\n                if (result == null) {\n                    if (this._emitted[\"t:\" + transactionHash] == null) {\n                        return null;\n                    }\n                    return undefined;\n                }\n                // \"geth-etc\" returns receipts before they are ready\n                if (result.blockHash == null) {\n                    return undefined;\n                }\n                const receipt = this.formatter.receipt(result);\n                if (receipt.blockNumber == null) {\n                    receipt.confirmations = 0;\n                }\n                else if (receipt.confirmations == null) {\n                    const blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                    // Add the confirmations using the fast block number (pessimistic)\n                    let confirmations = (blockNumber - receipt.blockNumber) + 1;\n                    if (confirmations <= 0) {\n                        confirmations = 1;\n                    }\n                    receipt.confirmations = confirmations;\n                }\n                return receipt;\n            }), { oncePoll: this });\n        });\n    }\n    getLogs(filter) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            const params = yield resolveProperties({ filter: this._getFilter(filter) });\n            const logs = yield this.perform(\"getLogs\", params);\n            logs.forEach((log) => {\n                if (log.removed == null) {\n                    log.removed = false;\n                }\n            });\n            return Formatter.arrayOf(this.formatter.filterLog.bind(this.formatter))(logs);\n        });\n    }\n    getEtherPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.getNetwork();\n            return this.perform(\"getEtherPrice\", {});\n        });\n    }\n    _getBlockTag(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            blockTag = yield blockTag;\n            if (typeof (blockTag) === \"number\" && blockTag < 0) {\n                if (blockTag % 1) {\n                    logger.throwArgumentError(\"invalid BlockTag\", \"blockTag\", blockTag);\n                }\n                let blockNumber = yield this._getInternalBlockNumber(100 + 2 * this.pollingInterval);\n                blockNumber += blockTag;\n                if (blockNumber < 0) {\n                    blockNumber = 0;\n                }\n                return this.formatter.blockTag(blockNumber);\n            }\n            return this.formatter.blockTag(blockTag);\n        });\n    }\n    getResolver(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let currentName = name;\n            while (true) {\n                if (currentName === \"\" || currentName === \".\") {\n                    return null;\n                }\n                // Optimization since the eth node cannot change and does\n                // not have a wildcar resolver\n                if (name !== \"eth\" && currentName === \"eth\") {\n                    return null;\n                }\n                // Check the current node for a resolver\n                const addr = yield this._getResolver(currentName, \"getResolver\");\n                // Found a resolver!\n                if (addr != null) {\n                    const resolver = new Resolver(this, addr, name);\n                    // Legacy resolver found, using EIP-2544 so it isn't safe to use\n                    if (currentName !== name && !(yield resolver.supportsWildcard())) {\n                        return null;\n                    }\n                    return resolver;\n                }\n                // Get the parent node\n                currentName = currentName.split(\".\").slice(1).join(\".\");\n            }\n        });\n    }\n    _getResolver(name, operation) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (operation == null) {\n                operation = \"ENS\";\n            }\n            const network = yield this.getNetwork();\n            // No ENS...\n            if (!network.ensAddress) {\n                logger.throwError(\"network does not support ENS\", Logger.errors.UNSUPPORTED_OPERATION, { operation, network: network.name });\n            }\n            try {\n                // keccak256(\"resolver(bytes32)\")\n                const addrData = yield this.call({\n                    to: network.ensAddress,\n                    data: (\"0x0178b8bf\" + namehash(name).substring(2))\n                });\n                return this.formatter.callAddress(addrData);\n            }\n            catch (error) {\n                // ENS registry cannot throw errors on resolver(bytes32)\n            }\n            return null;\n        });\n    }\n    resolveName(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            name = yield name;\n            // If it is already an address, nothing to resolve\n            try {\n                return Promise.resolve(this.formatter.address(name));\n            }\n            catch (error) {\n                // If is is a hexstring, the address is bad (See #694)\n                if (isHexString(name)) {\n                    throw error;\n                }\n            }\n            if (typeof (name) !== \"string\") {\n                logger.throwArgumentError(\"invalid ENS name\", \"name\", name);\n            }\n            // Get the addr from the resovler\n            const resolver = yield this.getResolver(name);\n            if (!resolver) {\n                return null;\n            }\n            return yield resolver.getAddress();\n        });\n    }\n    lookupAddress(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            address = yield address;\n            address = this.formatter.address(address);\n            const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n            const resolverAddr = yield this._getResolver(node, \"lookupAddress\");\n            if (resolverAddr == null) {\n                return null;\n            }\n            // keccak(\"name(bytes32)\")\n            const name = _parseString(yield this.call({\n                to: resolverAddr,\n                data: (\"0x691f3431\" + namehash(node).substring(2))\n            }), 0);\n            const addr = yield this.resolveName(name);\n            if (addr != address) {\n                return null;\n            }\n            return name;\n        });\n    }\n    getAvatar(nameOrAddress) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let resolver = null;\n            if (isHexString(nameOrAddress)) {\n                // Address; reverse lookup\n                const address = this.formatter.address(nameOrAddress);\n                const node = address.substring(2).toLowerCase() + \".addr.reverse\";\n                const resolverAddress = yield this._getResolver(node, \"getAvatar\");\n                if (!resolverAddress) {\n                    return null;\n                }\n                // Try resolving the avatar against the addr.reverse resolver\n                resolver = new Resolver(this, resolverAddress, node);\n                try {\n                    const avatar = yield resolver.getAvatar();\n                    if (avatar) {\n                        return avatar.url;\n                    }\n                }\n                catch (error) {\n                    if (error.code !== Logger.errors.CALL_EXCEPTION) {\n                        throw error;\n                    }\n                }\n                // Try getting the name and performing forward lookup; allowing wildcards\n                try {\n                    // keccak(\"name(bytes32)\")\n                    const name = _parseString(yield this.call({\n                        to: resolverAddress,\n                        data: (\"0x691f3431\" + namehash(node).substring(2))\n                    }), 0);\n                    resolver = yield this.getResolver(name);\n                }\n                catch (error) {\n                    if (error.code !== Logger.errors.CALL_EXCEPTION) {\n                        throw error;\n                    }\n                    return null;\n                }\n            }\n            else {\n                // ENS name; forward lookup with wildcard\n                resolver = yield this.getResolver(nameOrAddress);\n                if (!resolver) {\n                    return null;\n                }\n            }\n            const avatar = yield resolver.getAvatar();\n            if (avatar == null) {\n                return null;\n            }\n            return avatar.url;\n        });\n    }\n    perform(method, params) {\n        return logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n    }\n    _startEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _stopEvent(event) {\n        this.polling = (this._events.filter((e) => e.pollable()).length > 0);\n    }\n    _addEventListener(eventName, listener, once) {\n        const event = new Event(getEventTag(eventName), listener, once);\n        this._events.push(event);\n        this._startEvent(event);\n        return this;\n    }\n    on(eventName, listener) {\n        return this._addEventListener(eventName, listener, false);\n    }\n    once(eventName, listener) {\n        return this._addEventListener(eventName, listener, true);\n    }\n    emit(eventName, ...args) {\n        let result = false;\n        let stopped = [];\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag) {\n                return true;\n            }\n            setTimeout(() => {\n                event.listener.apply(this, args);\n            }, 0);\n            result = true;\n            if (event.once) {\n                stopped.push(event);\n                return false;\n            }\n            return true;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!eventName) {\n            return this._events.length;\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events.filter((event) => {\n            return (event.tag === eventTag);\n        }).length;\n    }\n    listeners(eventName) {\n        if (eventName == null) {\n            return this._events.map((event) => event.listener);\n        }\n        let eventTag = getEventTag(eventName);\n        return this._events\n            .filter((event) => (event.tag === eventTag))\n            .map((event) => event.listener);\n    }\n    off(eventName, listener) {\n        if (listener == null) {\n            return this.removeAllListeners(eventName);\n        }\n        const stopped = [];\n        let found = false;\n        let eventTag = getEventTag(eventName);\n        this._events = this._events.filter((event) => {\n            if (event.tag !== eventTag || event.listener != listener) {\n                return true;\n            }\n            if (found) {\n                return true;\n            }\n            found = true;\n            stopped.push(event);\n            return false;\n        });\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n    removeAllListeners(eventName) {\n        let stopped = [];\n        if (eventName == null) {\n            stopped = this._events;\n            this._events = [];\n        }\n        else {\n            const eventTag = getEventTag(eventName);\n            this._events = this._events.filter((event) => {\n                if (event.tag !== eventTag) {\n                    return true;\n                }\n                stopped.push(event);\n                return false;\n            });\n        }\n        stopped.forEach((event) => { this._stopEvent(event); });\n        return this;\n    }\n}\n//# sourceMappingURL=base-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Signer } from \"@ethersproject/abstract-signer\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { _TypedDataEncoder } from \"@ethersproject/hash\";\nimport { checkProperties, deepCopy, defineReadOnly, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson, poll } from \"@ethersproject/web\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\nconst errorGas = [\"call\", \"estimateGas\"];\nfunction spelunk(value) {\n    if (value == null) {\n        return null;\n    }\n    // These *are* the droids we're looking for.\n    if (typeof (value.message) === \"string\" && value.message.match(\"reverted\") && isHexString(value.data)) {\n        return { message: value.message, data: value.data };\n    }\n    // Spelunk further...\n    if (typeof (value) === \"object\") {\n        for (const key in value) {\n            const result = spelunk(value[key]);\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    }\n    // Might be a JSON string we can further descend...\n    if (typeof (value) === \"string\") {\n        try {\n            return spelunk(JSON.parse(value));\n        }\n        catch (error) { }\n    }\n    return null;\n}\nfunction checkError(method, error, params) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\") {\n        const result = spelunk(error);\n        if (result) {\n            return result.data;\n        }\n        logger.throwError(\"missing revert data in call exception; Transaction reverted without a reason string\", Logger.errors.CALL_EXCEPTION, {\n            error, data: \"0x\"\n        });\n    }\n    // @TODO: Should we spelunk for message too?\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR && error.error && typeof (error.error.message) === \"string\") {\n        message = error.error.message;\n    }\n    else if (typeof (error.body) === \"string\") {\n        message = error.body;\n    }\n    else if (typeof (error.responseText) === \"string\") {\n        message = error.responseText;\n    }\n    message = (message || \"\").toLowerCase();\n    const transaction = params.transaction || params.signedTransaction;\n    // \"insufficient funds for gas * price + value + cost(data)\"\n    if (message.match(/insufficient funds|base fee exceeds gas limit/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"nonce too low\"\n    if (message.match(/nonce (is )?too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/replacement transaction underpriced/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    // \"replacement transaction underpriced\"\n    if (message.match(/only replay-protected/)) {\n        logger.throwError(\"legacy pre-eip-155 transactions not supported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            error, method, transaction\n        });\n    }\n    if (errorGas.indexOf(method) >= 0 && message.match(/gas required exceeds allowance|always failing transaction|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nfunction timer(timeout) {\n    return new Promise(function (resolve) {\n        setTimeout(resolve, timeout);\n    });\n}\nfunction getResult(payload) {\n    if (payload.error) {\n        // @TODO: not any\n        const error = new Error(payload.error.message);\n        error.code = payload.error.code;\n        error.data = payload.error.data;\n        throw error;\n    }\n    return payload.result;\n}\nfunction getLowerCase(value) {\n    if (value) {\n        return value.toLowerCase();\n    }\n    return value;\n}\nconst _constructorGuard = {};\nexport class JsonRpcSigner extends Signer {\n    constructor(constructorGuard, provider, addressOrIndex) {\n        logger.checkNew(new.target, JsonRpcSigner);\n        super();\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"do not call the JsonRpcSigner constructor directly; use provider.getSigner\");\n        }\n        defineReadOnly(this, \"provider\", provider);\n        if (addressOrIndex == null) {\n            addressOrIndex = 0;\n        }\n        if (typeof (addressOrIndex) === \"string\") {\n            defineReadOnly(this, \"_address\", this.provider.formatter.address(addressOrIndex));\n            defineReadOnly(this, \"_index\", null);\n        }\n        else if (typeof (addressOrIndex) === \"number\") {\n            defineReadOnly(this, \"_index\", addressOrIndex);\n            defineReadOnly(this, \"_address\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid address or index\", \"addressOrIndex\", addressOrIndex);\n        }\n    }\n    connect(provider) {\n        return logger.throwError(\"cannot alter JSON-RPC Signer connection\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"connect\"\n        });\n    }\n    connectUnchecked() {\n        return new UncheckedJsonRpcSigner(_constructorGuard, this.provider, this._address || this._index);\n    }\n    getAddress() {\n        if (this._address) {\n            return Promise.resolve(this._address);\n        }\n        return this.provider.send(\"eth_accounts\", []).then((accounts) => {\n            if (accounts.length <= this._index) {\n                logger.throwError(\"unknown account #\" + this._index, Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"getAddress\"\n                });\n            }\n            return this.provider.formatter.address(accounts[this._index]);\n        });\n    }\n    sendUncheckedTransaction(transaction) {\n        transaction = shallowCopy(transaction);\n        const fromAddress = this.getAddress().then((address) => {\n            if (address) {\n                address = address.toLowerCase();\n            }\n            return address;\n        });\n        // The JSON-RPC for eth_sendTransaction uses 90000 gas; if the user\n        // wishes to use this, it is easy to specify explicitly, otherwise\n        // we look it up for them.\n        if (transaction.gasLimit == null) {\n            const estimate = shallowCopy(transaction);\n            estimate.from = fromAddress;\n            transaction.gasLimit = this.provider.estimateGas(estimate);\n        }\n        if (transaction.to != null) {\n            transaction.to = Promise.resolve(transaction.to).then((to) => __awaiter(this, void 0, void 0, function* () {\n                if (to == null) {\n                    return null;\n                }\n                const address = yield this.provider.resolveName(to);\n                if (address == null) {\n                    logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                }\n                return address;\n            }));\n        }\n        return resolveProperties({\n            tx: resolveProperties(transaction),\n            sender: fromAddress\n        }).then(({ tx, sender }) => {\n            if (tx.from != null) {\n                if (tx.from.toLowerCase() !== sender) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n            }\n            else {\n                tx.from = sender;\n            }\n            const hexTx = this.provider.constructor.hexlifyTransaction(tx, { from: true });\n            return this.provider.send(\"eth_sendTransaction\", [hexTx]).then((hash) => {\n                return hash;\n            }, (error) => {\n                return checkError(\"sendTransaction\", error, hexTx);\n            });\n        });\n    }\n    signTransaction(transaction) {\n        return logger.throwError(\"signing transactions is unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"signTransaction\"\n        });\n    }\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // This cannot be mined any earlier than any recent block\n            const blockNumber = yield this.provider._getInternalBlockNumber(100 + 2 * this.provider.pollingInterval);\n            // Send the transaction\n            const hash = yield this.sendUncheckedTransaction(transaction);\n            try {\n                // Unfortunately, JSON-RPC only provides and opaque transaction hash\n                // for a response, and we need the actual transaction, so we poll\n                // for it; it should show up very quickly\n                return yield poll(() => __awaiter(this, void 0, void 0, function* () {\n                    const tx = yield this.provider.getTransaction(hash);\n                    if (tx === null) {\n                        return undefined;\n                    }\n                    return this.provider._wrapTransaction(tx, hash, blockNumber);\n                }), { oncePoll: this.provider });\n            }\n            catch (error) {\n                error.transactionHash = hash;\n                throw error;\n            }\n        });\n    }\n    signMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"personal_sign\", [hexlify(data), address.toLowerCase()]);\n        });\n    }\n    _legacySignMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = ((typeof (message) === \"string\") ? toUtf8Bytes(message) : message);\n            const address = yield this.getAddress();\n            // https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n            return yield this.provider.send(\"eth_sign\", [address.toLowerCase(), hexlify(data)]);\n        });\n    }\n    _signTypedData(domain, types, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Populate any ENS names (in-place)\n            const populated = yield _TypedDataEncoder.resolveNames(domain, types, value, (name) => {\n                return this.provider.resolveName(name);\n            });\n            const address = yield this.getAddress();\n            return yield this.provider.send(\"eth_signTypedData_v4\", [\n                address.toLowerCase(),\n                JSON.stringify(_TypedDataEncoder.getPayload(populated.domain, types, populated.value))\n            ]);\n        });\n    }\n    unlock(password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = this.provider;\n            const address = yield this.getAddress();\n            return provider.send(\"personal_unlockAccount\", [address.toLowerCase(), password, null]);\n        });\n    }\n}\nclass UncheckedJsonRpcSigner extends JsonRpcSigner {\n    sendTransaction(transaction) {\n        return this.sendUncheckedTransaction(transaction).then((hash) => {\n            return {\n                hash: hash,\n                nonce: null,\n                gasLimit: null,\n                gasPrice: null,\n                data: null,\n                value: null,\n                chainId: null,\n                confirmations: 0,\n                from: null,\n                wait: (confirmations) => { return this.provider.waitForTransaction(hash, confirmations); }\n            };\n        });\n    }\n}\nconst allowedTransactionKeys = {\n    chainId: true, data: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true\n};\nexport class JsonRpcProvider extends BaseProvider {\n    constructor(url, network) {\n        logger.checkNew(new.target, JsonRpcProvider);\n        let networkOrReady = network;\n        // The network is unknown, query the JSON-RPC for it\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then((network) => {\n                        resolve(network);\n                    }, (error) => {\n                        reject(error);\n                    });\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Default URL\n        if (!url) {\n            url = getStatic(this.constructor, \"defaultUrl\")();\n        }\n        if (typeof (url) === \"string\") {\n            defineReadOnly(this, \"connection\", Object.freeze({\n                url: url\n            }));\n        }\n        else {\n            defineReadOnly(this, \"connection\", Object.freeze(shallowCopy(url)));\n        }\n        this._nextId = 42;\n    }\n    get _cache() {\n        if (this._eventLoopCache == null) {\n            this._eventLoopCache = {};\n        }\n        return this._eventLoopCache;\n    }\n    static defaultUrl() {\n        return \"http:/\\/localhost:8545\";\n    }\n    detectNetwork() {\n        if (!this._cache[\"detectNetwork\"]) {\n            this._cache[\"detectNetwork\"] = this._uncachedDetectNetwork();\n            // Clear this cache at the beginning of the next event loop\n            setTimeout(() => {\n                this._cache[\"detectNetwork\"] = null;\n            }, 0);\n        }\n        return this._cache[\"detectNetwork\"];\n    }\n    _uncachedDetectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield timer(0);\n            let chainId = null;\n            try {\n                chainId = yield this.send(\"eth_chainId\", []);\n            }\n            catch (error) {\n                try {\n                    chainId = yield this.send(\"net_version\", []);\n                }\n                catch (error) { }\n            }\n            if (chainId != null) {\n                const getNetwork = getStatic(this.constructor, \"getNetwork\");\n                try {\n                    return getNetwork(BigNumber.from(chainId).toNumber());\n                }\n                catch (error) {\n                    return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                        chainId: chainId,\n                        event: \"invalidNetwork\",\n                        serverError: error\n                    });\n                }\n            }\n            return logger.throwError(\"could not detect network\", Logger.errors.NETWORK_ERROR, {\n                event: \"noNetwork\"\n            });\n        });\n    }\n    getSigner(addressOrIndex) {\n        return new JsonRpcSigner(_constructorGuard, this, addressOrIndex);\n    }\n    getUncheckedSigner(addressOrIndex) {\n        return this.getSigner(addressOrIndex).connectUnchecked();\n    }\n    listAccounts() {\n        return this.send(\"eth_accounts\", []).then((accounts) => {\n            return accounts.map((a) => this.formatter.address(a));\n        });\n    }\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        this.emit(\"debug\", {\n            action: \"request\",\n            request: deepCopy(request),\n            provider: this\n        });\n        // We can expand this in the future to any call, but for now these\n        // are the biggest wins and do not require any serializing parameters.\n        const cache = ([\"eth_chainId\", \"eth_blockNumber\"].indexOf(method) >= 0);\n        if (cache && this._cache[method]) {\n            return this._cache[method];\n        }\n        const result = fetchJson(this.connection, JSON.stringify(request), getResult).then((result) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: request,\n                response: result,\n                provider: this\n            });\n            return result;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                error: error,\n                request: request,\n                provider: this\n            });\n            throw error;\n        });\n        // Cache the fetch, but clear it on the next event loop\n        if (cache) {\n            this._cache[method] = result;\n            setTimeout(() => {\n                this._cache[method] = null;\n            }, 0);\n        }\n        return result;\n    }\n    prepareRequest(method, params) {\n        switch (method) {\n            case \"getBlockNumber\":\n                return [\"eth_blockNumber\", []];\n            case \"getGasPrice\":\n                return [\"eth_gasPrice\", []];\n            case \"getBalance\":\n                return [\"eth_getBalance\", [getLowerCase(params.address), params.blockTag]];\n            case \"getTransactionCount\":\n                return [\"eth_getTransactionCount\", [getLowerCase(params.address), params.blockTag]];\n            case \"getCode\":\n                return [\"eth_getCode\", [getLowerCase(params.address), params.blockTag]];\n            case \"getStorageAt\":\n                return [\"eth_getStorageAt\", [getLowerCase(params.address), params.position, params.blockTag]];\n            case \"sendTransaction\":\n                return [\"eth_sendRawTransaction\", [params.signedTransaction]];\n            case \"getBlock\":\n                if (params.blockTag) {\n                    return [\"eth_getBlockByNumber\", [params.blockTag, !!params.includeTransactions]];\n                }\n                else if (params.blockHash) {\n                    return [\"eth_getBlockByHash\", [params.blockHash, !!params.includeTransactions]];\n                }\n                return null;\n            case \"getTransaction\":\n                return [\"eth_getTransactionByHash\", [params.transactionHash]];\n            case \"getTransactionReceipt\":\n                return [\"eth_getTransactionReceipt\", [params.transactionHash]];\n            case \"call\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_call\", [hexlifyTransaction(params.transaction, { from: true }), params.blockTag]];\n            }\n            case \"estimateGas\": {\n                const hexlifyTransaction = getStatic(this.constructor, \"hexlifyTransaction\");\n                return [\"eth_estimateGas\", [hexlifyTransaction(params.transaction, { from: true })]];\n            }\n            case \"getLogs\":\n                if (params.filter && params.filter.address != null) {\n                    params.filter.address = getLowerCase(params.filter.address);\n                }\n                return [\"eth_getLogs\", [params.filter]];\n            default:\n                break;\n        }\n        return null;\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Legacy networks do not like the type field being passed along (which\n            // is fair), so we delete type if it is 0 and a non-EIP-1559 network\n            if (method === \"call\" || method === \"estimateGas\") {\n                const tx = params.transaction;\n                if (tx && tx.type != null && BigNumber.from(tx.type).isZero()) {\n                    // If there are no EIP-1559 properties, it might be non-EIP-a559\n                    if (tx.maxFeePerGas == null && tx.maxPriorityFeePerGas == null) {\n                        const feeData = yield this.getFeeData();\n                        if (feeData.maxFeePerGas == null && feeData.maxPriorityFeePerGas == null) {\n                            // Network doesn't know about EIP-1559 (and hence type)\n                            params = shallowCopy(params);\n                            params.transaction = shallowCopy(tx);\n                            delete params.transaction.type;\n                        }\n                    }\n                }\n            }\n            const args = this.prepareRequest(method, params);\n            if (args == null) {\n                logger.throwError(method + \" not implemented\", Logger.errors.NOT_IMPLEMENTED, { operation: method });\n            }\n            try {\n                return yield this.send(args[0], args[1]);\n            }\n            catch (error) {\n                return checkError(method, error, params);\n            }\n        });\n    }\n    _startEvent(event) {\n        if (event.tag === \"pending\") {\n            this._startPending();\n        }\n        super._startEvent(event);\n    }\n    _startPending() {\n        if (this._pendingFilter != null) {\n            return;\n        }\n        const self = this;\n        const pendingFilter = this.send(\"eth_newPendingTransactionFilter\", []);\n        this._pendingFilter = pendingFilter;\n        pendingFilter.then(function (filterId) {\n            function poll() {\n                self.send(\"eth_getFilterChanges\", [filterId]).then(function (hashes) {\n                    if (self._pendingFilter != pendingFilter) {\n                        return null;\n                    }\n                    let seq = Promise.resolve();\n                    hashes.forEach(function (hash) {\n                        // @TODO: This should be garbage collected at some point... How? When?\n                        self._emitted[\"t:\" + hash.toLowerCase()] = \"pending\";\n                        seq = seq.then(function () {\n                            return self.getTransaction(hash).then(function (tx) {\n                                self.emit(\"pending\", tx);\n                                return null;\n                            });\n                        });\n                    });\n                    return seq.then(function () {\n                        return timer(1000);\n                    });\n                }).then(function () {\n                    if (self._pendingFilter != pendingFilter) {\n                        self.send(\"eth_uninstallFilter\", [filterId]);\n                        return;\n                    }\n                    setTimeout(function () { poll(); }, 0);\n                    return null;\n                }).catch((error) => { });\n            }\n            poll();\n            return filterId;\n        }).catch((error) => { });\n    }\n    _stopEvent(event) {\n        if (event.tag === \"pending\" && this.listenerCount(\"pending\") === 0) {\n            this._pendingFilter = null;\n        }\n        super._stopEvent(event);\n    }\n    // Convert an ethers.js transaction into a JSON-RPC transaction\n    //  - gasLimit => gas\n    //  - All values hexlified\n    //  - All numeric values zero-striped\n    //  - All addresses are lowercased\n    // NOTE: This allows a TransactionRequest, but all values should be resolved\n    //       before this is called\n    // @TODO: This will likely be removed in future versions and prepareRequest\n    //        will be the preferred method for this.\n    static hexlifyTransaction(transaction, allowExtra) {\n        // Check only allowed properties are given\n        const allowed = shallowCopy(allowedTransactionKeys);\n        if (allowExtra) {\n            for (const key in allowExtra) {\n                if (allowExtra[key]) {\n                    allowed[key] = true;\n                }\n            }\n        }\n        checkProperties(transaction, allowed);\n        const result = {};\n        // JSON-RPC now requires numeric values to be \"quantity\" values\n        [\"chainId\", \"gasLimit\", \"gasPrice\", \"type\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"value\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            const value = hexValue(transaction[key]);\n            if (key === \"gasLimit\") {\n                key = \"gas\";\n            }\n            result[key] = value;\n        });\n        [\"from\", \"to\", \"data\"].forEach(function (key) {\n            if (transaction[key] == null) {\n                return;\n            }\n            result[key] = hexlify(transaction[key]);\n        });\n        if (transaction.accessList) {\n            result[\"accessList\"] = accessListify(transaction.accessList);\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=json-rpc-provider.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nlet WS = null;\ntry {\n    WS = WebSocket;\n    if (WS == null) {\n        throw new Error(\"inject please\");\n    }\n}\ncatch (error) {\n    const logger = new Logger(version);\n    WS = function () {\n        logger.throwError(\"WebSockets not supported in this environment\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"new WebSocket()\"\n        });\n    };\n}\n//export default WS;\n//module.exports = WS;\nexport { WS as WebSocket };\n//# sourceMappingURL=ws.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nimport { WebSocket } from \"./ws\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n/**\n *  Notes:\n *\n *  This provider differs a bit from the polling providers. One main\n *  difference is how it handles consistency. The polling providers\n *  will stall responses to ensure a consistent state, while this\n *  WebSocket provider assumes the connected backend will manage this.\n *\n *  For example, if a polling provider emits an event which indicates\n *  the event occurred in blockhash XXX, a call to fetch that block by\n *  its hash XXX, if not present will retry until it is present. This\n *  can occur when querying a pool of nodes that are mildly out of sync\n *  with each other.\n */\nlet NextId = 1;\n// For more info about the Real-time Event API see:\n//   https://geth.ethereum.org/docs/rpc/pubsub\nexport class WebSocketProvider extends JsonRpcProvider {\n    constructor(url, network) {\n        // This will be added in the future; please open an issue to expedite\n        if (network === \"any\") {\n            logger.throwError(\"WebSocketProvider does not support 'any' network yet\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"network:any\"\n            });\n        }\n        if (typeof (url) === \"string\") {\n            super(url, network);\n        }\n        else {\n            super(\"_websocket\", network);\n        }\n        this._pollingInterval = -1;\n        this._wsReady = false;\n        if (typeof (url) === \"string\") {\n            defineReadOnly(this, \"_websocket\", new WebSocket(this.connection.url));\n        }\n        else {\n            defineReadOnly(this, \"_websocket\", url);\n        }\n        defineReadOnly(this, \"_requests\", {});\n        defineReadOnly(this, \"_subs\", {});\n        defineReadOnly(this, \"_subIds\", {});\n        defineReadOnly(this, \"_detectNetwork\", super.detectNetwork());\n        // Stall sending requests until the socket is open...\n        this.websocket.onopen = () => {\n            this._wsReady = true;\n            Object.keys(this._requests).forEach((id) => {\n                this.websocket.send(this._requests[id].payload);\n            });\n        };\n        this.websocket.onmessage = (messageEvent) => {\n            const data = messageEvent.data;\n            const result = JSON.parse(data);\n            if (result.id != null) {\n                const id = String(result.id);\n                const request = this._requests[id];\n                delete this._requests[id];\n                if (result.result !== undefined) {\n                    request.callback(null, result.result);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: JSON.parse(request.payload),\n                        response: result.result,\n                        provider: this\n                    });\n                }\n                else {\n                    let error = null;\n                    if (result.error) {\n                        error = new Error(result.error.message || \"unknown error\");\n                        defineReadOnly(error, \"code\", result.error.code || null);\n                        defineReadOnly(error, \"response\", data);\n                    }\n                    else {\n                        error = new Error(\"unknown error\");\n                    }\n                    request.callback(error, undefined);\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: JSON.parse(request.payload),\n                        provider: this\n                    });\n                }\n            }\n            else if (result.method === \"eth_subscription\") {\n                // Subscription...\n                const sub = this._subs[result.params.subscription];\n                if (sub) {\n                    //this.emit.apply(this,                  );\n                    sub.processFunc(result.params.result);\n                }\n            }\n            else {\n                console.warn(\"this should not happen\");\n            }\n        };\n        // This Provider does not actually poll, but we want to trigger\n        // poll events for things that depend on them (like stalling for\n        // block and transaction lookups)\n        const fauxPoll = setInterval(() => {\n            this.emit(\"poll\");\n        }, 1000);\n        if (fauxPoll.unref) {\n            fauxPoll.unref();\n        }\n    }\n    // Cannot narrow the type of _websocket, as that is not backwards compatible\n    // so we add a getter and let the WebSocket be a public API.\n    get websocket() { return this._websocket; }\n    detectNetwork() {\n        return this._detectNetwork;\n    }\n    get pollingInterval() {\n        return 0;\n    }\n    resetEventsBlock(blockNumber) {\n        logger.throwError(\"cannot reset events block on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"resetEventBlock\"\n        });\n    }\n    set pollingInterval(value) {\n        logger.throwError(\"cannot set polling interval on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPollingInterval\"\n        });\n    }\n    poll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return null;\n        });\n    }\n    set polling(value) {\n        if (!value) {\n            return;\n        }\n        logger.throwError(\"cannot set polling on WebSocketProvider\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"setPolling\"\n        });\n    }\n    send(method, params) {\n        const rid = NextId++;\n        return new Promise((resolve, reject) => {\n            function callback(error, result) {\n                if (error) {\n                    return reject(error);\n                }\n                return resolve(result);\n            }\n            const payload = JSON.stringify({\n                method: method,\n                params: params,\n                id: rid,\n                jsonrpc: \"2.0\"\n            });\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: JSON.parse(payload),\n                provider: this\n            });\n            this._requests[String(rid)] = { callback, payload };\n            if (this._wsReady) {\n                this.websocket.send(payload);\n            }\n        });\n    }\n    static defaultUrl() {\n        return \"ws:/\\/localhost:8546\";\n    }\n    _subscribe(tag, param, processFunc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let subIdPromise = this._subIds[tag];\n            if (subIdPromise == null) {\n                subIdPromise = Promise.all(param).then((param) => {\n                    return this.send(\"eth_subscribe\", param);\n                });\n                this._subIds[tag] = subIdPromise;\n            }\n            const subId = yield subIdPromise;\n            this._subs[subId] = { tag, processFunc };\n        });\n    }\n    _startEvent(event) {\n        switch (event.type) {\n            case \"block\":\n                this._subscribe(\"block\", [\"newHeads\"], (result) => {\n                    const blockNumber = BigNumber.from(result.number).toNumber();\n                    this._emitted.block = blockNumber;\n                    this.emit(\"block\", blockNumber);\n                });\n                break;\n            case \"pending\":\n                this._subscribe(\"pending\", [\"newPendingTransactions\"], (result) => {\n                    this.emit(\"pending\", result);\n                });\n                break;\n            case \"filter\":\n                this._subscribe(event.tag, [\"logs\", this._getFilter(event.filter)], (result) => {\n                    if (result.removed == null) {\n                        result.removed = false;\n                    }\n                    this.emit(event.filter, this.formatter.filterLog(result));\n                });\n                break;\n            case \"tx\": {\n                const emitReceipt = (event) => {\n                    const hash = event.hash;\n                    this.getTransactionReceipt(hash).then((receipt) => {\n                        if (!receipt) {\n                            return;\n                        }\n                        this.emit(hash, receipt);\n                    });\n                };\n                // In case it is already mined\n                emitReceipt(event);\n                // To keep things simple, we start up a single newHeads subscription\n                // to keep an eye out for transactions we are watching for.\n                // Starting a subscription for an event (i.e. \"tx\") that is already\n                // running is (basically) a nop.\n                this._subscribe(\"tx\", [\"newHeads\"], (result) => {\n                    this._events.filter((e) => (e.type === \"tx\")).forEach(emitReceipt);\n                });\n                break;\n            }\n            // Nothing is needed\n            case \"debug\":\n            case \"poll\":\n            case \"willPoll\":\n            case \"didPoll\":\n            case \"error\":\n                break;\n            default:\n                console.log(\"unhandled:\", event);\n                break;\n        }\n    }\n    _stopEvent(event) {\n        let tag = event.tag;\n        if (event.type === \"tx\") {\n            // There are remaining transaction event listeners\n            if (this._events.filter((e) => (e.type === \"tx\")).length) {\n                return;\n            }\n            tag = \"tx\";\n        }\n        else if (this.listenerCount(event.event)) {\n            // There are remaining event listeners\n            return;\n        }\n        const subId = this._subIds[tag];\n        if (!subId) {\n            return;\n        }\n        delete this._subIds[tag];\n        subId.then((subId) => {\n            if (!this._subs[subId]) {\n                return;\n            }\n            delete this._subs[subId];\n            this.send(\"eth_unsubscribe\", [subId]);\n        });\n    }\n    destroy() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Wait until we have connected before trying to disconnect\n            if (this.websocket.readyState === WebSocket.CONNECTING) {\n                yield (new Promise((resolve) => {\n                    this.websocket.onopen = function () {\n                        resolve(true);\n                    };\n                    this.websocket.onerror = function () {\n                        resolve(false);\n                    };\n                }));\n            }\n            // Hangup\n            // See: https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n            this.websocket.close(1000);\n        });\n    }\n}\n//# sourceMappingURL=websocket-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly, getStatic } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n// A StaticJsonRpcProvider is useful when you *know* for certain that\n// the backend will never change, as it never calls eth_chainId to\n// verify its backend. However, if the backend does change, the effects\n// are undefined and may include:\n// - inconsistent results\n// - locking up the UI\n// - block skew warnings\n// - wrong results\n// If the network is not explicit (i.e. auto-detection is expected), the\n// node MUST be running and available to respond to requests BEFORE this\n// is instantiated.\nexport class StaticJsonRpcProvider extends JsonRpcProvider {\n    detectNetwork() {\n        const _super = Object.create(null, {\n            detectNetwork: { get: () => super.detectNetwork }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            let network = this.network;\n            if (network == null) {\n                network = yield _super.detectNetwork.call(this);\n                if (!network) {\n                    logger.throwError(\"no network detected\", Logger.errors.UNKNOWN_ERROR, {});\n                }\n                // If still not set, set it\n                if (this._network == null) {\n                    // A static network does not support \"any\"\n                    defineReadOnly(this, \"_network\", network);\n                    this.emit(\"network\", network, null);\n                }\n            }\n            return network;\n        });\n    }\n}\nexport class UrlJsonRpcProvider extends StaticJsonRpcProvider {\n    constructor(network, apiKey) {\n        logger.checkAbstract(new.target, UrlJsonRpcProvider);\n        // Normalize the Network and API Key\n        network = getStatic(new.target, \"getNetwork\")(network);\n        apiKey = getStatic(new.target, \"getApiKey\")(apiKey);\n        const connection = getStatic(new.target, \"getUrl\")(network, apiKey);\n        super(connection, network);\n        if (typeof (apiKey) === \"string\") {\n            defineReadOnly(this, \"apiKey\", apiKey);\n        }\n        else if (apiKey != null) {\n            Object.keys(apiKey).forEach((key) => {\n                defineReadOnly(this, key, apiKey[key]);\n            });\n        }\n    }\n    _startPending() {\n        logger.warn(\"WARNING: API provider does not support pending filters\");\n    }\n    isCommunityResource() {\n        return false;\n    }\n    getSigner(address) {\n        return logger.throwError(\"API provider does not support signing\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"getSigner\" });\n    }\n    listAccounts() {\n        return Promise.resolve([]);\n    }\n    // Return a defaultApiKey if null, otherwise validate the API key\n    static getApiKey(apiKey) {\n        return apiKey;\n    }\n    // Returns the url or connection for the given network and API key. The\n    // API key will have been sanitized by the getApiKey first, so any validation\n    // or transformations can be done there.\n    static getUrl(network, apiKey) {\n        return logger.throwError(\"not implemented; sub-classes must override getUrl\", Logger.errors.NOT_IMPLEMENTED, {\n            operation: \"getUrl\"\n        });\n    }\n}\n//# sourceMappingURL=url-json-rpc-provider.js.map","\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n// This key was provided to ethers.js by Alchemy to be used by the\n// default provider, but it is recommended that for your own\n// production environments, that you acquire your own API key at:\n//   https://dashboard.alchemyapi.io\nconst defaultApiKey = \"_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC\";\nexport class AlchemyWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new AlchemyProvider(network, apiKey);\n        const url = provider.connection.url.replace(/^http/i, \"ws\")\n            .replace(\".alchemyapi.\", \".ws.alchemyapi.\");\n        super(url, provider.network);\n        defineReadOnly(this, \"apiKey\", provider.apiKey);\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\nexport class AlchemyProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new AlchemyWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        if (apiKey == null) {\n            return defaultApiKey;\n        }\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"eth-mainnet.alchemyapi.io/v2/\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.alchemyapi.io/v2/\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.alchemyapi.io/v2/\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.alchemyapi.io/v2/\";\n                break;\n            case \"kovan\":\n                host = \"eth-kovan.alchemyapi.io/v2/\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum\":\n                host = \"arb-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arb-rinkeby.g.alchemy.com/v2/\";\n                break;\n            case \"optimism\":\n                host = \"opt-mainnet.g.alchemy.com/v2/\";\n                break;\n            case \"optimism-kovan\":\n                host = \"opt-kovan.g.alchemy.com/v2/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + apiKey),\n            throttleCallback: (attempt, url) => {\n                if (apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=alchemy-provider.js.map","import { showThrottleMessage } from \"./formatter\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst defaultApiKey = \"9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972\";\nfunction getHost(name) {\n    switch (name) {\n        case \"homestead\":\n            return \"rpc.ankr.com/eth/\";\n        case \"matic\":\n            return \"rpc.ankr.com/polygon/\";\n        case \"arbitrum\":\n            return \"rpc.ankr.com/arbitrum/\";\n    }\n    return logger.throwArgumentError(\"unsupported network\", \"name\", name);\n}\nexport class AnkrProvider extends UrlJsonRpcProvider {\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n    static getApiKey(apiKey) {\n        if (apiKey == null) {\n            return defaultApiKey;\n        }\n        return apiKey;\n    }\n    static getUrl(network, apiKey) {\n        if (apiKey == null) {\n            apiKey = defaultApiKey;\n        }\n        const connection = {\n            allowGzip: true,\n            url: (\"https:/\\/\" + getHost(network.name) + apiKey),\n            throttleCallback: (attempt, url) => {\n                if (apiKey.apiKey === defaultApiKey) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret;\n        }\n        return connection;\n    }\n}\n//# sourceMappingURL=ankr-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport class CloudflareProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey != null) {\n            logger.throwArgumentError(\"apiKey not supported for cloudflare\", \"apiKey\", apiKey);\n        }\n        return null;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://cloudflare-eth.com/\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return host;\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            // The Cloudflare provider does not support eth_blockNumber,\n            // so we get the latest block and pull it from that\n            if (method === \"getBlockNumber\") {\n                const block = yield _super.perform.call(this, \"getBlock\", { blockTag: \"latest\" });\n                return block.number;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n}\n//# sourceMappingURL=cloudflare-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { hexlify, hexValue, isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BaseProvider } from \"./base-provider\";\n// The transaction has already been sanitized by the calls in Provider\nfunction getTransactionPostData(transaction) {\n    const result = {};\n    for (let key in transaction) {\n        if (transaction[key] == null) {\n            continue;\n        }\n        let value = transaction[key];\n        if (key === \"type\" && value === 0) {\n            continue;\n        }\n        // Quantity-types require no leading zero, unless 0\n        if ({ type: true, gasLimit: true, gasPrice: true, maxFeePerGs: true, maxPriorityFeePerGas: true, nonce: true, value: true }[key]) {\n            value = hexValue(hexlify(value));\n        }\n        else if (key === \"accessList\") {\n            value = \"[\" + accessListify(value).map((set) => {\n                return `{address:\"${set.address}\",storageKeys:[\"${set.storageKeys.join('\",\"')}\"]}`;\n            }).join(\",\") + \"]\";\n        }\n        else {\n            value = hexlify(value);\n        }\n        result[key] = value;\n    }\n    return result;\n}\nfunction getResult(result) {\n    // getLogs, getHistory have weird success responses\n    if (result.status == 0 && (result.message === \"No records found\" || result.message === \"No transactions found\")) {\n        return result.result;\n    }\n    if (result.status != 1 || result.message != \"OK\") {\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        if ((result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n            error.throttleRetry = true;\n        }\n        throw error;\n    }\n    return result.result;\n}\nfunction getJsonResult(result) {\n    // This response indicates we are being throttled\n    if (result && result.status == 0 && result.message == \"NOTOK\" && (result.result || \"\").toLowerCase().indexOf(\"rate limit\") >= 0) {\n        const error = new Error(\"throttled response\");\n        error.result = JSON.stringify(result);\n        error.throttleRetry = true;\n        throw error;\n    }\n    if (result.jsonrpc != \"2.0\") {\n        // @TODO: not any\n        const error = new Error(\"invalid response\");\n        error.result = JSON.stringify(result);\n        throw error;\n    }\n    if (result.error) {\n        // @TODO: not any\n        const error = new Error(result.error.message || \"unknown error\");\n        if (result.error.code) {\n            error.code = result.error.code;\n        }\n        if (result.error.data) {\n            error.data = result.error.data;\n        }\n        throw error;\n    }\n    return result.result;\n}\n// The blockTag was normalized as a string by the Provider pre-perform operations\nfunction checkLogTag(blockTag) {\n    if (blockTag === \"pending\") {\n        throw new Error(\"pending not supported\");\n    }\n    if (blockTag === \"latest\") {\n        return blockTag;\n    }\n    return parseInt(blockTag.substring(2), 16);\n}\nconst defaultApiKey = \"9D13ZE7XSBTJ94N9BNJ2MA33VMAY2YPIRB\";\nfunction checkError(method, error, transaction) {\n    // Undo the \"convenience\" some nodes are attempting to prevent backwards\n    // incompatibility; maybe for v6 consider forwarding reverts as errors\n    if (method === \"call\" && error.code === Logger.errors.SERVER_ERROR) {\n        const e = error.error;\n        // Etherscan keeps changing their string\n        if (e && (e.message.match(/reverted/i) || e.message.match(/VM execution error/i))) {\n            // Etherscan prefixes the data like \"Reverted 0x1234\"\n            let data = e.data;\n            if (data) {\n                data = \"0x\" + data.replace(/^.*0x/i, \"\");\n            }\n            if (isHexString(data)) {\n                return data;\n            }\n            logger.throwError(\"missing revert data in call exception\", Logger.errors.CALL_EXCEPTION, {\n                error, data: \"0x\"\n            });\n        }\n    }\n    // Get the message from any nested error structure\n    let message = error.message;\n    if (error.code === Logger.errors.SERVER_ERROR) {\n        if (error.error && typeof (error.error.message) === \"string\") {\n            message = error.error.message;\n        }\n        else if (typeof (error.body) === \"string\") {\n            message = error.body;\n        }\n        else if (typeof (error.responseText) === \"string\") {\n            message = error.responseText;\n        }\n    }\n    message = (message || \"\").toLowerCase();\n    // \"Insufficient funds. The account you tried to send transaction from does not have enough funds. Required 21464000000000 and got: 0\"\n    if (message.match(/insufficient funds/)) {\n        logger.throwError(\"insufficient funds for intrinsic transaction cost\", Logger.errors.INSUFFICIENT_FUNDS, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction with the same hash was already imported.\"\n    if (message.match(/same hash was already imported|transaction nonce is too low|nonce too low/)) {\n        logger.throwError(\"nonce has already been used\", Logger.errors.NONCE_EXPIRED, {\n            error, method, transaction\n        });\n    }\n    // \"Transaction gas price is too low. There is another transaction with same nonce in the queue. Try increasing the gas price or incrementing the nonce.\"\n    if (message.match(/another transaction with same nonce/)) {\n        logger.throwError(\"replacement fee too low\", Logger.errors.REPLACEMENT_UNDERPRICED, {\n            error, method, transaction\n        });\n    }\n    if (message.match(/execution failed due to an exception|execution reverted/)) {\n        logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n            error, method, transaction\n        });\n    }\n    throw error;\n}\nexport class EtherscanProvider extends BaseProvider {\n    constructor(network, apiKey) {\n        logger.checkNew(new.target, EtherscanProvider);\n        super(network);\n        defineReadOnly(this, \"baseUrl\", this.getBaseUrl());\n        defineReadOnly(this, \"apiKey\", apiKey || defaultApiKey);\n    }\n    getBaseUrl() {\n        switch (this.network ? this.network.name : \"invalid\") {\n            case \"homestead\":\n                return \"https:/\\/api.etherscan.io\";\n            case \"ropsten\":\n                return \"https:/\\/api-ropsten.etherscan.io\";\n            case \"rinkeby\":\n                return \"https:/\\/api-rinkeby.etherscan.io\";\n            case \"kovan\":\n                return \"https:/\\/api-kovan.etherscan.io\";\n            case \"goerli\":\n                return \"https:/\\/api-goerli.etherscan.io\";\n            default:\n        }\n        return logger.throwArgumentError(\"unsupported network\", \"network\", name);\n    }\n    getUrl(module, params) {\n        const query = Object.keys(params).reduce((accum, key) => {\n            const value = params[key];\n            if (value != null) {\n                accum += `&${key}=${value}`;\n            }\n            return accum;\n        }, \"\");\n        const apiKey = ((this.apiKey) ? `&apikey=${this.apiKey}` : \"\");\n        return `${this.baseUrl}/api?module=${module}${query}${apiKey}`;\n    }\n    getPostUrl() {\n        return `${this.baseUrl}/api`;\n    }\n    getPostData(module, params) {\n        params.module = module;\n        params.apikey = this.apiKey;\n        return params;\n    }\n    fetch(module, params, post) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = (post ? this.getPostUrl() : this.getUrl(module, params));\n            const payload = (post ? this.getPostData(module, params) : null);\n            const procFunc = (module === \"proxy\") ? getJsonResult : getResult;\n            this.emit(\"debug\", {\n                action: \"request\",\n                request: url,\n                provider: this\n            });\n            const connection = {\n                url: url,\n                throttleSlotInterval: 1000,\n                throttleCallback: (attempt, url) => {\n                    if (this.isCommunityResource()) {\n                        showThrottleMessage();\n                    }\n                    return Promise.resolve(true);\n                }\n            };\n            let payloadStr = null;\n            if (payload) {\n                connection.headers = { \"content-type\": \"application/x-www-form-urlencoded; charset=UTF-8\" };\n                payloadStr = Object.keys(payload).map((key) => {\n                    return `${key}=${payload[key]}`;\n                }).join(\"&\");\n            }\n            const result = yield fetchJson(connection, payloadStr, procFunc || getJsonResult);\n            this.emit(\"debug\", {\n                action: \"response\",\n                request: url,\n                response: deepCopy(result),\n                provider: this\n            });\n            return result;\n        });\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.network;\n        });\n    }\n    perform(method, params) {\n        const _super = Object.create(null, {\n            perform: { get: () => super.perform }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            switch (method) {\n                case \"getBlockNumber\":\n                    return this.fetch(\"proxy\", { action: \"eth_blockNumber\" });\n                case \"getGasPrice\":\n                    return this.fetch(\"proxy\", { action: \"eth_gasPrice\" });\n                case \"getBalance\":\n                    // Returns base-10 result\n                    return this.fetch(\"account\", {\n                        action: \"balance\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getTransactionCount\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionCount\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getCode\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getCode\",\n                        address: params.address,\n                        tag: params.blockTag\n                    });\n                case \"getStorageAt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getStorageAt\",\n                        address: params.address,\n                        position: params.position,\n                        tag: params.blockTag\n                    });\n                case \"sendTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_sendRawTransaction\",\n                        hex: params.signedTransaction\n                    }, true).catch((error) => {\n                        return checkError(\"sendTransaction\", error, params.signedTransaction);\n                    });\n                case \"getBlock\":\n                    if (params.blockTag) {\n                        return this.fetch(\"proxy\", {\n                            action: \"eth_getBlockByNumber\",\n                            tag: params.blockTag,\n                            boolean: (params.includeTransactions ? \"true\" : \"false\")\n                        });\n                    }\n                    throw new Error(\"getBlock by blockHash not implemented\");\n                case \"getTransaction\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionByHash\",\n                        txhash: params.transactionHash\n                    });\n                case \"getTransactionReceipt\":\n                    return this.fetch(\"proxy\", {\n                        action: \"eth_getTransactionReceipt\",\n                        txhash: params.transactionHash\n                    });\n                case \"call\": {\n                    if (params.blockTag !== \"latest\") {\n                        throw new Error(\"EtherscanProvider does not support blockTag for call\");\n                    }\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_call\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"call\", error, params.transaction);\n                    }\n                }\n                case \"estimateGas\": {\n                    const postData = getTransactionPostData(params.transaction);\n                    postData.module = \"proxy\";\n                    postData.action = \"eth_estimateGas\";\n                    try {\n                        return yield this.fetch(\"proxy\", postData, true);\n                    }\n                    catch (error) {\n                        return checkError(\"estimateGas\", error, params.transaction);\n                    }\n                }\n                case \"getLogs\": {\n                    const args = { action: \"getLogs\" };\n                    if (params.filter.fromBlock) {\n                        args.fromBlock = checkLogTag(params.filter.fromBlock);\n                    }\n                    if (params.filter.toBlock) {\n                        args.toBlock = checkLogTag(params.filter.toBlock);\n                    }\n                    if (params.filter.address) {\n                        args.address = params.filter.address;\n                    }\n                    // @TODO: We can handle slightly more complicated logs using the logs API\n                    if (params.filter.topics && params.filter.topics.length > 0) {\n                        if (params.filter.topics.length > 1) {\n                            logger.throwError(\"unsupported topic count\", Logger.errors.UNSUPPORTED_OPERATION, { topics: params.filter.topics });\n                        }\n                        if (params.filter.topics.length === 1) {\n                            const topic0 = params.filter.topics[0];\n                            if (typeof (topic0) !== \"string\" || topic0.length !== 66) {\n                                logger.throwError(\"unsupported topic format\", Logger.errors.UNSUPPORTED_OPERATION, { topic0: topic0 });\n                            }\n                            args.topic0 = topic0;\n                        }\n                    }\n                    const logs = yield this.fetch(\"logs\", args);\n                    // Cache txHash => blockHash\n                    let blocks = {};\n                    // Add any missing blockHash to the logs\n                    for (let i = 0; i < logs.length; i++) {\n                        const log = logs[i];\n                        if (log.blockHash != null) {\n                            continue;\n                        }\n                        if (blocks[log.blockNumber] == null) {\n                            const block = yield this.getBlock(log.blockNumber);\n                            if (block) {\n                                blocks[log.blockNumber] = block.hash;\n                            }\n                        }\n                        log.blockHash = blocks[log.blockNumber];\n                    }\n                    return logs;\n                }\n                case \"getEtherPrice\":\n                    if (this.network.name !== \"homestead\") {\n                        return 0.0;\n                    }\n                    return parseFloat((yield this.fetch(\"stats\", { action: \"ethprice\" })).ethusd);\n                default:\n                    break;\n            }\n            return _super.perform.call(this, method, params);\n        });\n    }\n    // Note: The `page` page parameter only allows pagination within the\n    //       10,000 window available without a page and offset parameter\n    //       Error: Result window is too large, PageNo x Offset size must\n    //              be less than or equal to 10000\n    getHistory(addressOrName, startBlock, endBlock) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const params = {\n                action: \"txlist\",\n                address: (yield this.resolveName(addressOrName)),\n                startblock: ((startBlock == null) ? 0 : startBlock),\n                endblock: ((endBlock == null) ? 99999999 : endBlock),\n                sort: \"asc\"\n            };\n            const result = yield this.fetch(\"account\", params);\n            return result.map((tx) => {\n                [\"contractAddress\", \"to\"].forEach(function (key) {\n                    if (tx[key] == \"\") {\n                        delete tx[key];\n                    }\n                });\n                if (tx.creates == null && tx.contractAddress != null) {\n                    tx.creates = tx.contractAddress;\n                }\n                const item = this.formatter.transactionResponse(tx);\n                if (tx.timeStamp) {\n                    item.timestamp = parseInt(tx.timeStamp);\n                }\n                return item;\n            });\n        });\n    }\n    isCommunityResource() {\n        return (this.apiKey === defaultApiKey);\n    }\n}\n//# sourceMappingURL=etherscan-provider.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { shuffled } from \"@ethersproject/random\";\nimport { poll } from \"@ethersproject/web\";\nimport { BaseProvider } from \"./base-provider\";\nimport { isCommunityResource } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction now() { return (new Date()).getTime(); }\n// Returns to network as long as all agree, or null if any is null.\n// Throws an error if any two networks do not match.\nfunction checkNetworks(networks) {\n    let result = null;\n    for (let i = 0; i < networks.length; i++) {\n        const network = networks[i];\n        // Null! We do not know our network; bail.\n        if (network == null) {\n            return null;\n        }\n        if (result) {\n            // Make sure the network matches the previous networks\n            if (!(result.name === network.name && result.chainId === network.chainId &&\n                ((result.ensAddress === network.ensAddress) || (result.ensAddress == null && network.ensAddress == null)))) {\n                logger.throwArgumentError(\"provider mismatch\", \"networks\", networks);\n            }\n        }\n        else {\n            result = network;\n        }\n    }\n    return result;\n}\nfunction median(values, maxDelta) {\n    values = values.slice().sort();\n    const middle = Math.floor(values.length / 2);\n    // Odd length; take the middle\n    if (values.length % 2) {\n        return values[middle];\n    }\n    // Even length; take the average of the two middle\n    const a = values[middle - 1], b = values[middle];\n    if (maxDelta != null && Math.abs(a - b) > maxDelta) {\n        return null;\n    }\n    return (a + b) / 2;\n}\nfunction serialize(value) {\n    if (value === null) {\n        return \"null\";\n    }\n    else if (typeof (value) === \"number\" || typeof (value) === \"boolean\") {\n        return JSON.stringify(value);\n    }\n    else if (typeof (value) === \"string\") {\n        return value;\n    }\n    else if (BigNumber.isBigNumber(value)) {\n        return value.toString();\n    }\n    else if (Array.isArray(value)) {\n        return JSON.stringify(value.map((i) => serialize(i)));\n    }\n    else if (typeof (value) === \"object\") {\n        const keys = Object.keys(value);\n        keys.sort();\n        return \"{\" + keys.map((key) => {\n            let v = value[key];\n            if (typeof (v) === \"function\") {\n                v = \"[function]\";\n            }\n            else {\n                v = serialize(v);\n            }\n            return JSON.stringify(key) + \":\" + v;\n        }).join(\",\") + \"}\";\n    }\n    throw new Error(\"unknown value type: \" + typeof (value));\n}\n// Next request ID to use for emitting debug info\nlet nextRid = 1;\n;\nfunction stall(duration) {\n    let cancel = null;\n    let timer = null;\n    let promise = (new Promise((resolve) => {\n        cancel = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n            resolve();\n        };\n        timer = setTimeout(cancel, duration);\n    }));\n    const wait = (func) => {\n        promise = promise.then(func);\n        return promise;\n    };\n    function getPromise() {\n        return promise;\n    }\n    return { cancel, getPromise, wait };\n}\nconst ForwardErrors = [\n    Logger.errors.CALL_EXCEPTION,\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n    Logger.errors.UNPREDICTABLE_GAS_LIMIT\n];\nconst ForwardProperties = [\n    \"address\",\n    \"args\",\n    \"errorArgs\",\n    \"errorSignature\",\n    \"method\",\n    \"transaction\",\n];\n;\nfunction exposeDebugConfig(config, now) {\n    const result = {\n        weight: config.weight\n    };\n    Object.defineProperty(result, \"provider\", { get: () => config.provider });\n    if (config.start) {\n        result.start = config.start;\n    }\n    if (now) {\n        result.duration = (now - config.start);\n    }\n    if (config.done) {\n        if (config.error) {\n            result.error = config.error;\n        }\n        else {\n            result.result = config.result || null;\n        }\n    }\n    return result;\n}\nfunction normalizedTally(normalize, quorum) {\n    return function (configs) {\n        // Count the votes for each result\n        const tally = {};\n        configs.forEach((c) => {\n            const value = normalize(c.result);\n            if (!tally[value]) {\n                tally[value] = { count: 0, result: c.result };\n            }\n            tally[value].count++;\n        });\n        // Check for a quorum on any given result\n        const keys = Object.keys(tally);\n        for (let i = 0; i < keys.length; i++) {\n            const check = tally[keys[i]];\n            if (check.count >= quorum) {\n                return check.result;\n            }\n        }\n        // No quroum\n        return undefined;\n    };\n}\nfunction getProcessFunc(provider, method, params) {\n    let normalize = serialize;\n    switch (method) {\n        case \"getBlockNumber\":\n            // Return the median value, unless there is (median + 1) is also\n            // present, in which case that is probably true and the median\n            // is going to be stale soon. In the event of a malicious node,\n            // the lie will be true soon enough.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                // Get the median block number\n                let blockNumber = median(configs.map((c) => c.result), 2);\n                if (blockNumber == null) {\n                    return undefined;\n                }\n                blockNumber = Math.ceil(blockNumber);\n                // If the next block height is present, its prolly safe to use\n                if (values.indexOf(blockNumber + 1) >= 0) {\n                    blockNumber++;\n                }\n                // Don't ever roll back the blockNumber\n                if (blockNumber >= provider._highestBlockNumber) {\n                    provider._highestBlockNumber = blockNumber;\n                }\n                return provider._highestBlockNumber;\n            };\n        case \"getGasPrice\":\n            // Return the middle (round index up) value, similar to median\n            // but do not average even entries and choose the higher.\n            // Malicious actors must compromise 50% of the nodes to lie.\n            return function (configs) {\n                const values = configs.map((c) => c.result);\n                values.sort();\n                return values[Math.floor(values.length / 2)];\n            };\n        case \"getEtherPrice\":\n            // Returns the median price. Malicious actors must compromise at\n            // least 50% of the nodes to lie (in a meaningful way).\n            return function (configs) {\n                return median(configs.map((c) => c.result));\n            };\n        // No additional normalizing required; serialize is enough\n        case \"getBalance\":\n        case \"getTransactionCount\":\n        case \"getCode\":\n        case \"getStorageAt\":\n        case \"call\":\n        case \"estimateGas\":\n        case \"getLogs\":\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getTransaction\":\n        case \"getTransactionReceipt\":\n            normalize = function (tx) {\n                if (tx == null) {\n                    return null;\n                }\n                tx = shallowCopy(tx);\n                tx.confirmations = -1;\n                return serialize(tx);\n            };\n            break;\n        // We drop the confirmations from transactions as it is approximate\n        case \"getBlock\":\n            // We drop the confirmations from transactions as it is approximate\n            if (params.includeTransactions) {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    block = shallowCopy(block);\n                    block.transactions = block.transactions.map((tx) => {\n                        tx = shallowCopy(tx);\n                        tx.confirmations = -1;\n                        return tx;\n                    });\n                    return serialize(block);\n                };\n            }\n            else {\n                normalize = function (block) {\n                    if (block == null) {\n                        return null;\n                    }\n                    return serialize(block);\n                };\n            }\n            break;\n        default:\n            throw new Error(\"unknown method: \" + method);\n    }\n    // Return the result if and only if the expected quorum is\n    // satisfied and agreed upon for the final result.\n    return normalizedTally(normalize, provider.quorum);\n}\n// If we are doing a blockTag query, we need to make sure the backend is\n// caught up to the FallbackProvider, before sending a request to it.\nfunction waitForSync(config, blockNumber) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const provider = (config.provider);\n        if ((provider.blockNumber != null && provider.blockNumber >= blockNumber) || blockNumber === -1) {\n            return provider;\n        }\n        return poll(() => {\n            return new Promise((resolve, reject) => {\n                setTimeout(function () {\n                    // We are synced\n                    if (provider.blockNumber >= blockNumber) {\n                        return resolve(provider);\n                    }\n                    // We're done; just quit\n                    if (config.cancelled) {\n                        return resolve(null);\n                    }\n                    // Try again, next block\n                    return resolve(undefined);\n                }, 0);\n            });\n        }, { oncePoll: provider });\n    });\n}\nfunction getRunner(config, currentBlockNumber, method, params) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let provider = config.provider;\n        switch (method) {\n            case \"getBlockNumber\":\n            case \"getGasPrice\":\n                return provider[method]();\n            case \"getEtherPrice\":\n                if (provider.getEtherPrice) {\n                    return provider.getEtherPrice();\n                }\n                break;\n            case \"getBalance\":\n            case \"getTransactionCount\":\n            case \"getCode\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.address, params.blockTag || \"latest\");\n            case \"getStorageAt\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getStorageAt(params.address, params.position, params.blockTag || \"latest\");\n            case \"getBlock\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[(params.includeTransactions ? \"getBlockWithTransactions\" : \"getBlock\")](params.blockTag || params.blockHash);\n            case \"call\":\n            case \"estimateGas\":\n                if (params.blockTag && isHexString(params.blockTag)) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider[method](params.transaction);\n            case \"getTransaction\":\n            case \"getTransactionReceipt\":\n                return provider[method](params.transactionHash);\n            case \"getLogs\": {\n                let filter = params.filter;\n                if ((filter.fromBlock && isHexString(filter.fromBlock)) || (filter.toBlock && isHexString(filter.toBlock))) {\n                    provider = yield waitForSync(config, currentBlockNumber);\n                }\n                return provider.getLogs(filter);\n            }\n        }\n        return logger.throwError(\"unknown method error\", Logger.errors.UNKNOWN_ERROR, {\n            method: method,\n            params: params\n        });\n    });\n}\nexport class FallbackProvider extends BaseProvider {\n    constructor(providers, quorum) {\n        logger.checkNew(new.target, FallbackProvider);\n        if (providers.length === 0) {\n            logger.throwArgumentError(\"missing providers\", \"providers\", providers);\n        }\n        const providerConfigs = providers.map((configOrProvider, index) => {\n            if (Provider.isProvider(configOrProvider)) {\n                const stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n                const priority = 1;\n                return Object.freeze({ provider: configOrProvider, weight: 1, stallTimeout, priority });\n            }\n            const config = shallowCopy(configOrProvider);\n            if (config.priority == null) {\n                config.priority = 1;\n            }\n            if (config.stallTimeout == null) {\n                config.stallTimeout = isCommunityResource(configOrProvider) ? 2000 : 750;\n            }\n            if (config.weight == null) {\n                config.weight = 1;\n            }\n            const weight = config.weight;\n            if (weight % 1 || weight > 512 || weight < 1) {\n                logger.throwArgumentError(\"invalid weight; must be integer in [1, 512]\", `providers[${index}].weight`, weight);\n            }\n            return Object.freeze(config);\n        });\n        const total = providerConfigs.reduce((accum, c) => (accum + c.weight), 0);\n        if (quorum == null) {\n            quorum = total / 2;\n        }\n        else if (quorum > total) {\n            logger.throwArgumentError(\"quorum will always fail; larger than total weight\", \"quorum\", quorum);\n        }\n        // Are all providers' networks are known\n        let networkOrReady = checkNetworks(providerConfigs.map((c) => (c.provider).network));\n        // Not all networks are known; we must stall\n        if (networkOrReady == null) {\n            networkOrReady = new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    this.detectNetwork().then(resolve, reject);\n                }, 0);\n            });\n        }\n        super(networkOrReady);\n        // Preserve a copy, so we do not get mutated\n        defineReadOnly(this, \"providerConfigs\", Object.freeze(providerConfigs));\n        defineReadOnly(this, \"quorum\", quorum);\n        this._highestBlockNumber = -1;\n    }\n    detectNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const networks = yield Promise.all(this.providerConfigs.map((c) => c.provider.getNetwork()));\n            return checkNetworks(networks);\n        });\n    }\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Sending transactions is special; always broadcast it to all backends\n            if (method === \"sendTransaction\") {\n                const results = yield Promise.all(this.providerConfigs.map((c) => {\n                    return c.provider.sendTransaction(params.signedTransaction).then((result) => {\n                        return result.hash;\n                    }, (error) => {\n                        return error;\n                    });\n                }));\n                // Any success is good enough (other errors are likely \"already seen\" errors\n                for (let i = 0; i < results.length; i++) {\n                    const result = results[i];\n                    if (typeof (result) === \"string\") {\n                        return result;\n                    }\n                }\n                // They were all an error; pick the first error\n                throw results[0];\n            }\n            // We need to make sure we are in sync with our backends, so we need\n            // to know this before we can make a lot of calls\n            if (this._highestBlockNumber === -1 && method !== \"getBlockNumber\") {\n                yield this.getBlockNumber();\n            }\n            const processFunc = getProcessFunc(this, method, params);\n            // Shuffle the providers and then sort them by their priority; we\n            // shallowCopy them since we will store the result in them too\n            const configs = shuffled(this.providerConfigs.map(shallowCopy));\n            configs.sort((a, b) => (a.priority - b.priority));\n            const currentBlockNumber = this._highestBlockNumber;\n            let i = 0;\n            let first = true;\n            while (true) {\n                const t0 = now();\n                // Compute the inflight weight (exclude anything past)\n                let inflightWeight = configs.filter((c) => (c.runner && ((t0 - c.start) < c.stallTimeout)))\n                    .reduce((accum, c) => (accum + c.weight), 0);\n                // Start running enough to meet quorum\n                while (inflightWeight < this.quorum && i < configs.length) {\n                    const config = configs[i++];\n                    const rid = nextRid++;\n                    config.start = now();\n                    config.staller = stall(config.stallTimeout);\n                    config.staller.wait(() => { config.staller = null; });\n                    config.runner = getRunner(config, currentBlockNumber, method, params).then((result) => {\n                        config.done = true;\n                        config.result = result;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    }, (error) => {\n                        config.done = true;\n                        config.error = error;\n                        if (this.listenerCount(\"debug\")) {\n                            this.emit(\"debug\", {\n                                action: \"request\",\n                                rid: rid,\n                                backend: exposeDebugConfig(config, now()),\n                                request: { method: method, params: deepCopy(params) },\n                                provider: this\n                            });\n                        }\n                    });\n                    if (this.listenerCount(\"debug\")) {\n                        this.emit(\"debug\", {\n                            action: \"request\",\n                            rid: rid,\n                            backend: exposeDebugConfig(config, null),\n                            request: { method: method, params: deepCopy(params) },\n                            provider: this\n                        });\n                    }\n                    inflightWeight += config.weight;\n                }\n                // Wait for anything meaningful to finish or stall out\n                const waiting = [];\n                configs.forEach((c) => {\n                    if (c.done || !c.runner) {\n                        return;\n                    }\n                    waiting.push(c.runner);\n                    if (c.staller) {\n                        waiting.push(c.staller.getPromise());\n                    }\n                });\n                if (waiting.length) {\n                    yield Promise.race(waiting);\n                }\n                // Check the quorum and process the results; the process function\n                // may additionally decide the quorum is not met\n                const results = configs.filter((c) => (c.done && c.error == null));\n                if (results.length >= this.quorum) {\n                    const result = processFunc(results);\n                    if (result !== undefined) {\n                        // Shut down any stallers\n                        configs.forEach(c => {\n                            if (c.staller) {\n                                c.staller.cancel();\n                            }\n                            c.cancelled = true;\n                        });\n                        return result;\n                    }\n                    if (!first) {\n                        yield stall(100).getPromise();\n                    }\n                    first = false;\n                }\n                // No result, check for errors that should be forwarded\n                const errors = configs.reduce((accum, c) => {\n                    if (!c.done || c.error == null) {\n                        return accum;\n                    }\n                    const code = (c.error).code;\n                    if (ForwardErrors.indexOf(code) >= 0) {\n                        if (!accum[code]) {\n                            accum[code] = { error: c.error, weight: 0 };\n                        }\n                        accum[code].weight += c.weight;\n                    }\n                    return accum;\n                }, ({}));\n                Object.keys(errors).forEach((errorCode) => {\n                    const tally = errors[errorCode];\n                    if (tally.weight < this.quorum) {\n                        return;\n                    }\n                    // Shut down any stallers\n                    configs.forEach(c => {\n                        if (c.staller) {\n                            c.staller.cancel();\n                        }\n                        c.cancelled = true;\n                    });\n                    const e = (tally.error);\n                    const props = {};\n                    ForwardProperties.forEach((name) => {\n                        if (e[name] == null) {\n                            return;\n                        }\n                        props[name] = e[name];\n                    });\n                    logger.throwError(e.reason || e.message, errorCode, props);\n                });\n                // All configs have run to completion; we will never get more data\n                if (configs.filter((c) => !c.done).length === 0) {\n                    break;\n                }\n            }\n            // Shut down any stallers; shouldn't be any\n            configs.forEach(c => {\n                if (c.staller) {\n                    c.staller.cancel();\n                }\n                c.cancelled = true;\n            });\n            return logger.throwError(\"failed to meet quorum\", Logger.errors.SERVER_ERROR, {\n                method: method,\n                params: params,\n                //results: configs.map((c) => c.result),\n                //errors: configs.map((c) => c.error),\n                results: configs.map((c) => exposeDebugConfig(c)),\n                provider: this\n            });\n        });\n    }\n}\n//# sourceMappingURL=fallback-provider.js.map","\"use strict\";\nconst IpcProvider = null;\nexport { IpcProvider };\n//# sourceMappingURL=ipc-provider.js.map","\"use strict\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nconst defaultProjectId = \"84842078b09946638c03157f83405213\";\nexport class InfuraWebSocketProvider extends WebSocketProvider {\n    constructor(network, apiKey) {\n        const provider = new InfuraProvider(network, apiKey);\n        const connection = provider.connection;\n        if (connection.password) {\n            logger.throwError(\"INFURA WebSocket project secrets unsupported\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"InfuraProvider.getWebSocketProvider()\"\n            });\n        }\n        const url = connection.url.replace(/^http/i, \"ws\").replace(\"/v3/\", \"/ws/v3/\");\n        super(url, network);\n        defineReadOnly(this, \"apiKey\", provider.projectId);\n        defineReadOnly(this, \"projectId\", provider.projectId);\n        defineReadOnly(this, \"projectSecret\", provider.projectSecret);\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\nexport class InfuraProvider extends UrlJsonRpcProvider {\n    static getWebSocketProvider(network, apiKey) {\n        return new InfuraWebSocketProvider(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        const apiKeyObj = {\n            apiKey: defaultProjectId,\n            projectId: defaultProjectId,\n            projectSecret: null\n        };\n        if (apiKey == null) {\n            return apiKeyObj;\n        }\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.projectId = apiKey;\n        }\n        else if (apiKey.projectSecret != null) {\n            logger.assertArgument((typeof (apiKey.projectId) === \"string\"), \"projectSecret requires a projectId\", \"projectId\", apiKey.projectId);\n            logger.assertArgument((typeof (apiKey.projectSecret) === \"string\"), \"invalid projectSecret\", \"projectSecret\", \"[REDACTED]\");\n            apiKeyObj.projectId = apiKey.projectId;\n            apiKeyObj.projectSecret = apiKey.projectSecret;\n        }\n        else if (apiKey.projectId) {\n            apiKeyObj.projectId = apiKey.projectId;\n        }\n        apiKeyObj.apiKey = apiKeyObj.projectId;\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"mainnet.infura.io\";\n                break;\n            case \"ropsten\":\n                host = \"ropsten.infura.io\";\n                break;\n            case \"rinkeby\":\n                host = \"rinkeby.infura.io\";\n                break;\n            case \"kovan\":\n                host = \"kovan.infura.io\";\n                break;\n            case \"goerli\":\n                host = \"goerli.infura.io\";\n                break;\n            case \"matic\":\n                host = \"polygon-mainnet.infura.io\";\n                break;\n            case \"maticmum\":\n                host = \"polygon-mumbai.infura.io\";\n                break;\n            case \"optimism\":\n                host = \"optimism-mainnet.infura.io\";\n                break;\n            case \"optimism-kovan\":\n                host = \"optimism-kovan.infura.io\";\n                break;\n            case \"arbitrum\":\n                host = \"arbitrum-mainnet.infura.io\";\n                break;\n            case \"arbitrum-rinkeby\":\n                host = \"arbitrum-rinkeby.infura.io\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        const connection = {\n            allowGzip: true,\n            url: (\"https:/\" + \"/\" + host + \"/v3/\" + apiKey.projectId),\n            throttleCallback: (attempt, url) => {\n                if (apiKey.projectId === defaultProjectId) {\n                    showThrottleMessage();\n                }\n                return Promise.resolve(true);\n            }\n        };\n        if (apiKey.projectSecret != null) {\n            connection.user = \"\";\n            connection.password = apiKey.projectSecret;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.projectId === defaultProjectId);\n    }\n}\n//# sourceMappingURL=infura-provider.js.map","import { deepCopy } from \"@ethersproject/properties\";\nimport { fetchJson } from \"@ethersproject/web\";\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\n// Experimental\nexport class JsonRpcBatchProvider extends JsonRpcProvider {\n    send(method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (this._nextId++),\n            jsonrpc: \"2.0\"\n        };\n        if (this._pendingBatch == null) {\n            this._pendingBatch = [];\n        }\n        const inflightRequest = { request, resolve: null, reject: null };\n        const promise = new Promise((resolve, reject) => {\n            inflightRequest.resolve = resolve;\n            inflightRequest.reject = reject;\n        });\n        this._pendingBatch.push(inflightRequest);\n        if (!this._pendingBatchAggregator) {\n            // Schedule batch for next event loop + short duration\n            this._pendingBatchAggregator = setTimeout(() => {\n                // Get teh current batch and clear it, so new requests\n                // go into the next batch\n                const batch = this._pendingBatch;\n                this._pendingBatch = null;\n                this._pendingBatchAggregator = null;\n                // Get the request as an array of requests\n                const request = batch.map((inflight) => inflight.request);\n                this.emit(\"debug\", {\n                    action: \"requestBatch\",\n                    request: deepCopy(request),\n                    provider: this\n                });\n                return fetchJson(this.connection, JSON.stringify(request)).then((result) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        request: request,\n                        response: result,\n                        provider: this\n                    });\n                    // For each result, feed it to the correct Promise, depending\n                    // on whether it was a success or error\n                    batch.forEach((inflightRequest, index) => {\n                        const payload = result[index];\n                        if (payload.error) {\n                            const error = new Error(payload.error.message);\n                            error.code = payload.error.code;\n                            error.data = payload.error.data;\n                            inflightRequest.reject(error);\n                        }\n                        else {\n                            inflightRequest.resolve(payload.result);\n                        }\n                    });\n                }, (error) => {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        error: error,\n                        request: request,\n                        provider: this\n                    });\n                    batch.forEach((inflightRequest) => {\n                        inflightRequest.reject(error);\n                    });\n                });\n            }, 10);\n        }\n        return promise;\n    }\n}\n//# sourceMappingURL=json-rpc-batch-provider.js.map","/* istanbul ignore file */\n\"use strict\";\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Special API key provided by Nodesmith for ethers.js\nconst defaultApiKey = \"ETHERS_JS_SHARED\";\nexport class NodesmithProvider extends UrlJsonRpcProvider {\n    static getApiKey(apiKey) {\n        if (apiKey && typeof (apiKey) !== \"string\") {\n            logger.throwArgumentError(\"invalid apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKey || defaultApiKey;\n    }\n    static getUrl(network, apiKey) {\n        logger.warn(\"NodeSmith will be discontinued on 2019-12-20; please migrate to another platform.\");\n        let host = null;\n        switch (network.name) {\n            case \"homestead\":\n                host = \"https://ethereum.api.nodesmith.io/v1/mainnet/jsonrpc\";\n                break;\n            case \"ropsten\":\n                host = \"https://ethereum.api.nodesmith.io/v1/ropsten/jsonrpc\";\n                break;\n            case \"rinkeby\":\n                host = \"https://ethereum.api.nodesmith.io/v1/rinkeby/jsonrpc\";\n                break;\n            case \"goerli\":\n                host = \"https://ethereum.api.nodesmith.io/v1/goerli/jsonrpc\";\n                break;\n            case \"kovan\":\n                host = \"https://ethereum.api.nodesmith.io/v1/kovan/jsonrpc\";\n                break;\n            default:\n                logger.throwArgumentError(\"unsupported network\", \"network\", arguments[0]);\n        }\n        return (host + \"?apiKey=\" + apiKey);\n    }\n}\n//# sourceMappingURL=nodesmith-provider.js.map","\"use strict\";\nimport { getStatic } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\n// These are load-balancer-based application IDs\nconst defaultApplicationIds = {\n    homestead: \"6004bcd10040261633ade990\",\n    ropsten: \"6004bd4d0040261633ade991\",\n    rinkeby: \"6004bda20040261633ade994\",\n    goerli: \"6004bd860040261633ade992\",\n};\nexport class PocketProvider extends UrlJsonRpcProvider {\n    constructor(network, apiKey) {\n        // We need a bit of creativity in the constructor because\n        // Pocket uses different default API keys based on the network\n        if (apiKey == null) {\n            const n = getStatic(new.target, \"getNetwork\")(network);\n            if (n) {\n                const applicationId = defaultApplicationIds[n.name];\n                if (applicationId) {\n                    apiKey = {\n                        applicationId: applicationId,\n                        loadBalancer: true\n                    };\n                }\n            }\n            // If there was any issue above, we don't know this network\n            if (apiKey == null) {\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n            }\n        }\n        super(network, apiKey);\n    }\n    static getApiKey(apiKey) {\n        // Most API Providers allow null to get the default configuration, but\n        // Pocket requires the network to decide the default provider, so we\n        // rely on hijacking the constructor to add a sensible default for us\n        if (apiKey == null) {\n            logger.throwArgumentError(\"PocketProvider.getApiKey does not support null apiKey\", \"apiKey\", apiKey);\n        }\n        const apiKeyObj = {\n            applicationId: null,\n            loadBalancer: false,\n            applicationSecretKey: null\n        };\n        // Parse applicationId and applicationSecretKey\n        if (typeof (apiKey) === \"string\") {\n            apiKeyObj.applicationId = apiKey;\n        }\n        else if (apiKey.applicationSecretKey != null) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"applicationSecretKey requires an applicationId\", \"applicationId\", apiKey.applicationId);\n            logger.assertArgument((typeof (apiKey.applicationSecretKey) === \"string\"), \"invalid applicationSecretKey\", \"applicationSecretKey\", \"[REDACTED]\");\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.applicationSecretKey = apiKey.applicationSecretKey;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else if (apiKey.applicationId) {\n            logger.assertArgument((typeof (apiKey.applicationId) === \"string\"), \"apiKey.applicationId must be a string\", \"apiKey.applicationId\", apiKey.applicationId);\n            apiKeyObj.applicationId = apiKey.applicationId;\n            apiKeyObj.loadBalancer = !!apiKey.loadBalancer;\n        }\n        else {\n            logger.throwArgumentError(\"unsupported PocketProvider apiKey\", \"apiKey\", apiKey);\n        }\n        return apiKeyObj;\n    }\n    static getUrl(network, apiKey) {\n        let host = null;\n        switch (network ? network.name : \"unknown\") {\n            case \"homestead\":\n                host = \"eth-mainnet.gateway.pokt.network\";\n                break;\n            case \"ropsten\":\n                host = \"eth-ropsten.gateway.pokt.network\";\n                break;\n            case \"rinkeby\":\n                host = \"eth-rinkeby.gateway.pokt.network\";\n                break;\n            case \"goerli\":\n                host = \"eth-goerli.gateway.pokt.network\";\n                break;\n            default:\n                logger.throwError(\"unsupported network\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"network\",\n                    value: network\n                });\n        }\n        let url = null;\n        if (apiKey.loadBalancer) {\n            url = `https:/\\/${host}/v1/lb/${apiKey.applicationId}`;\n        }\n        else {\n            url = `https:/\\/${host}/v1/${apiKey.applicationId}`;\n        }\n        const connection = { url };\n        // Initialize empty headers\n        connection.headers = {};\n        // Apply application secret key\n        if (apiKey.applicationSecretKey != null) {\n            connection.user = \"\";\n            connection.password = apiKey.applicationSecretKey;\n        }\n        return connection;\n    }\n    isCommunityResource() {\n        return (this.applicationId === defaultApplicationIds[this.network.name]);\n    }\n}\n//# sourceMappingURL=pocket-provider.js.map","\"use strict\";\nimport { deepCopy, defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { JsonRpcProvider } from \"./json-rpc-provider\";\nlet _nextId = 1;\nfunction buildWeb3LegacyFetcher(provider, sendFunc) {\n    const fetcher = \"Web3LegacyFetcher\";\n    return function (method, params) {\n        const request = {\n            method: method,\n            params: params,\n            id: (_nextId++),\n            jsonrpc: \"2.0\"\n        };\n        return new Promise((resolve, reject) => {\n            this.emit(\"debug\", {\n                action: \"request\",\n                fetcher,\n                request: deepCopy(request),\n                provider: this\n            });\n            sendFunc(request, (error, response) => {\n                if (error) {\n                    this.emit(\"debug\", {\n                        action: \"response\",\n                        fetcher,\n                        error,\n                        request,\n                        provider: this\n                    });\n                    return reject(error);\n                }\n                this.emit(\"debug\", {\n                    action: \"response\",\n                    fetcher,\n                    request,\n                    response,\n                    provider: this\n                });\n                if (response.error) {\n                    const error = new Error(response.error.message);\n                    error.code = response.error.code;\n                    error.data = response.error.data;\n                    return reject(error);\n                }\n                resolve(response.result);\n            });\n        });\n    };\n}\nfunction buildEip1193Fetcher(provider) {\n    return function (method, params) {\n        if (params == null) {\n            params = [];\n        }\n        const request = { method, params };\n        this.emit(\"debug\", {\n            action: \"request\",\n            fetcher: \"Eip1193Fetcher\",\n            request: deepCopy(request),\n            provider: this\n        });\n        return provider.request(request).then((response) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                response,\n                provider: this\n            });\n            return response;\n        }, (error) => {\n            this.emit(\"debug\", {\n                action: \"response\",\n                fetcher: \"Eip1193Fetcher\",\n                request,\n                error,\n                provider: this\n            });\n            throw error;\n        });\n    };\n}\nexport class Web3Provider extends JsonRpcProvider {\n    constructor(provider, network) {\n        logger.checkNew(new.target, Web3Provider);\n        if (provider == null) {\n            logger.throwArgumentError(\"missing provider\", \"provider\", provider);\n        }\n        let path = null;\n        let jsonRpcFetchFunc = null;\n        let subprovider = null;\n        if (typeof (provider) === \"function\") {\n            path = \"unknown:\";\n            jsonRpcFetchFunc = provider;\n        }\n        else {\n            path = provider.host || provider.path || \"\";\n            if (!path && provider.isMetaMask) {\n                path = \"metamask\";\n            }\n            subprovider = provider;\n            if (provider.request) {\n                if (path === \"\") {\n                    path = \"eip-1193:\";\n                }\n                jsonRpcFetchFunc = buildEip1193Fetcher(provider);\n            }\n            else if (provider.sendAsync) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.sendAsync.bind(provider));\n            }\n            else if (provider.send) {\n                jsonRpcFetchFunc = buildWeb3LegacyFetcher(provider, provider.send.bind(provider));\n            }\n            else {\n                logger.throwArgumentError(\"unsupported provider\", \"provider\", provider);\n            }\n            if (!path) {\n                path = \"unknown:\";\n            }\n        }\n        super(path, network);\n        defineReadOnly(this, \"jsonRpcFetchFunc\", jsonRpcFetchFunc);\n        defineReadOnly(this, \"provider\", subprovider);\n    }\n    send(method, params) {\n        return this.jsonRpcFetchFunc(method, params);\n    }\n}\n//# sourceMappingURL=web3-provider.js.map","\"use strict\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { BaseProvider, Resolver } from \"./base-provider\";\nimport { AlchemyProvider, AlchemyWebSocketProvider } from \"./alchemy-provider\";\nimport { AnkrProvider } from \"./ankr-provider\";\nimport { CloudflareProvider } from \"./cloudflare-provider\";\nimport { EtherscanProvider } from \"./etherscan-provider\";\nimport { FallbackProvider } from \"./fallback-provider\";\nimport { IpcProvider } from \"./ipc-provider\";\nimport { InfuraProvider, InfuraWebSocketProvider } from \"./infura-provider\";\nimport { JsonRpcProvider, JsonRpcSigner } from \"./json-rpc-provider\";\nimport { JsonRpcBatchProvider } from \"./json-rpc-batch-provider\";\nimport { NodesmithProvider } from \"./nodesmith-provider\";\nimport { PocketProvider } from \"./pocket-provider\";\nimport { StaticJsonRpcProvider, UrlJsonRpcProvider } from \"./url-json-rpc-provider\";\nimport { Web3Provider } from \"./web3-provider\";\nimport { WebSocketProvider } from \"./websocket-provider\";\nimport { Formatter, isCommunityResourcable, isCommunityResource, showThrottleMessage } from \"./formatter\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Helper Functions\nfunction getDefaultProvider(network, options) {\n    if (network == null) {\n        network = \"homestead\";\n    }\n    // If passed a URL, figure out the right type of provider based on the scheme\n    if (typeof (network) === \"string\") {\n        // @TODO: Add support for IpcProvider; maybe if it ends in \".ipc\"?\n        // Handle http and ws (and their secure variants)\n        const match = network.match(/^(ws|http)s?:/i);\n        if (match) {\n            switch (match[1]) {\n                case \"http\":\n                    return new JsonRpcProvider(network);\n                case \"ws\":\n                    return new WebSocketProvider(network);\n                default:\n                    logger.throwArgumentError(\"unsupported URL scheme\", \"network\", network);\n            }\n        }\n    }\n    const n = getNetwork(network);\n    if (!n || !n._defaultProvider) {\n        logger.throwError(\"unsupported getDefaultProvider network\", Logger.errors.NETWORK_ERROR, {\n            operation: \"getDefaultProvider\",\n            network: network\n        });\n    }\n    return n._defaultProvider({\n        FallbackProvider,\n        AlchemyProvider,\n        AnkrProvider,\n        CloudflareProvider,\n        EtherscanProvider,\n        InfuraProvider,\n        JsonRpcProvider,\n        NodesmithProvider,\n        PocketProvider,\n        Web3Provider,\n        IpcProvider,\n    }, options);\n}\n////////////////////////\n// Exports\nexport { \n// Abstract Providers (or Abstract-ish)\nProvider, BaseProvider, Resolver, UrlJsonRpcProvider, \n///////////////////////\n// Concrete Providers\nFallbackProvider, AlchemyProvider, AlchemyWebSocketProvider, AnkrProvider, CloudflareProvider, EtherscanProvider, InfuraProvider, InfuraWebSocketProvider, JsonRpcProvider, JsonRpcBatchProvider, NodesmithProvider, PocketProvider, StaticJsonRpcProvider, Web3Provider, WebSocketProvider, IpcProvider, \n///////////////////////\n// Signer\nJsonRpcSigner, \n///////////////////////\n// Functions\ngetDefaultProvider, getNetwork, isCommunityResource, isCommunityResourcable, showThrottleMessage, \n///////////////////////\n// Objects\nFormatter };\n//# sourceMappingURL=index.js.map","export const version = \"ethers/5.6.4\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BaseContract, Contract, ContractFactory } from \"@ethersproject/contracts\";\nimport { BigNumber, FixedNumber } from \"@ethersproject/bignumber\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { Wallet } from \"@ethersproject/wallet\";\nimport * as constants from \"@ethersproject/constants\";\nimport * as providers from \"@ethersproject/providers\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\nimport { Wordlist, wordlists } from \"@ethersproject/wordlists\";\nimport * as utils from \"./utils\";\nimport { ErrorCode as errors, Logger } from \"@ethersproject/logger\";\n////////////////////////\n// Compile-Time Constants\n// This is generated by \"npm run dist\"\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n////////////////////////\n// Exports\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist };\n//# sourceMappingURL=ethers.js.map","\"use strict\";\n// To modify this file, you must update ./misc/admin/lib/cmds/update-exports.js\nimport * as ethers from \"./ethers\";\ntry {\n    const anyGlobal = window;\n    if (anyGlobal._ethers == null) {\n        anyGlobal._ethers = ethers;\n    }\n}\ncatch (error) { }\nexport { ethers };\nexport { Signer, Wallet, VoidSigner, getDefaultProvider, providers, BaseContract, Contract, ContractFactory, BigNumber, FixedNumber, constants, errors, logger, utils, wordlists, \n////////////////////////\n// Compile-Time Constants\nversion, Wordlist } from \"./ethers\";\n//# sourceMappingURL=index.js.map","export var ExecutionType;\r\n(function (ExecutionType) {\r\n    ExecutionType[\"web3\"] = \"web3\";\r\n    ExecutionType[\"ethers\"] = \"ethers\";\r\n    ExecutionType[\"customHttp\"] = \"custom\";\r\n})(ExecutionType || (ExecutionType = {}));\r\n","export var Networks;\r\n(function (Networks) {\r\n    Networks[Networks[\"mainnet\"] = 1] = \"mainnet\";\r\n    Networks[Networks[\"ropsten\"] = 3] = \"ropsten\";\r\n    Networks[Networks[\"rinkeby\"] = 4] = \"rinkeby\";\r\n    Networks[Networks[\"goerli\"] = 5] = \"goerli\";\r\n    Networks[Networks[\"kovan\"] = 42] = \"kovan\";\r\n    Networks[Networks[\"bsc\"] = 56] = \"bsc\";\r\n    Networks[Networks[\"bsc_testnet\"] = 97] = \"bsc_testnet\";\r\n    Networks[Networks[\"xdai\"] = 100] = \"xdai\";\r\n    Networks[Networks[\"matic\"] = 137] = \"matic\";\r\n    Networks[Networks[\"mumbai\"] = 80001] = \"mumbai\";\r\n    Networks[Networks[\"avalauncheFuji\"] = 43113] = \"avalauncheFuji\";\r\n    Networks[Networks[\"avalauncheMainnet\"] = 43114] = \"avalauncheMainnet\";\r\n    Networks[Networks[\"etherlite\"] = 111] = \"etherlite\";\r\n    Networks[Networks[\"arbitrum\"] = 42161] = \"arbitrum\";\r\n    Networks[Networks[\"fantom\"] = 250] = \"fantom\";\r\n})(Networks || (Networks = {}));\r\n","var Utils = /** @class */ (function () {\r\n    function Utils() {\r\n    }\r\n    /**\r\n     * Deep clone a object\r\n     * @param object The object\r\n     */\r\n    Utils.deepClone = function (object) {\r\n        return JSON.parse(JSON.stringify(object));\r\n    };\r\n    return Utils;\r\n}());\r\nexport { Utils };\r\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nimport { BigNumber, ethers } from 'ethers';\r\nimport { defaultAbiCoder } from 'ethers/lib/utils';\r\nimport { ExecutionType, Networks } from './enums';\r\nimport { Utils } from './utils';\r\nvar Multicall = /** @class */ (function () {\r\n    function Multicall(_options) {\r\n        this._options = _options;\r\n        this.ABI = [\r\n            {\r\n                constant: false,\r\n                inputs: [\r\n                    {\r\n                        components: [\r\n                            { name: 'target', type: 'address' },\r\n                            { name: 'callData', type: 'bytes' },\r\n                        ],\r\n                        name: 'calls',\r\n                        type: 'tuple[]',\r\n                    },\r\n                ],\r\n                name: 'aggregate',\r\n                outputs: [\r\n                    { name: 'blockNumber', type: 'uint256' },\r\n                    { name: 'returnData', type: 'bytes[]' },\r\n                ],\r\n                payable: false,\r\n                stateMutability: 'nonpayable',\r\n                type: 'function',\r\n            },\r\n            {\r\n                inputs: [\r\n                    {\r\n                        internalType: 'bool',\r\n                        name: 'requireSuccess',\r\n                        type: 'bool',\r\n                    },\r\n                    {\r\n                        components: [\r\n                            {\r\n                                internalType: 'address',\r\n                                name: 'target',\r\n                                type: 'address',\r\n                            },\r\n                            {\r\n                                internalType: 'bytes',\r\n                                name: 'callData',\r\n                                type: 'bytes',\r\n                            },\r\n                        ],\r\n                        internalType: 'struct Multicall2.Call[]',\r\n                        name: 'calls',\r\n                        type: 'tuple[]',\r\n                    },\r\n                ],\r\n                name: 'tryBlockAndAggregate',\r\n                outputs: [\r\n                    {\r\n                        internalType: 'uint256',\r\n                        name: 'blockNumber',\r\n                        type: 'uint256',\r\n                    },\r\n                    {\r\n                        internalType: 'bytes32',\r\n                        name: 'blockHash',\r\n                        type: 'bytes32',\r\n                    },\r\n                    {\r\n                        components: [\r\n                            {\r\n                                internalType: 'bool',\r\n                                name: 'success',\r\n                                type: 'bool',\r\n                            },\r\n                            {\r\n                                internalType: 'bytes',\r\n                                name: 'returnData',\r\n                                type: 'bytes',\r\n                            },\r\n                        ],\r\n                        internalType: 'struct Multicall2.Result[]',\r\n                        name: 'returnData',\r\n                        type: 'tuple[]',\r\n                    },\r\n                ],\r\n                stateMutability: 'nonpayable',\r\n                type: 'function',\r\n            },\r\n        ];\r\n        if (this._options.web3Instance) {\r\n            this._executionType = ExecutionType.web3;\r\n            return;\r\n        }\r\n        if (this._options.ethersProvider) {\r\n            this._executionType = ExecutionType.ethers;\r\n            return;\r\n        }\r\n        if (this._options.nodeUrl) {\r\n            this._executionType = ExecutionType.customHttp;\r\n            return;\r\n        }\r\n        throw new Error(\r\n        // tslint:disable-next-line: max-line-length\r\n        'Your options passed in our incorrect they need to match either `MulticallOptionsEthers`, `MulticallOptionsWeb3` or `MulticallOptionsCustomJsonRpcProvider` interfaces');\r\n    }\r\n    /**\r\n     * Call all the contract calls in 1\r\n     * @param calls The calls\r\n     */\r\n    Multicall.prototype.call = function (contractCallContexts) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var aggregateResponse, returnObject, response, contractCallsResults, originalContractCallContext, returnObjectResult, method, methodContext, originalContractCallMethodContext, outputTypes, decodedReturnValues;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!Array.isArray(contractCallContexts)) {\r\n                            contractCallContexts = [contractCallContexts];\r\n                        }\r\n                        return [4 /*yield*/, this.execute(this.buildAggregateCallContext(contractCallContexts))];\r\n                    case 1:\r\n                        aggregateResponse = _a.sent();\r\n                        returnObject = {\r\n                            results: {},\r\n                            blockNumber: aggregateResponse.blockNumber,\r\n                        };\r\n                        for (response = 0; response < aggregateResponse.results.length; response++) {\r\n                            contractCallsResults = aggregateResponse.results[response];\r\n                            originalContractCallContext = contractCallContexts[contractCallsResults.contractContextIndex];\r\n                            returnObjectResult = {\r\n                                originalContractCallContext: Utils.deepClone(originalContractCallContext),\r\n                                callsReturnContext: [],\r\n                            };\r\n                            for (method = 0; method < contractCallsResults.methodResults.length; method++) {\r\n                                methodContext = contractCallsResults.methodResults[method];\r\n                                originalContractCallMethodContext = originalContractCallContext.calls[methodContext.contractMethodIndex];\r\n                                outputTypes = this.findOutputTypesFromAbi(originalContractCallContext.abi, originalContractCallMethodContext.methodName);\r\n                                if (this._options.tryAggregate && !methodContext.result.success) {\r\n                                    returnObjectResult.callsReturnContext.push(Utils.deepClone({\r\n                                        returnValues: [],\r\n                                        decoded: false,\r\n                                        reference: originalContractCallMethodContext.reference,\r\n                                        methodName: originalContractCallMethodContext.methodName,\r\n                                        methodParameters: originalContractCallMethodContext.methodParameters,\r\n                                        success: false,\r\n                                    }));\r\n                                    continue;\r\n                                }\r\n                                if (outputTypes && outputTypes.length > 0) {\r\n                                    decodedReturnValues = defaultAbiCoder.decode(\r\n                                    // tslint:disable-next-line: no-any\r\n                                    outputTypes, this.getReturnDataFromResult(methodContext.result));\r\n                                    returnObjectResult.callsReturnContext.push(Utils.deepClone({\r\n                                        returnValues: this.formatReturnValues(decodedReturnValues),\r\n                                        decoded: true,\r\n                                        reference: originalContractCallMethodContext.reference,\r\n                                        methodName: originalContractCallMethodContext.methodName,\r\n                                        methodParameters: originalContractCallMethodContext.methodParameters,\r\n                                        success: true,\r\n                                    }));\r\n                                }\r\n                                else {\r\n                                    returnObjectResult.callsReturnContext.push(Utils.deepClone({\r\n                                        returnValues: this.getReturnDataFromResult(methodContext.result),\r\n                                        decoded: false,\r\n                                        reference: originalContractCallMethodContext.reference,\r\n                                        methodName: originalContractCallMethodContext.methodName,\r\n                                        methodParameters: originalContractCallMethodContext.methodParameters,\r\n                                        success: true,\r\n                                    }));\r\n                                }\r\n                            }\r\n                            returnObject.results[returnObjectResult.originalContractCallContext.reference] = returnObjectResult;\r\n                        }\r\n                        return [2 /*return*/, returnObject];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get return data from result\r\n     * @param result The result\r\n     */\r\n    // tslint:disable-next-line: no-any\r\n    Multicall.prototype.getReturnDataFromResult = function (result) {\r\n        if (this._options.tryAggregate) {\r\n            return result.returnData;\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Format return values so its always an array\r\n     * @param decodedReturnValues The decoded return values\r\n     */\r\n    // tslint:disable-next-line: no-any\r\n    Multicall.prototype.formatReturnValues = function (decodedReturnValues) {\r\n        var decodedReturnResults = decodedReturnValues;\r\n        if (decodedReturnValues.length === 1) {\r\n            decodedReturnResults = decodedReturnValues[0];\r\n        }\r\n        if (Array.isArray(decodedReturnResults)) {\r\n            return decodedReturnResults;\r\n        }\r\n        return [decodedReturnResults];\r\n    };\r\n    /**\r\n     * Build aggregate call context\r\n     * @param contractCallContexts The contract call contexts\r\n     */\r\n    Multicall.prototype.buildAggregateCallContext = function (contractCallContexts) {\r\n        var aggregateCallContext = [];\r\n        for (var contract = 0; contract < contractCallContexts.length; contract++) {\r\n            var contractContext = contractCallContexts[contract];\r\n            var executingInterface = new ethers.utils.Interface(JSON.stringify(contractContext.abi));\r\n            for (var method = 0; method < contractContext.calls.length; method++) {\r\n                // https://github.com/ethers-io/ethers.js/issues/211\r\n                var methodContext = contractContext.calls[method];\r\n                // tslint:disable-next-line: no-unused-expression\r\n                var encodedData = executingInterface.encodeFunctionData(methodContext.methodName, methodContext.methodParameters);\r\n                aggregateCallContext.push({\r\n                    contractContextIndex: Utils.deepClone(contract),\r\n                    contractMethodIndex: Utils.deepClone(method),\r\n                    target: contractContext.contractAddress,\r\n                    encodedData: encodedData,\r\n                });\r\n            }\r\n        }\r\n        return aggregateCallContext;\r\n    };\r\n    /**\r\n     * Find output types from abi\r\n     * @param abi The abi\r\n     * @param methodName The method name\r\n     */\r\n    Multicall.prototype.findOutputTypesFromAbi = function (abi, methodName) {\r\n        var _a;\r\n        for (var i = 0; i < abi.length; i++) {\r\n            if (((_a = abi[i].name) === null || _a === void 0 ? void 0 : _a.trim()) === methodName.trim()) {\r\n                return abi[i].outputs;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    /**\r\n     * Execute the multicall contract call\r\n     * @param calls The calls\r\n     */\r\n    Multicall.prototype.execute = function (calls) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this._executionType;\r\n                        switch (_a) {\r\n                            case ExecutionType.web3: return [3 /*break*/, 1];\r\n                            case ExecutionType.ethers: return [3 /*break*/, 3];\r\n                            case ExecutionType.customHttp: return [3 /*break*/, 3];\r\n                        }\r\n                        return [3 /*break*/, 5];\r\n                    case 1: return [4 /*yield*/, this.executeWithWeb3(calls)];\r\n                    case 2: return [2 /*return*/, _b.sent()];\r\n                    case 3: return [4 /*yield*/, this.executeWithEthersOrCustom(calls)];\r\n                    case 4: return [2 /*return*/, _b.sent()];\r\n                    case 5: throw new Error(this._executionType + \" is not defined\");\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Execute aggregate with web3 instance\r\n     * @param calls The calls context\r\n     */\r\n    Multicall.prototype.executeWithWeb3 = function (calls) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var web3, networkId, contract, contractResponse, contractResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        web3 = this.getTypedOptions().web3Instance;\r\n                        return [4 /*yield*/, web3.eth.net.getId()];\r\n                    case 1:\r\n                        networkId = _a.sent();\r\n                        contract = new web3.eth.Contract(this.ABI, this.getContractBasedOnNetwork(networkId));\r\n                        if (!this._options.tryAggregate) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, contract.methods\r\n                                .tryBlockAndAggregate(false, this.mapCallContextToMatchContractFormat(calls))\r\n                                .call()];\r\n                    case 2:\r\n                        contractResponse = (_a.sent());\r\n                        contractResponse.blockNumber = BigNumber.from(contractResponse.blockNumber);\r\n                        return [2 /*return*/, this.buildUpAggregateResponse(contractResponse, calls)];\r\n                    case 3: return [4 /*yield*/, contract.methods\r\n                            .aggregate(this.mapCallContextToMatchContractFormat(calls))\r\n                            .call()];\r\n                    case 4:\r\n                        contractResponse = (_a.sent());\r\n                        contractResponse.blockNumber = BigNumber.from(contractResponse.blockNumber);\r\n                        return [2 /*return*/, this.buildUpAggregateResponse(contractResponse, calls)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Execute with ethers using passed in provider context or custom one\r\n     * @param calls The calls\r\n     */\r\n    Multicall.prototype.executeWithEthersOrCustom = function (calls) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var ethersProvider, customProvider, network, contract, contractResponse, contractResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        ethersProvider = this.getTypedOptions()\r\n                            .ethersProvider;\r\n                        if (!ethersProvider) {\r\n                            customProvider = this.getTypedOptions();\r\n                            if (customProvider.nodeUrl) {\r\n                                ethersProvider = new ethers.providers.JsonRpcProvider(customProvider.nodeUrl);\r\n                            }\r\n                            else {\r\n                                ethersProvider = ethers.getDefaultProvider();\r\n                            }\r\n                        }\r\n                        return [4 /*yield*/, ethersProvider.getNetwork()];\r\n                    case 1:\r\n                        network = _a.sent();\r\n                        contract = new ethers.Contract(this.getContractBasedOnNetwork(network.chainId), this.ABI, ethersProvider);\r\n                        if (!this._options.tryAggregate) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, contract.callStatic.tryBlockAndAggregate(false, this.mapCallContextToMatchContractFormat(calls))];\r\n                    case 2:\r\n                        contractResponse = (_a.sent());\r\n                        return [2 /*return*/, this.buildUpAggregateResponse(contractResponse, calls)];\r\n                    case 3: return [4 /*yield*/, contract.callStatic.aggregate(this.mapCallContextToMatchContractFormat(calls))];\r\n                    case 4:\r\n                        contractResponse = (_a.sent());\r\n                        return [2 /*return*/, this.buildUpAggregateResponse(contractResponse, calls)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Build up the aggregated response from the contract response mapping\r\n     * metadata from the calls\r\n     * @param contractResponse The contract response\r\n     * @param calls The calls\r\n     */\r\n    Multicall.prototype.buildUpAggregateResponse = function (contractResponse, calls) {\r\n        var aggregateResponse = {\r\n            blockNumber: contractResponse.blockNumber.toNumber(),\r\n            results: [],\r\n        };\r\n        var _loop_1 = function (i) {\r\n            var existingResponse = aggregateResponse.results.find(function (c) { return c.contractContextIndex === calls[i].contractContextIndex; });\r\n            if (existingResponse) {\r\n                existingResponse.methodResults.push({\r\n                    result: contractResponse.returnData[i],\r\n                    contractMethodIndex: calls[i].contractMethodIndex,\r\n                });\r\n            }\r\n            else {\r\n                aggregateResponse.results.push({\r\n                    methodResults: [\r\n                        {\r\n                            result: contractResponse.returnData[i],\r\n                            contractMethodIndex: calls[i].contractMethodIndex,\r\n                        },\r\n                    ],\r\n                    contractContextIndex: calls[i].contractContextIndex,\r\n                });\r\n            }\r\n        };\r\n        for (var i = 0; i < contractResponse.returnData.length; i++) {\r\n            _loop_1(i);\r\n        }\r\n        return aggregateResponse;\r\n    };\r\n    /**\r\n     * Map call contract to match contract format\r\n     * @param calls The calls context\r\n     */\r\n    Multicall.prototype.mapCallContextToMatchContractFormat = function (calls) {\r\n        return calls.map(function (call) {\r\n            return {\r\n                target: call.target,\r\n                callData: call.encodedData,\r\n            };\r\n        });\r\n    };\r\n    /**\r\n     * Get typed options\r\n     */\r\n    Multicall.prototype.getTypedOptions = function () {\r\n        return this._options;\r\n    };\r\n    /**\r\n     * Get the contract based on the network\r\n     * @param tryAggregate The tryAggregate\r\n     * @param network The network\r\n     */\r\n    Multicall.prototype.getContractBasedOnNetwork = function (network) {\r\n        // if they have overriden the multicall custom contract address then use that\r\n        if (this._options.multicallCustomContractAddress) {\r\n            return this._options.multicallCustomContractAddress;\r\n        }\r\n        switch (network) {\r\n            case Networks.mainnet:\r\n            case Networks.kovan:\r\n            case Networks.rinkeby:\r\n            case Networks.ropsten:\r\n            case Networks.goerli:\r\n                return '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696';\r\n            case Networks.bsc:\r\n                return '0xC50F4c1E81c873B2204D7eFf7069Ffec6Fbe136D';\r\n            case Networks.bsc_testnet:\r\n                return '0x6e5BB1a5Ad6F68A8D7D6A5e47750eC15773d6042';\r\n            case Networks.xdai:\r\n                return '0x2325b72990D81892E0e09cdE5C80DD221F147F8B';\r\n            case Networks.mumbai:\r\n                return '0xe9939e7Ea7D7fb619Ac57f648Da7B1D425832631';\r\n            case Networks.matic:\r\n                return '0x275617327c958bD06b5D6b871E7f491D76113dd8';\r\n            case Networks.etherlite:\r\n                return '0x21681750D7ddCB8d1240eD47338dC984f94AF2aC';\r\n            case Networks.arbitrum:\r\n                return '0x80C7DD17B01855a6D2347444a0FCC36136a314de';\r\n            case Networks.avalauncheFuji:\r\n                return '0x3D015943d2780fE97FE3f69C97edA2CCC094f78c';\r\n            case Networks.avalauncheMainnet:\r\n                return '0xed386Fe855C1EFf2f843B910923Dd8846E45C5A4';\r\n            case Networks.fantom:\r\n                return '0xD98e3dBE5950Ca8Ce5a4b59630a5652110403E5c';\r\n            default:\r\n                throw new Error(\"Network - \" + network + \" is not got a contract defined it only supports mainnet, kovan, rinkeby, bsc and ropsten\");\r\n        }\r\n    };\r\n    return Multicall;\r\n}());\r\nexport { Multicall };\r\n","\"use strict\";\nimport { HashZero } from \"@ethersproject/constants\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, toUtf8String } from \"./utf8\";\nexport function formatBytes32String(text) {\n    // Get the bytes\n    const bytes = toUtf8Bytes(text);\n    // Check we have room for null-termination\n    if (bytes.length > 31) {\n        throw new Error(\"bytes32 string must be less than 32 bytes\");\n    }\n    // Zero-pad (implicitly null-terminates)\n    return hexlify(concat([bytes, HashZero]).slice(0, 32));\n}\nexport function parseBytes32String(bytes) {\n    const data = arrayify(bytes);\n    // Must be 32 bytes with a null-termination\n    if (data.length !== 32) {\n        throw new Error(\"invalid bytes32 - not 32 bytes long\");\n    }\n    if (data[31] !== 0) {\n        throw new Error(\"invalid bytes32 string - no null terminator\");\n    }\n    // Find the null termination\n    let length = 31;\n    while (data[length - 1] === 0) {\n        length--;\n    }\n    // Determine the string value\n    return toUtf8String(data.slice(0, length));\n}\n//# sourceMappingURL=bytes32.js.map","export const version = \"units/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value) {\n    const comps = String(value).split(\".\");\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") {\n        whole = whole.substring(1);\n    }\n    if (whole === \"\") {\n        whole = \"0\";\n    }\n    let suffix = \"\";\n    if (comps.length === 2) {\n        suffix = \".\" + (comps[1] || \"0\");\n    }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        }\n        else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n    return negative + formatted.join(\",\") + suffix;\n}\nexport function formatUnits(value, unitName) {\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return formatFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function parseUnits(value, unitName) {\n    if (typeof (value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return parseFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nexport function parseEther(ether) {\n    return parseUnits(ether, 18);\n}\n//# sourceMappingURL=index.js.map","import { concat } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nexport const messagePrefix = \"\\x19Ethereum Signed Message:\\n\";\nexport function hashMessage(message) {\n    if (typeof (message) === \"string\") {\n        message = toUtf8Bytes(message);\n    }\n    return keccak256(concat([\n        toUtf8Bytes(messagePrefix),\n        toUtf8Bytes(String(message.length)),\n        message\n    ]));\n}\n//# sourceMappingURL=message.js.map","\"use strict\";\nexport { decode, encode } from \"./base64\";\n//# sourceMappingURL=index.js.map","\"use strict\";\n\n(function(root) {\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = value >> 8;\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","export const version = \"abstract-signer/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defineReadOnly, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst allowedTransactionKeys = [\n    \"accessList\", \"ccipReadEnabled\", \"chainId\", \"customData\", \"data\", \"from\", \"gasLimit\", \"gasPrice\", \"maxFeePerGas\", \"maxPriorityFeePerGas\", \"nonce\", \"to\", \"type\", \"value\"\n];\nconst forwardErrors = [\n    Logger.errors.INSUFFICIENT_FUNDS,\n    Logger.errors.NONCE_EXPIRED,\n    Logger.errors.REPLACEMENT_UNDERPRICED,\n];\n;\n;\nexport class Signer {\n    ///////////////////\n    // Sub-classes MUST call super\n    constructor() {\n        logger.checkAbstract(new.target, Signer);\n        defineReadOnly(this, \"_isSigner\", true);\n    }\n    ///////////////////\n    // Sub-classes MAY override these\n    getBalance(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getBalance\");\n            return yield this.provider.getBalance(this.getAddress(), blockTag);\n        });\n    }\n    getTransactionCount(blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getTransactionCount\");\n            return yield this.provider.getTransactionCount(this.getAddress(), blockTag);\n        });\n    }\n    // Populates \"from\" if unspecified, and estimates the gas for the transaction\n    estimateGas(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"estimateGas\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.estimateGas(tx);\n        });\n    }\n    // Populates \"from\" if unspecified, and calls with the transaction\n    call(transaction, blockTag) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"call\");\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            return yield this.provider.call(tx, blockTag);\n        });\n    }\n    // Populates all fields in a transaction, signs it and sends it to the network\n    sendTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"sendTransaction\");\n            const tx = yield this.populateTransaction(transaction);\n            const signedTx = yield this.signTransaction(tx);\n            return yield this.provider.sendTransaction(signedTx);\n        });\n    }\n    getChainId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getChainId\");\n            const network = yield this.provider.getNetwork();\n            return network.chainId;\n        });\n    }\n    getGasPrice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getGasPrice\");\n            return yield this.provider.getGasPrice();\n        });\n    }\n    getFeeData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"getFeeData\");\n            return yield this.provider.getFeeData();\n        });\n    }\n    resolveName(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._checkProvider(\"resolveName\");\n            return yield this.provider.resolveName(name);\n        });\n    }\n    // Checks a transaction does not contain invalid keys and if\n    // no \"from\" is provided, populates it.\n    // - does NOT require a provider\n    // - adds \"from\" is not present\n    // - returns a COPY (safe to mutate the result)\n    // By default called from: (overriding these prevents it)\n    //   - call\n    //   - estimateGas\n    //   - populateTransaction (and therefor sendTransaction)\n    checkTransaction(transaction) {\n        for (const key in transaction) {\n            if (allowedTransactionKeys.indexOf(key) === -1) {\n                logger.throwArgumentError(\"invalid transaction key: \" + key, \"transaction\", transaction);\n            }\n        }\n        const tx = shallowCopy(transaction);\n        if (tx.from == null) {\n            tx.from = this.getAddress();\n        }\n        else {\n            // Make sure any provided address matches this signer\n            tx.from = Promise.all([\n                Promise.resolve(tx.from),\n                this.getAddress()\n            ]).then((result) => {\n                if (result[0].toLowerCase() !== result[1].toLowerCase()) {\n                    logger.throwArgumentError(\"from address mismatch\", \"transaction\", transaction);\n                }\n                return result[0];\n            });\n        }\n        return tx;\n    }\n    // Populates ALL keys for a transaction and checks that \"from\" matches\n    // this Signer. Should be used by sendTransaction but NOT by signTransaction.\n    // By default called from: (overriding these prevents it)\n    //   - sendTransaction\n    //\n    // Notes:\n    //  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas\n    populateTransaction(transaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const tx = yield resolveProperties(this.checkTransaction(transaction));\n            if (tx.to != null) {\n                tx.to = Promise.resolve(tx.to).then((to) => __awaiter(this, void 0, void 0, function* () {\n                    if (to == null) {\n                        return null;\n                    }\n                    const address = yield this.resolveName(to);\n                    if (address == null) {\n                        logger.throwArgumentError(\"provided ENS name resolves to null\", \"tx.to\", to);\n                    }\n                    return address;\n                }));\n                // Prevent this error from causing an UnhandledPromiseException\n                tx.to.catch((error) => { });\n            }\n            // Do not allow mixing pre-eip-1559 and eip-1559 properties\n            const hasEip1559 = (tx.maxFeePerGas != null || tx.maxPriorityFeePerGas != null);\n            if (tx.gasPrice != null && (tx.type === 2 || hasEip1559)) {\n                logger.throwArgumentError(\"eip-1559 transaction do not support gasPrice\", \"transaction\", transaction);\n            }\n            else if ((tx.type === 0 || tx.type === 1) && hasEip1559) {\n                logger.throwArgumentError(\"pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas\", \"transaction\", transaction);\n            }\n            if ((tx.type === 2 || tx.type == null) && (tx.maxFeePerGas != null && tx.maxPriorityFeePerGas != null)) {\n                // Fully-formed EIP-1559 transaction (skip getFeeData)\n                tx.type = 2;\n            }\n            else if (tx.type === 0 || tx.type === 1) {\n                // Explicit Legacy or EIP-2930 transaction\n                // Populate missing gasPrice\n                if (tx.gasPrice == null) {\n                    tx.gasPrice = this.getGasPrice();\n                }\n            }\n            else {\n                // We need to get fee data to determine things\n                const feeData = yield this.getFeeData();\n                if (tx.type == null) {\n                    // We need to auto-detect the intended type of this transaction...\n                    if (feeData.maxFeePerGas != null && feeData.maxPriorityFeePerGas != null) {\n                        // The network supports EIP-1559!\n                        // Upgrade transaction from null to eip-1559\n                        tx.type = 2;\n                        if (tx.gasPrice != null) {\n                            // Using legacy gasPrice property on an eip-1559 network,\n                            // so use gasPrice as both fee properties\n                            const gasPrice = tx.gasPrice;\n                            delete tx.gasPrice;\n                            tx.maxFeePerGas = gasPrice;\n                            tx.maxPriorityFeePerGas = gasPrice;\n                        }\n                        else {\n                            // Populate missing fee data\n                            if (tx.maxFeePerGas == null) {\n                                tx.maxFeePerGas = feeData.maxFeePerGas;\n                            }\n                            if (tx.maxPriorityFeePerGas == null) {\n                                tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                            }\n                        }\n                    }\n                    else if (feeData.gasPrice != null) {\n                        // Network doesn't support EIP-1559...\n                        // ...but they are trying to use EIP-1559 properties\n                        if (hasEip1559) {\n                            logger.throwError(\"network does not support EIP-1559\", Logger.errors.UNSUPPORTED_OPERATION, {\n                                operation: \"populateTransaction\"\n                            });\n                        }\n                        // Populate missing fee data\n                        if (tx.gasPrice == null) {\n                            tx.gasPrice = feeData.gasPrice;\n                        }\n                        // Explicitly set untyped transaction to legacy\n                        tx.type = 0;\n                    }\n                    else {\n                        // getFeeData has failed us.\n                        logger.throwError(\"failed to get consistent fee data\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"signer.getFeeData\"\n                        });\n                    }\n                }\n                else if (tx.type === 2) {\n                    // Explicitly using EIP-1559\n                    // Populate missing fee data\n                    if (tx.maxFeePerGas == null) {\n                        tx.maxFeePerGas = feeData.maxFeePerGas;\n                    }\n                    if (tx.maxPriorityFeePerGas == null) {\n                        tx.maxPriorityFeePerGas = feeData.maxPriorityFeePerGas;\n                    }\n                }\n            }\n            if (tx.nonce == null) {\n                tx.nonce = this.getTransactionCount(\"pending\");\n            }\n            if (tx.gasLimit == null) {\n                tx.gasLimit = this.estimateGas(tx).catch((error) => {\n                    if (forwardErrors.indexOf(error.code) >= 0) {\n                        throw error;\n                    }\n                    return logger.throwError(\"cannot estimate gas; transaction may fail or may require manual gas limit\", Logger.errors.UNPREDICTABLE_GAS_LIMIT, {\n                        error: error,\n                        tx: tx\n                    });\n                });\n            }\n            if (tx.chainId == null) {\n                tx.chainId = this.getChainId();\n            }\n            else {\n                tx.chainId = Promise.all([\n                    Promise.resolve(tx.chainId),\n                    this.getChainId()\n                ]).then((results) => {\n                    if (results[1] !== 0 && results[0] !== results[1]) {\n                        logger.throwArgumentError(\"chainId address mismatch\", \"transaction\", transaction);\n                    }\n                    return results[0];\n                });\n            }\n            return yield resolveProperties(tx);\n        });\n    }\n    ///////////////////\n    // Sub-classes SHOULD leave these alone\n    _checkProvider(operation) {\n        if (!this.provider) {\n            logger.throwError(\"missing provider\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: (operation || \"_checkProvider\")\n            });\n        }\n    }\n    static isSigner(value) {\n        return !!(value && value._isSigner);\n    }\n}\nexport class VoidSigner extends Signer {\n    constructor(address, provider) {\n        logger.checkNew(new.target, VoidSigner);\n        super();\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"provider\", provider || null);\n    }\n    getAddress() {\n        return Promise.resolve(this.address);\n    }\n    _fail(message, operation) {\n        return Promise.resolve().then(() => {\n            logger.throwError(message, Logger.errors.UNSUPPORTED_OPERATION, { operation: operation });\n        });\n    }\n    signMessage(message) {\n        return this._fail(\"VoidSigner cannot sign messages\", \"signMessage\");\n    }\n    signTransaction(transaction) {\n        return this._fail(\"VoidSigner cannot sign transactions\", \"signTransaction\");\n    }\n    _signTypedData(domain, types, value) {\n        return this._fail(\"VoidSigner cannot sign typed data\", \"signTypedData\");\n    }\n    connect(provider) {\n        return new VoidSigner(this.address, provider);\n    }\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { id } from \"./id\";\nimport { dnsEncode, isValidName, namehash } from \"./namehash\";\nimport { hashMessage, messagePrefix } from \"./message\";\nimport { TypedDataEncoder as _TypedDataEncoder } from \"./typed-data\";\nexport { id, dnsEncode, namehash, isValidName, messagePrefix, hashMessage, _TypedDataEncoder, };\n//# sourceMappingURL=index.js.map","import { computeHmac, ripemd160, sha256, sha512 } from \"./sha2\";\nimport { SupportedAlgorithm } from \"./types\";\nexport { computeHmac, ripemd160, sha256, sha512, SupportedAlgorithm };\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { toUtf8CodePoints, _toUtf8String, UnicodeNormalizationForm } from \"./utf8\";\nfunction bytes2(data) {\n    if ((data.length % 4) !== 0) {\n        throw new Error(\"bad data\");\n    }\n    let result = [];\n    for (let i = 0; i < data.length; i += 4) {\n        result.push(parseInt(data.substring(i, i + 4), 16));\n    }\n    return result;\n}\nfunction createTable(data, func) {\n    if (!func) {\n        func = function (value) { return [parseInt(value, 16)]; };\n    }\n    let lo = 0;\n    let result = {};\n    data.split(\",\").forEach((pair) => {\n        let comps = pair.split(\":\");\n        lo += parseInt(comps[0], 16);\n        result[lo] = func(comps[1]);\n    });\n    return result;\n}\nfunction createRangeTable(data) {\n    let hi = 0;\n    return data.split(\",\").map((v) => {\n        let comps = v.split(\"-\");\n        if (comps.length === 1) {\n            comps[1] = \"0\";\n        }\n        else if (comps[1] === \"\") {\n            comps[1] = \"1\";\n        }\n        let lo = hi + parseInt(comps[0], 16);\n        hi = parseInt(comps[1], 16);\n        return { l: lo, h: hi };\n    });\n}\nfunction matchMap(value, ranges) {\n    let lo = 0;\n    for (let i = 0; i < ranges.length; i++) {\n        let range = ranges[i];\n        lo += range.l;\n        if (value >= lo && value <= lo + range.h && ((value - lo) % (range.d || 1)) === 0) {\n            if (range.e && range.e.indexOf(value - lo) !== -1) {\n                continue;\n            }\n            return range;\n        }\n    }\n    return null;\n}\nconst Table_A_1_ranges = createRangeTable(\"221,13-1b,5f-,40-10,51-f,11-3,3-3,2-2,2-4,8,2,15,2d,28-8,88,48,27-,3-5,11-20,27-,8,28,3-5,12,18,b-a,1c-4,6-16,2-d,2-2,2,1b-4,17-9,8f-,10,f,1f-2,1c-34,33-14e,4,36-,13-,6-2,1a-f,4,9-,3-,17,8,2-2,5-,2,8-,3-,4-8,2-3,3,6-,16-6,2-,7-3,3-,17,8,3,3,3-,2,6-3,3-,4-a,5,2-6,10-b,4,8,2,4,17,8,3,6-,b,4,4-,2-e,2-4,b-10,4,9-,3-,17,8,3-,5-,9-2,3-,4-7,3-3,3,4-3,c-10,3,7-2,4,5-2,3,2,3-2,3-2,4-2,9,4-3,6-2,4,5-8,2-e,d-d,4,9,4,18,b,6-3,8,4,5-6,3-8,3-3,b-11,3,9,4,18,b,6-3,8,4,5-6,3-6,2,3-3,b-11,3,9,4,18,11-3,7-,4,5-8,2-7,3-3,b-11,3,13-2,19,a,2-,8-2,2-3,7,2,9-11,4-b,3b-3,1e-24,3,2-,3,2-,2-5,5,8,4,2,2-,3,e,4-,6,2,7-,b-,3-21,49,23-5,1c-3,9,25,10-,2-2f,23,6,3,8-2,5-5,1b-45,27-9,2a-,2-3,5b-4,45-4,53-5,8,40,2,5-,8,2,5-,28,2,5-,20,2,5-,8,2,5-,8,8,18,20,2,5-,8,28,14-5,1d-22,56-b,277-8,1e-2,52-e,e,8-a,18-8,15-b,e,4,3-b,5e-2,b-15,10,b-5,59-7,2b-555,9d-3,5b-5,17-,7-,27-,7-,9,2,2,2,20-,36,10,f-,7,14-,4,a,54-3,2-6,6-5,9-,1c-10,13-1d,1c-14,3c-,10-6,32-b,240-30,28-18,c-14,a0,115-,3,66-,b-76,5,5-,1d,24,2,5-2,2,8-,35-2,19,f-10,1d-3,311-37f,1b,5a-b,d7-19,d-3,41,57-,68-4,29-3,5f,29-37,2e-2,25-c,2c-2,4e-3,30,78-3,64-,20,19b7-49,51a7-59,48e-2,38-738,2ba5-5b,222f-,3c-94,8-b,6-4,1b,6,2,3,3,6d-20,16e-f,41-,37-7,2e-2,11-f,5-b,18-,b,14,5-3,6,88-,2,bf-2,7-,7-,7-,4-2,8,8-9,8-2ff,20,5-b,1c-b4,27-,27-cbb1,f7-9,28-2,b5-221,56,48,3-,2-,3-,5,d,2,5,3,42,5-,9,8,1d,5,6,2-2,8,153-3,123-3,33-27fd,a6da-5128,21f-5df,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3-fffd,3,2-1d,61-ff7d\");\n// @TODO: Make this relative...\nconst Table_B_1_flags = \"ad,34f,1806,180b,180c,180d,200b,200c,200d,2060,feff\".split(\",\").map((v) => parseInt(v, 16));\nconst Table_B_2_ranges = [\n    { h: 25, s: 32, l: 65 },\n    { h: 30, s: 32, e: [23], l: 127 },\n    { h: 54, s: 1, e: [48], l: 64, d: 2 },\n    { h: 14, s: 1, l: 57, d: 2 },\n    { h: 44, s: 1, l: 17, d: 2 },\n    { h: 10, s: 1, e: [2, 6, 8], l: 61, d: 2 },\n    { h: 16, s: 1, l: 68, d: 2 },\n    { h: 84, s: 1, e: [18, 24, 66], l: 19, d: 2 },\n    { h: 26, s: 32, e: [17], l: 435 },\n    { h: 22, s: 1, l: 71, d: 2 },\n    { h: 15, s: 80, l: 40 },\n    { h: 31, s: 32, l: 16 },\n    { h: 32, s: 1, l: 80, d: 2 },\n    { h: 52, s: 1, l: 42, d: 2 },\n    { h: 12, s: 1, l: 55, d: 2 },\n    { h: 40, s: 1, e: [38], l: 15, d: 2 },\n    { h: 14, s: 1, l: 48, d: 2 },\n    { h: 37, s: 48, l: 49 },\n    { h: 148, s: 1, l: 6351, d: 2 },\n    { h: 88, s: 1, l: 160, d: 2 },\n    { h: 15, s: 16, l: 704 },\n    { h: 25, s: 26, l: 854 },\n    { h: 25, s: 32, l: 55915 },\n    { h: 37, s: 40, l: 1247 },\n    { h: 25, s: -119711, l: 53248 },\n    { h: 25, s: -119763, l: 52 },\n    { h: 25, s: -119815, l: 52 },\n    { h: 25, s: -119867, e: [1, 4, 5, 7, 8, 11, 12, 17], l: 52 },\n    { h: 25, s: -119919, l: 52 },\n    { h: 24, s: -119971, e: [2, 7, 8, 17], l: 52 },\n    { h: 24, s: -120023, e: [2, 7, 13, 15, 16, 17], l: 52 },\n    { h: 25, s: -120075, l: 52 },\n    { h: 25, s: -120127, l: 52 },\n    { h: 25, s: -120179, l: 52 },\n    { h: 25, s: -120231, l: 52 },\n    { h: 25, s: -120283, l: 52 },\n    { h: 25, s: -120335, l: 52 },\n    { h: 24, s: -119543, e: [17], l: 56 },\n    { h: 24, s: -119601, e: [17], l: 58 },\n    { h: 24, s: -119659, e: [17], l: 58 },\n    { h: 24, s: -119717, e: [17], l: 58 },\n    { h: 24, s: -119775, e: [17], l: 58 }\n];\nconst Table_B_2_lut_abs = createTable(\"b5:3bc,c3:ff,7:73,2:253,5:254,3:256,1:257,5:259,1:25b,3:260,1:263,2:269,1:268,5:26f,1:272,2:275,7:280,3:283,5:288,3:28a,1:28b,5:292,3f:195,1:1bf,29:19e,125:3b9,8b:3b2,1:3b8,1:3c5,3:3c6,1:3c0,1a:3ba,1:3c1,1:3c3,2:3b8,1:3b5,1bc9:3b9,1c:1f76,1:1f77,f:1f7a,1:1f7b,d:1f78,1:1f79,1:1f7c,1:1f7d,107:63,5:25b,4:68,1:68,1:68,3:69,1:69,1:6c,3:6e,4:70,1:71,1:72,1:72,1:72,7:7a,2:3c9,2:7a,2:6b,1:e5,1:62,1:63,3:65,1:66,2:6d,b:3b3,1:3c0,6:64,1b574:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3,20:3b8,1a:3c3\");\nconst Table_B_2_lut_rel = createTable(\"179:1,2:1,2:1,5:1,2:1,a:4f,a:1,8:1,2:1,2:1,3:1,5:1,3:1,4:1,2:1,3:1,4:1,8:2,1:1,2:2,1:1,2:2,27:2,195:26,2:25,1:25,1:25,2:40,2:3f,1:3f,33:1,11:-6,1:-9,1ac7:-3a,6d:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,b:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,c:-8,2:-8,2:-8,2:-8,9:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,1:-8,49:-8,1:-8,1:-4a,1:-4a,d:-56,1:-56,1:-56,1:-56,d:-8,1:-8,f:-8,1:-8,3:-7\");\nconst Table_B_2_complex = createTable(\"df:00730073,51:00690307,19:02BC006E,a7:006A030C,18a:002003B9,16:03B903080301,20:03C503080301,1d7:05650582,190f:00680331,1:00740308,1:0077030A,1:0079030A,1:006102BE,b6:03C50313,2:03C503130300,2:03C503130301,2:03C503130342,2a:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F0003B9,1:1F0103B9,1:1F0203B9,1:1F0303B9,1:1F0403B9,1:1F0503B9,1:1F0603B9,1:1F0703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F2003B9,1:1F2103B9,1:1F2203B9,1:1F2303B9,1:1F2403B9,1:1F2503B9,1:1F2603B9,1:1F2703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,1:1F6003B9,1:1F6103B9,1:1F6203B9,1:1F6303B9,1:1F6403B9,1:1F6503B9,1:1F6603B9,1:1F6703B9,3:1F7003B9,1:03B103B9,1:03AC03B9,2:03B10342,1:03B1034203B9,5:03B103B9,6:1F7403B9,1:03B703B9,1:03AE03B9,2:03B70342,1:03B7034203B9,5:03B703B9,6:03B903080300,1:03B903080301,3:03B90342,1:03B903080342,b:03C503080300,1:03C503080301,1:03C10313,2:03C50342,1:03C503080342,b:1F7C03B9,1:03C903B9,1:03CE03B9,2:03C90342,1:03C9034203B9,5:03C903B9,ac:00720073,5b:00B00063,6:00B00066,d:006E006F,a:0073006D,1:00740065006C,1:0074006D,124f:006800700061,2:00610075,2:006F0076,b:00700061,1:006E0061,1:03BC0061,1:006D0061,1:006B0061,1:006B0062,1:006D0062,1:00670062,3:00700066,1:006E0066,1:03BC0066,4:0068007A,1:006B0068007A,1:006D0068007A,1:00670068007A,1:00740068007A,15:00700061,1:006B00700061,1:006D00700061,1:006700700061,8:00700076,1:006E0076,1:03BC0076,1:006D0076,1:006B0076,1:006D0076,1:00700077,1:006E0077,1:03BC0077,1:006D0077,1:006B0077,1:006D0077,1:006B03C9,1:006D03C9,2:00620071,3:00632215006B0067,1:0063006F002E,1:00640062,1:00670079,2:00680070,2:006B006B,1:006B006D,9:00700068,2:00700070006D,1:00700072,2:00730076,1:00770062,c723:00660066,1:00660069,1:0066006C,1:006600660069,1:00660066006C,1:00730074,1:00730074,d:05740576,1:05740565,1:0574056B,1:057E0576,1:0574056D\", bytes2);\nconst Table_C_ranges = createRangeTable(\"80-20,2a0-,39c,32,f71,18e,7f2-f,19-7,30-4,7-5,f81-b,5,a800-20ff,4d1-1f,110,fa-6,d174-7,2e84-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,ffff-,2,1f-5f,ff7f-20001\");\nfunction flatten(values) {\n    return values.reduce((accum, value) => {\n        value.forEach((value) => { accum.push(value); });\n        return accum;\n    }, []);\n}\nexport function _nameprepTableA1(codepoint) {\n    return !!matchMap(codepoint, Table_A_1_ranges);\n}\nexport function _nameprepTableB2(codepoint) {\n    let range = matchMap(codepoint, Table_B_2_ranges);\n    if (range) {\n        return [codepoint + range.s];\n    }\n    let codes = Table_B_2_lut_abs[codepoint];\n    if (codes) {\n        return codes;\n    }\n    let shift = Table_B_2_lut_rel[codepoint];\n    if (shift) {\n        return [codepoint + shift[0]];\n    }\n    let complex = Table_B_2_complex[codepoint];\n    if (complex) {\n        return complex;\n    }\n    return null;\n}\nexport function _nameprepTableC(codepoint) {\n    return !!matchMap(codepoint, Table_C_ranges);\n}\nexport function nameprep(value) {\n    // This allows platforms with incomplete normalize to bypass\n    // it for very basic names which the built-in toLowerCase\n    // will certainly handle correctly\n    if (value.match(/^[a-z0-9-]*$/i) && value.length <= 59) {\n        return value.toLowerCase();\n    }\n    // Get the code points (keeping the current normalization)\n    let codes = toUtf8CodePoints(value);\n    codes = flatten(codes.map((code) => {\n        // Substitute Table B.1 (Maps to Nothing)\n        if (Table_B_1_flags.indexOf(code) >= 0) {\n            return [];\n        }\n        if (code >= 0xfe00 && code <= 0xfe0f) {\n            return [];\n        }\n        // Substitute Table B.2 (Case Folding)\n        let codesTableB2 = _nameprepTableB2(code);\n        if (codesTableB2) {\n            return codesTableB2;\n        }\n        // No Substitution\n        return [code];\n    }));\n    // Normalize using form KC\n    codes = toUtf8CodePoints(_toUtf8String(codes), UnicodeNormalizationForm.NFKC);\n    // Prohibit Tables C.1.2, C.2.2, C.3, C.4, C.5, C.6, C.7, C.8, C.9\n    codes.forEach((code) => {\n        if (_nameprepTableC(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_PROHIBITED\");\n        }\n    });\n    // Prohibit Unassigned Code Points (Table A.1)\n    codes.forEach((code) => {\n        if (_nameprepTableA1(code)) {\n            throw new Error(\"STRINGPREP_CONTAINS_UNASSIGNED\");\n        }\n    });\n    // IDNA extras\n    let name = _toUtf8String(codes);\n    // IDNA: 4.2.3.1\n    if (name.substring(0, 1) === \"-\" || name.substring(2, 4) === \"--\" || name.substring(name.length - 1) === \"-\") {\n        throw new Error(\"invalid hyphen\");\n    }\n    // IDNA: 4.2.4\n    if (name.length > 63) {\n        throw new Error(\"too long\");\n    }\n    return name;\n}\n//# sourceMappingURL=idna.js.map","\"use strict\";\nimport { formatBytes32String, parseBytes32String } from \"./bytes32\";\nimport { nameprep } from \"./idna\";\nimport { _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, UnicodeNormalizationForm, Utf8ErrorFuncs, Utf8ErrorReason } from \"./utf8\";\nexport { _toEscapedUtf8String, toUtf8Bytes, toUtf8CodePoints, toUtf8String, Utf8ErrorFuncs, Utf8ErrorReason, UnicodeNormalizationForm, formatBytes32String, parseBytes32String, nameprep };\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport aes from \"aes-js\";\nimport scrypt from \"scrypt-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify, concat, hexlify } from \"@ethersproject/bytes\";\nimport { defaultPath, entropyToMnemonic, HDNode, mnemonicToEntropy } from \"@ethersproject/hdnode\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 as _pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { randomBytes } from \"@ethersproject/random\";\nimport { Description } from \"@ethersproject/properties\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { getPassword, looseArrayify, searchPath, uuidV4, zpad } from \"./utils\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n// Exported Types\nfunction hasMnemonic(value) {\n    return (value != null && value.mnemonic && value.mnemonic.phrase);\n}\nexport class KeystoreAccount extends Description {\n    isKeystoreAccount(value) {\n        return !!(value && value._isKeystoreAccount);\n    }\n}\nfunction _decrypt(data, key, ciphertext) {\n    const cipher = searchPath(data, \"crypto/cipher\");\n    if (cipher === \"aes-128-ctr\") {\n        const iv = looseArrayify(searchPath(data, \"crypto/cipherparams/iv\"));\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(key, counter);\n        return arrayify(aesCtr.decrypt(ciphertext));\n    }\n    return null;\n}\nfunction _getAccount(data, key) {\n    const ciphertext = looseArrayify(searchPath(data, \"crypto/ciphertext\"));\n    const computedMAC = hexlify(keccak256(concat([key.slice(16, 32), ciphertext]))).substring(2);\n    if (computedMAC !== searchPath(data, \"crypto/mac\").toLowerCase()) {\n        throw new Error(\"invalid password\");\n    }\n    const privateKey = _decrypt(data, key.slice(0, 16), ciphertext);\n    if (!privateKey) {\n        logger.throwError(\"unsupported cipher\", Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"decrypt\"\n        });\n    }\n    const mnemonicKey = key.slice(32, 64);\n    const address = computeAddress(privateKey);\n    if (data.address) {\n        let check = data.address.toLowerCase();\n        if (check.substring(0, 2) !== \"0x\") {\n            check = \"0x\" + check;\n        }\n        if (getAddress(check) !== address) {\n            throw new Error(\"address mismatch\");\n        }\n    }\n    const account = {\n        _isKeystoreAccount: true,\n        address: address,\n        privateKey: hexlify(privateKey)\n    };\n    // Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase\n    if (searchPath(data, \"x-ethers/version\") === \"0.1\") {\n        const mnemonicCiphertext = looseArrayify(searchPath(data, \"x-ethers/mnemonicCiphertext\"));\n        const mnemonicIv = looseArrayify(searchPath(data, \"x-ethers/mnemonicCounter\"));\n        const mnemonicCounter = new aes.Counter(mnemonicIv);\n        const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n        const path = searchPath(data, \"x-ethers/path\") || defaultPath;\n        const locale = searchPath(data, \"x-ethers/locale\") || \"en\";\n        const entropy = arrayify(mnemonicAesCtr.decrypt(mnemonicCiphertext));\n        try {\n            const mnemonic = entropyToMnemonic(entropy, locale);\n            const node = HDNode.fromMnemonic(mnemonic, null, locale).derivePath(path);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n            account.mnemonic = node.mnemonic;\n        }\n        catch (error) {\n            // If we don't have the locale wordlist installed to\n            // read this mnemonic, just bail and don't set the\n            // mnemonic\n            if (error.code !== Logger.errors.INVALID_ARGUMENT || error.argument !== \"wordlist\") {\n                throw error;\n            }\n        }\n    }\n    return new KeystoreAccount(account);\n}\nfunction pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc) {\n    return arrayify(_pbkdf2(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction pbkdf2(passwordBytes, salt, count, dkLen, prfFunc) {\n    return Promise.resolve(pbkdf2Sync(passwordBytes, salt, count, dkLen, prfFunc));\n}\nfunction _computeKdfKey(data, password, pbkdf2Func, scryptFunc, progressCallback) {\n    const passwordBytes = getPassword(password);\n    const kdf = searchPath(data, \"crypto/kdf\");\n    if (kdf && typeof (kdf) === \"string\") {\n        const throwError = function (name, value) {\n            return logger.throwArgumentError(\"invalid key-derivation function parameters\", name, value);\n        };\n        if (kdf.toLowerCase() === \"scrypt\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            const N = parseInt(searchPath(data, \"crypto/kdfparams/n\"));\n            const r = parseInt(searchPath(data, \"crypto/kdfparams/r\"));\n            const p = parseInt(searchPath(data, \"crypto/kdfparams/p\"));\n            // Check for all required parameters\n            if (!N || !r || !p) {\n                throwError(\"kdf\", kdf);\n            }\n            // Make sure N is a power of 2\n            if ((N & (N - 1)) !== 0) {\n                throwError(\"N\", N);\n            }\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return scryptFunc(passwordBytes, salt, N, r, p, 64, progressCallback);\n        }\n        else if (kdf.toLowerCase() === \"pbkdf2\") {\n            const salt = looseArrayify(searchPath(data, \"crypto/kdfparams/salt\"));\n            let prfFunc = null;\n            const prf = searchPath(data, \"crypto/kdfparams/prf\");\n            if (prf === \"hmac-sha256\") {\n                prfFunc = \"sha256\";\n            }\n            else if (prf === \"hmac-sha512\") {\n                prfFunc = \"sha512\";\n            }\n            else {\n                throwError(\"prf\", prf);\n            }\n            const count = parseInt(searchPath(data, \"crypto/kdfparams/c\"));\n            const dkLen = parseInt(searchPath(data, \"crypto/kdfparams/dklen\"));\n            if (dkLen !== 32) {\n                throwError(\"dklen\", dkLen);\n            }\n            return pbkdf2Func(passwordBytes, salt, count, dkLen, prfFunc);\n        }\n    }\n    return logger.throwArgumentError(\"unsupported key-derivation function\", \"kdf\", kdf);\n}\nexport function decryptSync(json, password) {\n    const data = JSON.parse(json);\n    const key = _computeKdfKey(data, password, pbkdf2Sync, scrypt.syncScrypt);\n    return _getAccount(data, key);\n}\nexport function decrypt(json, password, progressCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const data = JSON.parse(json);\n        const key = yield _computeKdfKey(data, password, pbkdf2, scrypt.scrypt, progressCallback);\n        return _getAccount(data, key);\n    });\n}\nexport function encrypt(account, password, options, progressCallback) {\n    try {\n        // Check the address matches the private key\n        if (getAddress(account.address) !== computeAddress(account.privateKey)) {\n            throw new Error(\"address/privateKey mismatch\");\n        }\n        // Check the mnemonic (if any) matches the private key\n        if (hasMnemonic(account)) {\n            const mnemonic = account.mnemonic;\n            const node = HDNode.fromMnemonic(mnemonic.phrase, null, mnemonic.locale).derivePath(mnemonic.path || defaultPath);\n            if (node.privateKey != account.privateKey) {\n                throw new Error(\"mnemonic mismatch\");\n            }\n        }\n    }\n    catch (e) {\n        return Promise.reject(e);\n    }\n    // The options are optional, so adjust the call as needed\n    if (typeof (options) === \"function\" && !progressCallback) {\n        progressCallback = options;\n        options = {};\n    }\n    if (!options) {\n        options = {};\n    }\n    const privateKey = arrayify(account.privateKey);\n    const passwordBytes = getPassword(password);\n    let entropy = null;\n    let path = null;\n    let locale = null;\n    if (hasMnemonic(account)) {\n        const srcMnemonic = account.mnemonic;\n        entropy = arrayify(mnemonicToEntropy(srcMnemonic.phrase, srcMnemonic.locale || \"en\"));\n        path = srcMnemonic.path || defaultPath;\n        locale = srcMnemonic.locale || \"en\";\n    }\n    let client = options.client;\n    if (!client) {\n        client = \"ethers.js\";\n    }\n    // Check/generate the salt\n    let salt = null;\n    if (options.salt) {\n        salt = arrayify(options.salt);\n    }\n    else {\n        salt = randomBytes(32);\n        ;\n    }\n    // Override initialization vector\n    let iv = null;\n    if (options.iv) {\n        iv = arrayify(options.iv);\n        if (iv.length !== 16) {\n            throw new Error(\"invalid iv\");\n        }\n    }\n    else {\n        iv = randomBytes(16);\n    }\n    // Override the uuid\n    let uuidRandom = null;\n    if (options.uuid) {\n        uuidRandom = arrayify(options.uuid);\n        if (uuidRandom.length !== 16) {\n            throw new Error(\"invalid uuid\");\n        }\n    }\n    else {\n        uuidRandom = randomBytes(16);\n    }\n    // Override the scrypt password-based key derivation function parameters\n    let N = (1 << 17), r = 8, p = 1;\n    if (options.scrypt) {\n        if (options.scrypt.N) {\n            N = options.scrypt.N;\n        }\n        if (options.scrypt.r) {\n            r = options.scrypt.r;\n        }\n        if (options.scrypt.p) {\n            p = options.scrypt.p;\n        }\n    }\n    // We take 64 bytes:\n    //   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)\n    //   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)\n    return scrypt.scrypt(passwordBytes, salt, N, r, p, 64, progressCallback).then((key) => {\n        key = arrayify(key);\n        // This will be used to encrypt the wallet (as per Web3 secret storage)\n        const derivedKey = key.slice(0, 16);\n        const macPrefix = key.slice(16, 32);\n        // This will be used to encrypt the mnemonic phrase (if any)\n        const mnemonicKey = key.slice(32, 64);\n        // Encrypt the private key\n        const counter = new aes.Counter(iv);\n        const aesCtr = new aes.ModeOfOperation.ctr(derivedKey, counter);\n        const ciphertext = arrayify(aesCtr.encrypt(privateKey));\n        // Compute the message authentication code, used to check the password\n        const mac = keccak256(concat([macPrefix, ciphertext]));\n        // See: https://github.com/ethereum/wiki/wiki/Web3-Secret-Storage-Definition\n        const data = {\n            address: account.address.substring(2).toLowerCase(),\n            id: uuidV4(uuidRandom),\n            version: 3,\n            Crypto: {\n                cipher: \"aes-128-ctr\",\n                cipherparams: {\n                    iv: hexlify(iv).substring(2),\n                },\n                ciphertext: hexlify(ciphertext).substring(2),\n                kdf: \"scrypt\",\n                kdfparams: {\n                    salt: hexlify(salt).substring(2),\n                    n: N,\n                    dklen: 32,\n                    p: p,\n                    r: r\n                },\n                mac: mac.substring(2)\n            }\n        };\n        // If we have a mnemonic, encrypt it into the JSON wallet\n        if (entropy) {\n            const mnemonicIv = randomBytes(16);\n            const mnemonicCounter = new aes.Counter(mnemonicIv);\n            const mnemonicAesCtr = new aes.ModeOfOperation.ctr(mnemonicKey, mnemonicCounter);\n            const mnemonicCiphertext = arrayify(mnemonicAesCtr.encrypt(entropy));\n            const now = new Date();\n            const timestamp = (now.getUTCFullYear() + \"-\" +\n                zpad(now.getUTCMonth() + 1, 2) + \"-\" +\n                zpad(now.getUTCDate(), 2) + \"T\" +\n                zpad(now.getUTCHours(), 2) + \"-\" +\n                zpad(now.getUTCMinutes(), 2) + \"-\" +\n                zpad(now.getUTCSeconds(), 2) + \".0Z\");\n            data[\"x-ethers\"] = {\n                client: client,\n                gethFilename: (\"UTC--\" + timestamp + \"--\" + data.address),\n                mnemonicCounter: hexlify(mnemonicIv).substring(2),\n                mnemonicCiphertext: hexlify(mnemonicCiphertext).substring(2),\n                path: path,\n                locale: locale,\n                version: \"0.1\"\n            };\n        }\n        return JSON.stringify(data);\n    });\n}\n//# sourceMappingURL=keystore.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\nimport { defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, ParamType } from \"./fragments\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport { checkResultErrors };\nexport class LogDescription extends Description {\n}\nexport class TransactionDescription extends Description {\n}\nexport class ErrorDescription extends Description {\n}\nexport class Indexed extends Description {\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n}\nconst BuiltinErrors = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [\"string\"], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [\"uint256\"] }\n};\nfunction wrapAccessError(property, error) {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);\n    wrap.error = error;\n    return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    constructor(fragments) {\n        logger.checkNew(new.target, Interface);\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n        defineReadOnly(this, \"_abiCoder\", getStatic(new.target, \"getAbiCoder\")());\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"errors\", {});\n        defineReadOnly(this, \"events\", {});\n        defineReadOnly(this, \"structs\", {});\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n            bucket[signature] = fragment;\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n    format(format) {\n        if (!format) {\n            format = FormatTypes.full;\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n            return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n        return abi;\n    }\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder() {\n        return defaultAbiCoder;\n    }\n    static getAddress(address) {\n        return getAddress(address);\n    }\n    static getSighash(fragment) {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n    static getEventTopic(eventFragment) {\n        return id(eventFragment.format());\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n            return this.functions[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic) {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n            return this.events[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n            return this.errors[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment) {\n        if (typeof (fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            }\n            catch (error) {\n                try {\n                    fragment = this.getError(fragment);\n                }\n                catch (_) {\n                    throw error;\n                }\n            }\n        }\n        return getStatic(this.constructor, \"getSighash\")(fragment);\n    }\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        return getStatic(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n    _decodeParams(params, data) {\n        return this._abiCoder.decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return this._abiCoder.encode(params, values);\n    }\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    decodeErrorResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${fragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n    encodeErrorResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [])\n        ]));\n    }\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [])\n        ]));\n    }\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        let bytes = arrayify(data);\n        let reason = null;\n        let message = \"\";\n        let errorArgs = null;\n        let errorName = null;\n        let errorSignature = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                }\n                catch (error) { }\n                break;\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) {\n                        reason = errorArgs[0];\n                    }\n                    if (errorName === \"Error\") {\n                        message = `; VM Exception while processing transaction: reverted with reason string ${JSON.stringify(errorArgs[0])}`;\n                    }\n                    else if (errorName === \"Panic\") {\n                        message = `; VM Exception while processing transaction: reverted with panic code ${errorArgs[0]}`;\n                    }\n                }\n                else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    }\n                    catch (error) { }\n                }\n                break;\n            }\n        }\n        return logger.throwError(\"call revert exception\" + message, Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            data: hexlify(data), errorArgs, errorName, errorSignature, reason\n        });\n    }\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));\n    }\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            });\n        }\n        let topics = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return id(value);\n            }\n            else if (param.type === \"bytes\") {\n                return keccak256(hexlify(value));\n            }\n            // Check addresses are valid\n            if (param.type === \"address\") {\n                this._abiCoder.encode([\"address\"], [value]);\n            }\n            return hexZeroPad(hexlify(value), 32);\n        };\n        values.forEach((value, index) => {\n            let param = eventFragment.inputs[index];\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(this._abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this._abiCoder.encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment, data, topics) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n        let indexed = [];\n        let nonIndexed = [];\n        let dynamic = [];\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)) : null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n        let result = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n                }\n                else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n                }\n                else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        result[index] = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    result[index] = error;\n                }\n            }\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value); }\n                    });\n                }\n                else {\n                    result[param.name] = value;\n                }\n            }\n        });\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${i}`, value); }\n                });\n            }\n        }\n        return Object.freeze(result);\n    }\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx) {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log) {\n        let fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n        return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n    parseError(data) {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n    static isInterface(value) {\n        return !!(value && value._isInterface);\n    }\n}\n//# sourceMappingURL=interface.js.map","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isForced = require('../internals/is-forced');\nvar redefine = require('../internals/redefine');\nvar hasOwn = require('../internals/has-own-property');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar isSymbol = require('../internals/is-symbol');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar thisNumberValue = require('../internals/this-number-value');\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\nvar TypeError = global.TypeError;\nvar arraySlice = uncurryThis(''.slice);\nvar charCodeAt = uncurryThis(''.charCodeAt);\n\n// `ToNumeric` abstract operation\n// https://tc39.es/ecma262/#sec-tonumeric\nvar toNumeric = function (value) {\n  var primValue = toPrimitive(value, 'number');\n  return typeof primValue == 'bigint' ? primValue : toNumber(primValue);\n};\n\n// `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, 'number');\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (isSymbol(it)) throw TypeError('Cannot convert a Symbol value to a number');\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = charCodeAt(it, 0);\n    if (first === 43 || first === 45) {\n      third = charCodeAt(it, 2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (charCodeAt(it, 1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = arraySlice(it, 2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = charCodeAt(digits, index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));\n    var dummy = this;\n    // check on 1..constructor(foo) case\n    return isPrototypeOf(NumberPrototype, dummy) && fails(function () { thisNumberValue(dummy); })\n      ? inheritIfRequired(Object(n), dummy, NumberWrapper) : n;\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' +\n    // ESNext\n    'fromString,range'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (hasOwn(NativeNumber, key = keys[j]) && !hasOwn(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  redefine(global, NUMBER, NumberWrapper);\n}\n","// NFKC (composed)             // (decomposed)\nexport const EtherSymbol = \"\\u039e\"; // \"\\uD835\\uDF63\";\n//# sourceMappingURL=strings.js.map","export const version = \"web/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { arrayify } from \"@ethersproject/bytes\";\nexport function getUrl(href, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (options == null) {\n            options = {};\n        }\n        const request = {\n            method: (options.method || \"GET\"),\n            headers: (options.headers || {}),\n            body: (options.body || undefined),\n        };\n        if (options.skipFetchSetup !== true) {\n            request.mode = \"cors\"; // no-cors, cors, *same-origin\n            request.cache = \"no-cache\"; // *default, no-cache, reload, force-cache, only-if-cached\n            request.credentials = \"same-origin\"; // include, *same-origin, omit\n            request.redirect = \"follow\"; // manual, *follow, error\n            request.referrer = \"client\"; // no-referrer, *client\n        }\n        ;\n        const response = yield fetch(href, request);\n        const body = yield response.arrayBuffer();\n        const headers = {};\n        if (response.headers.forEach) {\n            response.headers.forEach((value, key) => {\n                headers[key.toLowerCase()] = value;\n            });\n        }\n        else {\n            ((response.headers).keys)().forEach((key) => {\n                headers[key.toLowerCase()] = response.headers.get(key);\n            });\n        }\n        return {\n            headers: headers,\n            statusCode: response.status,\n            statusMessage: response.statusText,\n            body: arrayify(new Uint8Array(body)),\n        };\n    });\n}\n//# sourceMappingURL=geturl.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { decode as base64Decode, encode as base64Encode } from \"@ethersproject/base64\";\nimport { hexlify, isBytesLike } from \"@ethersproject/bytes\";\nimport { shallowCopy } from \"@ethersproject/properties\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getUrl } from \"./geturl\";\nfunction staller(duration) {\n    return new Promise((resolve) => {\n        setTimeout(resolve, duration);\n    });\n}\nfunction bodyify(value, type) {\n    if (value == null) {\n        return null;\n    }\n    if (typeof (value) === \"string\") {\n        return value;\n    }\n    if (isBytesLike(value)) {\n        if (type && (type.split(\"/\")[0] === \"text\" || type.split(\";\")[0].trim() === \"application/json\")) {\n            try {\n                return toUtf8String(value);\n            }\n            catch (error) { }\n            ;\n        }\n        return hexlify(value);\n    }\n    return value;\n}\n// This API is still a work in progress; the future changes will likely be:\n// - ConnectionInfo => FetchDataRequest<T = any>\n// - FetchDataRequest.body? = string | Uint8Array | { contentType: string, data: string | Uint8Array }\n//   - If string => text/plain, Uint8Array => application/octet-stream (if content-type unspecified)\n// - FetchDataRequest.processFunc = (body: Uint8Array, response: FetchDataResponse) => T\n// For this reason, it should be considered internal until the API is finalized\nexport function _fetchData(connection, body, processFunc) {\n    // How many times to retry in the event of a throttle\n    const attemptLimit = (typeof (connection) === \"object\" && connection.throttleLimit != null) ? connection.throttleLimit : 12;\n    logger.assertArgument((attemptLimit > 0 && (attemptLimit % 1) === 0), \"invalid connection throttle limit\", \"connection.throttleLimit\", attemptLimit);\n    const throttleCallback = ((typeof (connection) === \"object\") ? connection.throttleCallback : null);\n    const throttleSlotInterval = ((typeof (connection) === \"object\" && typeof (connection.throttleSlotInterval) === \"number\") ? connection.throttleSlotInterval : 100);\n    logger.assertArgument((throttleSlotInterval > 0 && (throttleSlotInterval % 1) === 0), \"invalid connection throttle slot interval\", \"connection.throttleSlotInterval\", throttleSlotInterval);\n    const errorPassThrough = ((typeof (connection) === \"object\") ? !!(connection.errorPassThrough) : false);\n    const headers = {};\n    let url = null;\n    // @TODO: Allow ConnectionInfo to override some of these values\n    const options = {\n        method: \"GET\",\n    };\n    let allow304 = false;\n    let timeout = 2 * 60 * 1000;\n    if (typeof (connection) === \"string\") {\n        url = connection;\n    }\n    else if (typeof (connection) === \"object\") {\n        if (connection == null || connection.url == null) {\n            logger.throwArgumentError(\"missing URL\", \"connection.url\", connection);\n        }\n        url = connection.url;\n        if (typeof (connection.timeout) === \"number\" && connection.timeout > 0) {\n            timeout = connection.timeout;\n        }\n        if (connection.headers) {\n            for (const key in connection.headers) {\n                headers[key.toLowerCase()] = { key: key, value: String(connection.headers[key]) };\n                if ([\"if-none-match\", \"if-modified-since\"].indexOf(key.toLowerCase()) >= 0) {\n                    allow304 = true;\n                }\n            }\n        }\n        options.allowGzip = !!connection.allowGzip;\n        if (connection.user != null && connection.password != null) {\n            if (url.substring(0, 6) !== \"https:\" && connection.allowInsecureAuthentication !== true) {\n                logger.throwError(\"basic authentication requires a secure https url\", Logger.errors.INVALID_ARGUMENT, { argument: \"url\", url: url, user: connection.user, password: \"[REDACTED]\" });\n            }\n            const authorization = connection.user + \":\" + connection.password;\n            headers[\"authorization\"] = {\n                key: \"Authorization\",\n                value: \"Basic \" + base64Encode(toUtf8Bytes(authorization))\n            };\n        }\n        if (connection.skipFetchSetup != null) {\n            options.skipFetchSetup = !!connection.skipFetchSetup;\n        }\n    }\n    const reData = new RegExp(\"^data:([a-z0-9-]+/[a-z0-9-]+);base64,(.*)$\", \"i\");\n    const dataMatch = ((url) ? url.match(reData) : null);\n    if (dataMatch) {\n        try {\n            const response = {\n                statusCode: 200,\n                statusMessage: \"OK\",\n                headers: { \"content-type\": dataMatch[1] },\n                body: base64Decode(dataMatch[2])\n            };\n            let result = response.body;\n            if (processFunc) {\n                result = processFunc(response.body, response);\n            }\n            return Promise.resolve(result);\n        }\n        catch (error) {\n            logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                body: bodyify(dataMatch[1], dataMatch[2]),\n                error: error,\n                requestBody: null,\n                requestMethod: \"GET\",\n                url: url\n            });\n        }\n    }\n    if (body) {\n        options.method = \"POST\";\n        options.body = body;\n        if (headers[\"content-type\"] == null) {\n            headers[\"content-type\"] = { key: \"Content-Type\", value: \"application/octet-stream\" };\n        }\n        if (headers[\"content-length\"] == null) {\n            headers[\"content-length\"] = { key: \"Content-Length\", value: String(body.length) };\n        }\n    }\n    const flatHeaders = {};\n    Object.keys(headers).forEach((key) => {\n        const header = headers[key];\n        flatHeaders[header.key] = header.value;\n    });\n    options.headers = flatHeaders;\n    const runningTimeout = (function () {\n        let timer = null;\n        const promise = new Promise(function (resolve, reject) {\n            if (timeout) {\n                timer = setTimeout(() => {\n                    if (timer == null) {\n                        return;\n                    }\n                    timer = null;\n                    reject(logger.makeError(\"timeout\", Logger.errors.TIMEOUT, {\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        timeout: timeout,\n                        url: url\n                    }));\n                }, timeout);\n            }\n        });\n        const cancel = function () {\n            if (timer == null) {\n                return;\n            }\n            clearTimeout(timer);\n            timer = null;\n        };\n        return { promise, cancel };\n    })();\n    const runningFetch = (function () {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let attempt = 0; attempt < attemptLimit; attempt++) {\n                let response = null;\n                try {\n                    response = yield getUrl(url, options);\n                    if (attempt < attemptLimit) {\n                        if (response.statusCode === 301 || response.statusCode === 302) {\n                            // Redirection; for now we only support absolute locataions\n                            const location = response.headers.location || \"\";\n                            if (options.method === \"GET\" && location.match(/^https:/)) {\n                                url = response.headers.location;\n                                continue;\n                            }\n                        }\n                        else if (response.statusCode === 429) {\n                            // Exponential back-off throttling\n                            let tryAgain = true;\n                            if (throttleCallback) {\n                                tryAgain = yield throttleCallback(attempt, url);\n                            }\n                            if (tryAgain) {\n                                let stall = 0;\n                                const retryAfter = response.headers[\"retry-after\"];\n                                if (typeof (retryAfter) === \"string\" && retryAfter.match(/^[1-9][0-9]*$/)) {\n                                    stall = parseInt(retryAfter) * 1000;\n                                }\n                                else {\n                                    stall = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                                }\n                                //console.log(\"Stalling 429\");\n                                yield staller(stall);\n                                continue;\n                            }\n                        }\n                    }\n                }\n                catch (error) {\n                    response = error.response;\n                    if (response == null) {\n                        runningTimeout.cancel();\n                        logger.throwError(\"missing response\", Logger.errors.SERVER_ERROR, {\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            serverError: error,\n                            url: url\n                        });\n                    }\n                }\n                let body = response.body;\n                if (allow304 && response.statusCode === 304) {\n                    body = null;\n                }\n                else if (!errorPassThrough && (response.statusCode < 200 || response.statusCode >= 300)) {\n                    runningTimeout.cancel();\n                    logger.throwError(\"bad response\", Logger.errors.SERVER_ERROR, {\n                        status: response.statusCode,\n                        headers: response.headers,\n                        body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                        requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                        requestMethod: options.method,\n                        url: url\n                    });\n                }\n                if (processFunc) {\n                    try {\n                        const result = yield processFunc(body, response);\n                        runningTimeout.cancel();\n                        return result;\n                    }\n                    catch (error) {\n                        // Allow the processFunc to trigger a throttle\n                        if (error.throttleRetry && attempt < attemptLimit) {\n                            let tryAgain = true;\n                            if (throttleCallback) {\n                                tryAgain = yield throttleCallback(attempt, url);\n                            }\n                            if (tryAgain) {\n                                const timeout = throttleSlotInterval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                                //console.log(\"Stalling callback\");\n                                yield staller(timeout);\n                                continue;\n                            }\n                        }\n                        runningTimeout.cancel();\n                        logger.throwError(\"processing response error\", Logger.errors.SERVER_ERROR, {\n                            body: bodyify(body, ((response.headers) ? response.headers[\"content-type\"] : null)),\n                            error: error,\n                            requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                            requestMethod: options.method,\n                            url: url\n                        });\n                    }\n                }\n                runningTimeout.cancel();\n                // If we had a processFunc, it either returned a T or threw above.\n                // The \"body\" is now a Uint8Array.\n                return body;\n            }\n            return logger.throwError(\"failed response\", Logger.errors.SERVER_ERROR, {\n                requestBody: bodyify(options.body, flatHeaders[\"content-type\"]),\n                requestMethod: options.method,\n                url: url\n            });\n        });\n    })();\n    return Promise.race([runningTimeout.promise, runningFetch]);\n}\nexport function fetchJson(connection, json, processFunc) {\n    let processJsonFunc = (value, response) => {\n        let result = null;\n        if (value != null) {\n            try {\n                result = JSON.parse(toUtf8String(value));\n            }\n            catch (error) {\n                logger.throwError(\"invalid JSON\", Logger.errors.SERVER_ERROR, {\n                    body: value,\n                    error: error\n                });\n            }\n        }\n        if (processFunc) {\n            result = processFunc(result, response);\n        }\n        return result;\n    };\n    // If we have json to send, we must\n    // - add content-type of application/json (unless already overridden)\n    // - convert the json to bytes\n    let body = null;\n    if (json != null) {\n        body = toUtf8Bytes(json);\n        // Create a connection with the content-type set for JSON\n        const updated = (typeof (connection) === \"string\") ? ({ url: connection }) : shallowCopy(connection);\n        if (updated.headers) {\n            const hasContentType = (Object.keys(updated.headers).filter((k) => (k.toLowerCase() === \"content-type\")).length) !== 0;\n            if (!hasContentType) {\n                updated.headers = shallowCopy(updated.headers);\n                updated.headers[\"content-type\"] = \"application/json\";\n            }\n        }\n        else {\n            updated.headers = { \"content-type\": \"application/json\" };\n        }\n        connection = updated;\n    }\n    return _fetchData(connection, body, processJsonFunc);\n}\nexport function poll(func, options) {\n    if (!options) {\n        options = {};\n    }\n    options = shallowCopy(options);\n    if (options.floor == null) {\n        options.floor = 0;\n    }\n    if (options.ceiling == null) {\n        options.ceiling = 10000;\n    }\n    if (options.interval == null) {\n        options.interval = 250;\n    }\n    return new Promise(function (resolve, reject) {\n        let timer = null;\n        let done = false;\n        // Returns true if cancel was successful. Unsuccessful cancel means we're already done.\n        const cancel = () => {\n            if (done) {\n                return false;\n            }\n            done = true;\n            if (timer) {\n                clearTimeout(timer);\n            }\n            return true;\n        };\n        if (options.timeout) {\n            timer = setTimeout(() => {\n                if (cancel()) {\n                    reject(new Error(\"timeout\"));\n                }\n            }, options.timeout);\n        }\n        const retryLimit = options.retryLimit;\n        let attempt = 0;\n        function check() {\n            return func().then(function (result) {\n                // If we have a result, or are allowed null then we're done\n                if (result !== undefined) {\n                    if (cancel()) {\n                        resolve(result);\n                    }\n                }\n                else if (options.oncePoll) {\n                    options.oncePoll.once(\"poll\", check);\n                }\n                else if (options.onceBlock) {\n                    options.onceBlock.once(\"block\", check);\n                    // Otherwise, exponential back-off (up to 10s) our next request\n                }\n                else if (!done) {\n                    attempt++;\n                    if (attempt > retryLimit) {\n                        if (cancel()) {\n                            reject(new Error(\"retry limit reached\"));\n                        }\n                        return;\n                    }\n                    let timeout = options.interval * parseInt(String(Math.random() * Math.pow(2, attempt)));\n                    if (timeout < options.floor) {\n                        timeout = options.floor;\n                    }\n                    if (timeout > options.ceiling) {\n                        timeout = options.ceiling;\n                    }\n                    setTimeout(check, timeout);\n                }\n                return null;\n            }, function (error) {\n                if (cancel()) {\n                    reject(error);\n                }\n            });\n        }\n        check();\n    });\n}\n//# sourceMappingURL=index.js.map","export const version = \"wordlists/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\n// This gets overridden by rollup\nconst exportWordlist = false;\nimport { id } from \"@ethersproject/hash\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nexport const logger = new Logger(version);\nexport class Wordlist {\n    constructor(locale) {\n        logger.checkAbstract(new.target, Wordlist);\n        defineReadOnly(this, \"locale\", locale);\n    }\n    // Subclasses may override this\n    split(mnemonic) {\n        return mnemonic.toLowerCase().split(/ +/g);\n    }\n    // Subclasses may override this\n    join(words) {\n        return words.join(\" \");\n    }\n    static check(wordlist) {\n        const words = [];\n        for (let i = 0; i < 2048; i++) {\n            const word = wordlist.getWord(i);\n            /* istanbul ignore if */\n            if (i !== wordlist.getWordIndex(word)) {\n                return \"0x\";\n            }\n            words.push(word);\n        }\n        return id(words.join(\"\\n\") + \"\\n\");\n    }\n    static register(lang, name) {\n        if (!name) {\n            name = lang.locale;\n        }\n        /* istanbul ignore if */\n        if (exportWordlist) {\n            try {\n                const anyGlobal = window;\n                if (anyGlobal._ethers && anyGlobal._ethers.wordlists) {\n                    if (!anyGlobal._ethers.wordlists[name]) {\n                        defineReadOnly(anyGlobal._ethers.wordlists, name, lang);\n                    }\n                }\n            }\n            catch (error) { }\n        }\n    }\n}\n//# sourceMappingURL=wordlist.js.map","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n","export const AddressZero = \"0x0000000000000000000000000000000000000000\";\n//# sourceMappingURL=addresses.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nconst _constructorGuard = {};\nlet ModifiersBytes = { calldata: true, memory: true, storage: true };\nlet ModifiersNest = { calldata: true, memory: true };\nfunction checkModifier(type, name) {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) {\n            return true;\n        }\n    }\n    else if (type === \"address\") {\n        if (name === \"payable\") {\n            return true;\n        }\n    }\n    else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) {\n            return true;\n        }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param, allowIndexed) {\n    let originalParam = param;\n    function throwError(i) {\n        logger.throwArgumentError(`unexpected character at position ${i}`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n    function newNode(parent) {\n        let node = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) {\n            node.indexed = false;\n        }\n        return node;\n    }\n    let parent = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                }\n                else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [newNode(node)];\n                node = node.components[0];\n                break;\n            case \")\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let child = node;\n                node = node.parent;\n                if (!node) {\n                    throwError(i);\n                }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n            case \",\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let sibling = newNode(node.parent);\n                //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n            // Hit a space...\n            case \" \":\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) {\n                                throwError(i);\n                            }\n                            if (node.indexed) {\n                                throwError(i);\n                            }\n                            node.indexed = true;\n                            node.name = \"\";\n                        }\n                        else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        }\n                        else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n                break;\n            case \"[\":\n                if (!node.state.allowArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n            case \"]\":\n                if (!node.state.readArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                }\n                else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                }\n                else if (node.state.readArray) {\n                    node.type += c;\n                }\n                else {\n                    throwError(i);\n                }\n        }\n    }\n    if (node.parent) {\n        logger.throwArgumentError(\"unexpected eof\", \"param\", param);\n    }\n    delete parent.state;\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) {\n            throwError(originalParam.length - 7);\n        }\n        if (node.indexed) {\n            throwError(originalParam.length - 7);\n        }\n        node.indexed = true;\n        node.name = \"\";\n    }\n    else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n    parent.type = verifyType(parent.type);\n    return parent;\n}\nfunction populate(object, params) {\n    for (let key in params) {\n        defineReadOnly(object, key, params[key]);\n    }\n}\nexport const FormatTypes = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n    // JSON-format a la Solidity\n    json: \"json\"\n});\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nexport class ParamType {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new ParamType()\"\n            });\n        }\n        populate(this, params);\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        }\n        else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\" : this.type)\n            });\n        }\n        this._isParamType = true;\n        Object.freeze(this);\n    }\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            let result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n        }\n        else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    static from(value, allowIndexed) {\n        if (typeof (value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ParamType.isParamType(value)) {\n            return value;\n        }\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null : !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject) : null)\n        });\n    }\n    static fromString(value, allowIndexed) {\n        function ParamTypify(node) {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n    static isParamType(value) {\n        return !!(value != null && value._isParamType);\n    }\n}\n;\nfunction parseParams(value, allowIndex) {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\nexport class Fragment {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n        this._isFragment = true;\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n        return Fragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n    static fromString(value) {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n        if (value.split(\" \")[0] === \"event\") {\n            return EventFragment.fromString(value.substring(5).trim());\n        }\n        else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        }\n        else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        }\n        else if (value.split(\" \")[0] === \"error\") {\n            return ErrorFragment.fromString(value.substring(5).trim());\n        }\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n    static isFragment(value) {\n        return !!(value && value._isFragment);\n    }\n}\nexport class EventFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (EventFragment.isEventFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n        const params = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n        return new EventFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch (modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n    static isEventFragment(value) {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\nfunction parseGas(value, params) {\n    params.gas = null;\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n    return value;\n}\nfunction parseModifiers(value, params) {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\nfunction verifyState(value) {\n    let result = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n    }\n    else if (value.payable != null) {\n        result.payable = !!value.payable;\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n        result.constant = !!value.constant;\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        }\n        else {\n            result.stateMutability = (result.payable ? \"payable\" : \"nonpayable\");\n        }\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n    }\n    else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\" : \"payable\");\n    }\n    else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n    return result;\n}\nexport class ConstructorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n        let result = \"constructor(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ConstructorFragment.isConstructorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n        const params = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"constructor\" };\n        value = parseGas(value, params);\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n        params.inputs = parseParams(parens[2].trim(), false);\n        parseModifiers(parens[3].trim(), params);\n        return ConstructorFragment.fromObject(params);\n    }\n    static isConstructorFragment(value) {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\nexport class FunctionFragment extends ConstructorFragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            }\n            else if (this.constant) {\n                result += \"view \";\n            }\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map((output) => output.format(format)).join(\", \") + \") \";\n            }\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (FunctionFragment.isFunctionFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new FunctionFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"function\" };\n        value = parseGas(value, params);\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        parseModifiers(parens[3].trim(), params);\n        // We have outputs\n        if (comps.length > 1) {\n            let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        }\n        else {\n            params.outputs = [];\n        }\n        return FunctionFragment.fromObject(params);\n    }\n    static isFunctionFragment(value) {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n//export class StructFragment extends Fragment {\n//}\nfunction checkForbidden(fragment) {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${sig} error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\nexport class ErrorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ErrorFragment.isErrorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : [])\n        };\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n    static fromString(value) {\n        let params = { type: \"error\" };\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n    static isErrorFragment(value) {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\nfunction verifyType(type) {\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    }\n    else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n    // @TODO: more verification\n    return type;\n}\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value) {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${value}\"`, \"value\", value);\n    }\n    return value;\n}\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nfunction splitNesting(value) {\n    value = value.trim();\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        }\n        else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            }\n            else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) {\n        result.push(accum);\n    }\n    return result;\n}\n//# sourceMappingURL=fragments.js.map","\"use strict\";\nimport aes from \"aes-js\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nimport { Description } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { getPassword, looseArrayify, searchPath } from \"./utils\";\nexport class CrowdsaleAccount extends Description {\n    isCrowdsaleAccount(value) {\n        return !!(value && value._isCrowdsaleAccount);\n    }\n}\n// See: https://github.com/ethereum/pyethsaletool\nexport function decrypt(json, password) {\n    const data = JSON.parse(json);\n    password = getPassword(password);\n    // Ethereum Address\n    const ethaddr = getAddress(searchPath(data, \"ethaddr\"));\n    // Encrypted Seed\n    const encseed = looseArrayify(searchPath(data, \"encseed\"));\n    if (!encseed || (encseed.length % 16) !== 0) {\n        logger.throwArgumentError(\"invalid encseed\", \"json\", json);\n    }\n    const key = arrayify(pbkdf2(password, password, 2000, 32, \"sha256\")).slice(0, 16);\n    const iv = encseed.slice(0, 16);\n    const encryptedSeed = encseed.slice(16);\n    // Decrypt the seed\n    const aesCbc = new aes.ModeOfOperation.cbc(key, iv);\n    const seed = aes.padding.pkcs7.strip(arrayify(aesCbc.decrypt(encryptedSeed)));\n    // This wallet format is weird... Convert the binary encoded hex to a string.\n    let seedHex = \"\";\n    for (let i = 0; i < seed.length; i++) {\n        seedHex += String.fromCharCode(seed[i]);\n    }\n    const seedHexBytes = toUtf8Bytes(seedHex);\n    const privateKey = keccak256(seedHexBytes);\n    return new CrowdsaleAccount({\n        _isCrowdsaleAccount: true,\n        address: ethaddr,\n        privateKey: privateKey\n    });\n}\n//# sourceMappingURL=crowdsale.js.map","\"use strict\";\nimport { decrypt as decryptCrowdsale } from \"./crowdsale\";\nimport { getJsonWalletAddress, isCrowdsaleWallet, isKeystoreWallet } from \"./inspect\";\nimport { decrypt as decryptKeystore, decryptSync as decryptKeystoreSync, encrypt as encryptKeystore } from \"./keystore\";\nfunction decryptJsonWallet(json, password, progressCallback) {\n    if (isCrowdsaleWallet(json)) {\n        if (progressCallback) {\n            progressCallback(0);\n        }\n        const account = decryptCrowdsale(json, password);\n        if (progressCallback) {\n            progressCallback(1);\n        }\n        return Promise.resolve(account);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystore(json, password, progressCallback);\n    }\n    return Promise.reject(new Error(\"invalid JSON wallet\"));\n}\nfunction decryptJsonWalletSync(json, password) {\n    if (isCrowdsaleWallet(json)) {\n        return decryptCrowdsale(json, password);\n    }\n    if (isKeystoreWallet(json)) {\n        return decryptKeystoreSync(json, password);\n    }\n    throw new Error(\"invalid JSON wallet\");\n}\nexport { decryptCrowdsale, decryptKeystore, decryptKeystoreSync, encryptKeystore, isCrowdsaleWallet, isKeystoreWallet, getJsonWalletAddress, decryptJsonWallet, decryptJsonWalletSync, };\n//# sourceMappingURL=index.js.map","export var SupportedAlgorithm;\n(function (SupportedAlgorithm) {\n    SupportedAlgorithm[\"sha256\"] = \"sha256\";\n    SupportedAlgorithm[\"sha512\"] = \"sha512\";\n})(SupportedAlgorithm || (SupportedAlgorithm = {}));\n;\n//# sourceMappingURL=types.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { id } from \"./id\";\nconst padding = new Uint8Array(32);\npadding.fill(0);\nconst NegativeOne = BigNumber.from(-1);\nconst Zero = BigNumber.from(0);\nconst One = BigNumber.from(1);\nconst MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\nfunction hexPadRight(value) {\n    const bytes = arrayify(value);\n    const padOffset = bytes.length % 32;\n    if (padOffset) {\n        return hexConcat([bytes, padding.slice(padOffset)]);\n    }\n    return hexlify(bytes);\n}\nconst hexTrue = hexZeroPad(One.toHexString(), 32);\nconst hexFalse = hexZeroPad(Zero.toHexString(), 32);\nconst domainFieldTypes = {\n    name: \"string\",\n    version: \"string\",\n    chainId: \"uint256\",\n    verifyingContract: \"address\",\n    salt: \"bytes32\"\n};\nconst domainFieldNames = [\n    \"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"\n];\nfunction checkString(key) {\n    return function (value) {\n        if (typeof (value) !== \"string\") {\n            logger.throwArgumentError(`invalid domain value for ${JSON.stringify(key)}`, `domain.${key}`, value);\n        }\n        return value;\n    };\n}\nconst domainChecks = {\n    name: checkString(\"name\"),\n    version: checkString(\"version\"),\n    chainId: function (value) {\n        try {\n            return BigNumber.from(value).toString();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value for \"chainId\"`, \"domain.chainId\", value);\n    },\n    verifyingContract: function (value) {\n        try {\n            return getAddress(value).toLowerCase();\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"verifyingContract\"`, \"domain.verifyingContract\", value);\n    },\n    salt: function (value) {\n        try {\n            const bytes = arrayify(value);\n            if (bytes.length !== 32) {\n                throw new Error(\"bad length\");\n            }\n            return hexlify(bytes);\n        }\n        catch (error) { }\n        return logger.throwArgumentError(`invalid domain value \"salt\"`, \"domain.salt\", value);\n    }\n};\nfunction getBaseEncoder(type) {\n    // intXX and uintXX\n    {\n        const match = type.match(/^(u?)int(\\d*)$/);\n        if (match) {\n            const signed = (match[1] === \"\");\n            const width = parseInt(match[2] || \"256\");\n            if (width % 8 !== 0 || width > 256 || (match[2] && match[2] !== String(width))) {\n                logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n            }\n            const boundsUpper = MaxUint256.mask(signed ? (width - 1) : width);\n            const boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;\n            return function (value) {\n                const v = BigNumber.from(value);\n                if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n                    logger.throwArgumentError(`value out-of-bounds for ${type}`, \"value\", value);\n                }\n                return hexZeroPad(v.toTwos(256).toHexString(), 32);\n            };\n        }\n    }\n    // bytesXX\n    {\n        const match = type.match(/^bytes(\\d+)$/);\n        if (match) {\n            const width = parseInt(match[1]);\n            if (width === 0 || width > 32 || match[1] !== String(width)) {\n                logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n            }\n            return function (value) {\n                const bytes = arrayify(value);\n                if (bytes.length !== width) {\n                    logger.throwArgumentError(`invalid length for ${type}`, \"value\", value);\n                }\n                return hexPadRight(value);\n            };\n        }\n    }\n    switch (type) {\n        case \"address\": return function (value) {\n            return hexZeroPad(getAddress(value), 32);\n        };\n        case \"bool\": return function (value) {\n            return ((!value) ? hexFalse : hexTrue);\n        };\n        case \"bytes\": return function (value) {\n            return keccak256(value);\n        };\n        case \"string\": return function (value) {\n            return id(value);\n        };\n    }\n    return null;\n}\nfunction encodeType(name, fields) {\n    return `${name}(${fields.map(({ name, type }) => (type + \" \" + name)).join(\",\")})`;\n}\nexport class TypedDataEncoder {\n    constructor(types) {\n        defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n        defineReadOnly(this, \"_encoderCache\", {});\n        defineReadOnly(this, \"_types\", {});\n        // Link struct types to their direct child structs\n        const links = {};\n        // Link structs to structs which contain them as a child\n        const parents = {};\n        // Link all subtypes within a given struct\n        const subtypes = {};\n        Object.keys(types).forEach((type) => {\n            links[type] = {};\n            parents[type] = [];\n            subtypes[type] = {};\n        });\n        for (const name in types) {\n            const uniqueNames = {};\n            types[name].forEach((field) => {\n                // Check each field has a unique name\n                if (uniqueNames[field.name]) {\n                    logger.throwArgumentError(`duplicate variable name ${JSON.stringify(field.name)} in ${JSON.stringify(name)}`, \"types\", types);\n                }\n                uniqueNames[field.name] = true;\n                // Get the base type (drop any array specifiers)\n                const baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n                if (baseType === name) {\n                    logger.throwArgumentError(`circular type reference to ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Is this a base encoding type?\n                const encoder = getBaseEncoder(baseType);\n                if (encoder) {\n                    return;\n                }\n                if (!parents[baseType]) {\n                    logger.throwArgumentError(`unknown type ${JSON.stringify(baseType)}`, \"types\", types);\n                }\n                // Add linkage\n                parents[baseType].push(name);\n                links[name][baseType] = true;\n            });\n        }\n        // Deduce the primary type\n        const primaryTypes = Object.keys(parents).filter((n) => (parents[n].length === 0));\n        if (primaryTypes.length === 0) {\n            logger.throwArgumentError(\"missing primary type\", \"types\", types);\n        }\n        else if (primaryTypes.length > 1) {\n            logger.throwArgumentError(`ambiguous primary types or unused types: ${primaryTypes.map((t) => (JSON.stringify(t))).join(\", \")}`, \"types\", types);\n        }\n        defineReadOnly(this, \"primaryType\", primaryTypes[0]);\n        // Check for circular type references\n        function checkCircular(type, found) {\n            if (found[type]) {\n                logger.throwArgumentError(`circular type reference to ${JSON.stringify(type)}`, \"types\", types);\n            }\n            found[type] = true;\n            Object.keys(links[type]).forEach((child) => {\n                if (!parents[child]) {\n                    return;\n                }\n                // Recursively check children\n                checkCircular(child, found);\n                // Mark all ancestors as having this decendant\n                Object.keys(found).forEach((subtype) => {\n                    subtypes[subtype][child] = true;\n                });\n            });\n            delete found[type];\n        }\n        checkCircular(this.primaryType, {});\n        // Compute each fully describe type\n        for (const name in subtypes) {\n            const st = Object.keys(subtypes[name]);\n            st.sort();\n            this._types[name] = encodeType(name, types[name]) + st.map((t) => encodeType(t, types[t])).join(\"\");\n        }\n    }\n    getEncoder(type) {\n        let encoder = this._encoderCache[type];\n        if (!encoder) {\n            encoder = this._encoderCache[type] = this._getEncoder(type);\n        }\n        return encoder;\n    }\n    _getEncoder(type) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return encoder;\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const subEncoder = this.getEncoder(subtype);\n            const length = parseInt(match[3]);\n            return (value) => {\n                if (length >= 0 && value.length !== length) {\n                    logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n                }\n                let result = value.map(subEncoder);\n                if (this._types[subtype]) {\n                    result = result.map(keccak256);\n                }\n                return keccak256(hexConcat(result));\n            };\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            const encodedType = id(this._types[type]);\n            return (value) => {\n                const values = fields.map(({ name, type }) => {\n                    const result = this.getEncoder(type)(value[name]);\n                    if (this._types[type]) {\n                        return keccak256(result);\n                    }\n                    return result;\n                });\n                values.unshift(encodedType);\n                return hexConcat(values);\n            };\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    encodeType(name) {\n        const result = this._types[name];\n        if (!result) {\n            logger.throwArgumentError(`unknown type: ${JSON.stringify(name)}`, \"name\", name);\n        }\n        return result;\n    }\n    encodeData(type, value) {\n        return this.getEncoder(type)(value);\n    }\n    hashStruct(name, value) {\n        return keccak256(this.encodeData(name, value));\n    }\n    encode(value) {\n        return this.encodeData(this.primaryType, value);\n    }\n    hash(value) {\n        return this.hashStruct(this.primaryType, value);\n    }\n    _visit(type, value, callback) {\n        // Basic encoder type (address, bool, uint256, etc)\n        {\n            const encoder = getBaseEncoder(type);\n            if (encoder) {\n                return callback(type, value);\n            }\n        }\n        // Array\n        const match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n        if (match) {\n            const subtype = match[1];\n            const length = parseInt(match[3]);\n            if (length >= 0 && value.length !== length) {\n                logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n            }\n            return value.map((v) => this._visit(subtype, v, callback));\n        }\n        // Struct\n        const fields = this.types[type];\n        if (fields) {\n            return fields.reduce((accum, { name, type }) => {\n                accum[name] = this._visit(type, value[name], callback);\n                return accum;\n            }, {});\n        }\n        return logger.throwArgumentError(`unknown type: ${type}`, \"type\", type);\n    }\n    visit(value, callback) {\n        return this._visit(this.primaryType, value, callback);\n    }\n    static from(types) {\n        return new TypedDataEncoder(types);\n    }\n    static getPrimaryType(types) {\n        return TypedDataEncoder.from(types).primaryType;\n    }\n    static hashStruct(name, types, value) {\n        return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n    static hashDomain(domain) {\n        const domainFields = [];\n        for (const name in domain) {\n            const type = domainFieldTypes[name];\n            if (!type) {\n                logger.throwArgumentError(`invalid typed-data domain key: ${JSON.stringify(name)}`, \"domain\", domain);\n            }\n            domainFields.push({ name, type });\n        }\n        domainFields.sort((a, b) => {\n            return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n        });\n        return TypedDataEncoder.hashStruct(\"EIP712Domain\", { EIP712Domain: domainFields }, domain);\n    }\n    static encode(domain, types, value) {\n        return hexConcat([\n            \"0x1901\",\n            TypedDataEncoder.hashDomain(domain),\n            TypedDataEncoder.from(types).hash(value)\n        ]);\n    }\n    static hash(domain, types, value) {\n        return keccak256(TypedDataEncoder.encode(domain, types, value));\n    }\n    // Replaces all address types with ENS names with their looked up address\n    static resolveNames(domain, types, value, resolveName) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Make a copy to isolate it from the object passed in\n            domain = shallowCopy(domain);\n            // Look up all ENS names\n            const ensCache = {};\n            // Do we need to look up the domain's verifyingContract?\n            if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n                ensCache[domain.verifyingContract] = \"0x\";\n            }\n            // We are going to use the encoder to visit all the base values\n            const encoder = TypedDataEncoder.from(types);\n            // Get a list of all the addresses\n            encoder.visit(value, (type, value) => {\n                if (type === \"address\" && !isHexString(value, 20)) {\n                    ensCache[value] = \"0x\";\n                }\n                return value;\n            });\n            // Lookup each name\n            for (const name in ensCache) {\n                ensCache[name] = yield resolveName(name);\n            }\n            // Replace the domain verifyingContract if needed\n            if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n                domain.verifyingContract = ensCache[domain.verifyingContract];\n            }\n            // Replace all ENS names with their address\n            value = encoder.visit(value, (type, value) => {\n                if (type === \"address\" && ensCache[value]) {\n                    return ensCache[value];\n                }\n                return value;\n            });\n            return { domain, value };\n        });\n    }\n    static getPayload(domain, types, value) {\n        // Validate the domain fields\n        TypedDataEncoder.hashDomain(domain);\n        // Derive the EIP712Domain Struct reference type\n        const domainValues = {};\n        const domainTypes = [];\n        domainFieldNames.forEach((name) => {\n            const value = domain[name];\n            if (value == null) {\n                return;\n            }\n            domainValues[name] = domainChecks[name](value);\n            domainTypes.push({ name, type: domainFieldTypes[name] });\n        });\n        const encoder = TypedDataEncoder.from(types);\n        const typesWithDomain = shallowCopy(types);\n        if (typesWithDomain.EIP712Domain) {\n            logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n        }\n        else {\n            typesWithDomain.EIP712Domain = domainTypes;\n        }\n        // Validate the data structures and types\n        encoder.encode(value);\n        return {\n            types: typesWithDomain,\n            domain: domainValues,\n            primaryType: encoder.primaryType,\n            message: encoder.visit(value, (type, value) => {\n                // bytes\n                if (type.match(/^bytes(\\d*)/)) {\n                    return hexlify(arrayify(value));\n                }\n                // uint or int\n                if (type.match(/^u?int/)) {\n                    return BigNumber.from(value).toString();\n                }\n                switch (type) {\n                    case \"address\":\n                        return value.toLowerCase();\n                    case \"bool\":\n                        return !!value;\n                    case \"string\":\n                        if (typeof (value) !== \"string\") {\n                            logger.throwArgumentError(`invalid string`, \"value\", value);\n                        }\n                        return value;\n                }\n                return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n            })\n        };\n    }\n}\n//# sourceMappingURL=typed-data.js.map","export const version = \"solidity/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, zeroPad } from \"@ethersproject/bytes\";\nimport { keccak256 as hashKeccak256 } from \"@ethersproject/keccak256\";\nimport { sha256 as hashSha256 } from \"@ethersproject/sha2\";\nimport { toUtf8Bytes } from \"@ethersproject/strings\";\nconst regexBytes = new RegExp(\"^bytes([0-9]+)$\");\nconst regexNumber = new RegExp(\"^(u?int)([0-9]*)$\");\nconst regexArray = new RegExp(\"^(.*)\\\\[([0-9]*)\\\\]$\");\nconst Zeros = \"0000000000000000000000000000000000000000000000000000000000000000\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nfunction _pack(type, value, isArray) {\n    switch (type) {\n        case \"address\":\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n        case \"string\":\n            return toUtf8Bytes(value);\n        case \"bytes\":\n            return arrayify(value);\n        case \"bool\":\n            value = (value ? \"0x01\" : \"0x00\");\n            if (isArray) {\n                return zeroPad(value, 32);\n            }\n            return arrayify(value);\n    }\n    let match = type.match(regexNumber);\n    if (match) {\n        //let signed = (match[1] === \"int\")\n        let size = parseInt(match[2] || \"256\");\n        if ((match[2] && String(size) !== match[2]) || (size % 8 !== 0) || size === 0 || size > 256) {\n            logger.throwArgumentError(\"invalid number type\", \"type\", type);\n        }\n        if (isArray) {\n            size = 256;\n        }\n        value = BigNumber.from(value).toTwos(size);\n        return zeroPad(value, size / 8);\n    }\n    match = type.match(regexBytes);\n    if (match) {\n        const size = parseInt(match[1]);\n        if (String(size) !== match[1] || size === 0 || size > 32) {\n            logger.throwArgumentError(\"invalid bytes type\", \"type\", type);\n        }\n        if (arrayify(value).byteLength !== size) {\n            logger.throwArgumentError(`invalid value for ${type}`, \"value\", value);\n        }\n        if (isArray) {\n            return arrayify((value + Zeros).substring(0, 66));\n        }\n        return value;\n    }\n    match = type.match(regexArray);\n    if (match && Array.isArray(value)) {\n        const baseType = match[1];\n        const count = parseInt(match[2] || String(value.length));\n        if (count != value.length) {\n            logger.throwArgumentError(`invalid array length for ${type}`, \"value\", value);\n        }\n        const result = [];\n        value.forEach(function (value) {\n            result.push(_pack(baseType, value, true));\n        });\n        return concat(result);\n    }\n    return logger.throwArgumentError(\"invalid type\", \"type\", type);\n}\n// @TODO: Array Enum\nexport function pack(types, values) {\n    if (types.length != values.length) {\n        logger.throwArgumentError(\"wrong number of values; expected ${ types.length }\", \"values\", values);\n    }\n    const tight = [];\n    types.forEach(function (type, index) {\n        tight.push(_pack(type, values[index]));\n    });\n    return hexlify(concat(tight));\n}\nexport function keccak256(types, values) {\n    return hashKeccak256(pack(types, values));\n}\nexport function sha256(types, values) {\n    return hashSha256(pack(types, values));\n}\n//# sourceMappingURL=index.js.map","export const version = \"abstract-provider/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { isHexString } from \"@ethersproject/bytes\";\nimport { Description, defineReadOnly, resolveProperties } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n//export type CallTransactionable = {\n//    call(transaction: TransactionRequest): Promise<TransactionResponse>;\n//};\nexport class ForkEvent extends Description {\n    static isForkEvent(value) {\n        return !!(value && value._isForkEvent);\n    }\n}\nexport class BlockForkEvent extends ForkEvent {\n    constructor(blockHash, expiry) {\n        if (!isHexString(blockHash, 32)) {\n            logger.throwArgumentError(\"invalid blockHash\", \"blockHash\", blockHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isBlockForkEvent: true,\n            expiry: (expiry || 0),\n            blockHash: blockHash\n        });\n    }\n}\nexport class TransactionForkEvent extends ForkEvent {\n    constructor(hash, expiry) {\n        if (!isHexString(hash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"hash\", hash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionForkEvent: true,\n            expiry: (expiry || 0),\n            hash: hash\n        });\n    }\n}\nexport class TransactionOrderForkEvent extends ForkEvent {\n    constructor(beforeHash, afterHash, expiry) {\n        if (!isHexString(beforeHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"beforeHash\", beforeHash);\n        }\n        if (!isHexString(afterHash, 32)) {\n            logger.throwArgumentError(\"invalid transaction hash\", \"afterHash\", afterHash);\n        }\n        super({\n            _isForkEvent: true,\n            _isTransactionOrderForkEvent: true,\n            expiry: (expiry || 0),\n            beforeHash: beforeHash,\n            afterHash: afterHash\n        });\n    }\n}\n///////////////////////////////\n// Exported Abstracts\nexport class Provider {\n    constructor() {\n        logger.checkAbstract(new.target, Provider);\n        defineReadOnly(this, \"_isProvider\", true);\n    }\n    getFeeData() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { block, gasPrice } = yield resolveProperties({\n                block: this.getBlock(\"latest\"),\n                gasPrice: this.getGasPrice().catch((error) => {\n                    // @TODO: Why is this now failing on Calaveras?\n                    //console.log(error);\n                    return null;\n                })\n            });\n            let maxFeePerGas = null, maxPriorityFeePerGas = null;\n            if (block && block.baseFeePerGas) {\n                // We may want to compute this more accurately in the future,\n                // using the formula \"check if the base fee is correct\".\n                // See: https://eips.ethereum.org/EIPS/eip-1559\n                maxPriorityFeePerGas = BigNumber.from(\"1500000000\");\n                maxFeePerGas = block.baseFeePerGas.mul(2).add(maxPriorityFeePerGas);\n            }\n            return { maxFeePerGas, maxPriorityFeePerGas, gasPrice };\n        });\n    }\n    // Alias for \"on\"\n    addListener(eventName, listener) {\n        return this.on(eventName, listener);\n    }\n    // Alias for \"off\"\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n    static isProvider(value) {\n        return !!(value && value._isProvider);\n    }\n}\n//# sourceMappingURL=index.js.map","export const version = \"hdnode/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Base58 } from \"@ethersproject/basex\";\nimport { arrayify, concat, hexDataSlice, hexZeroPad, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from \"@ethersproject/strings\";\nimport { pbkdf2 } from \"@ethersproject/pbkdf2\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { SigningKey } from \"@ethersproject/signing-key\";\nimport { computeHmac, ripemd160, sha256, SupportedAlgorithm } from \"@ethersproject/sha2\";\nimport { computeAddress } from \"@ethersproject/transactions\";\nimport { wordlists } from \"@ethersproject/wordlists\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst N = BigNumber.from(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n// \"Bitcoin seed\"\nconst MasterSecret = toUtf8Bytes(\"Bitcoin seed\");\nconst HardenedBit = 0x80000000;\n// Returns a byte with the MSB bits set\nfunction getUpperMask(bits) {\n    return ((1 << bits) - 1) << (8 - bits);\n}\n// Returns a byte with the LSB bits set\nfunction getLowerMask(bits) {\n    return (1 << bits) - 1;\n}\nfunction bytes32(value) {\n    return hexZeroPad(hexlify(value), 32);\n}\nfunction base58check(data) {\n    return Base58.encode(concat([data, hexDataSlice(sha256(sha256(data)), 0, 4)]));\n}\nfunction getWordlist(wordlist) {\n    if (wordlist == null) {\n        return wordlists[\"en\"];\n    }\n    if (typeof (wordlist) === \"string\") {\n        const words = wordlists[wordlist];\n        if (words == null) {\n            logger.throwArgumentError(\"unknown locale\", \"wordlist\", wordlist);\n        }\n        return words;\n    }\n    return wordlist;\n}\nconst _constructorGuard = {};\nexport const defaultPath = \"m/44'/60'/0'/0/0\";\n;\nexport class HDNode {\n    /**\n     *  This constructor should not be called directly.\n     *\n     *  Please use:\n     *   - fromMnemonic\n     *   - fromSeed\n     */\n    constructor(constructorGuard, privateKey, publicKey, parentFingerprint, chainCode, index, depth, mnemonicOrPath) {\n        logger.checkNew(new.target, HDNode);\n        /* istanbul ignore if */\n        if (constructorGuard !== _constructorGuard) {\n            throw new Error(\"HDNode constructor cannot be called directly\");\n        }\n        if (privateKey) {\n            const signingKey = new SigningKey(privateKey);\n            defineReadOnly(this, \"privateKey\", signingKey.privateKey);\n            defineReadOnly(this, \"publicKey\", signingKey.compressedPublicKey);\n        }\n        else {\n            defineReadOnly(this, \"privateKey\", null);\n            defineReadOnly(this, \"publicKey\", hexlify(publicKey));\n        }\n        defineReadOnly(this, \"parentFingerprint\", parentFingerprint);\n        defineReadOnly(this, \"fingerprint\", hexDataSlice(ripemd160(sha256(this.publicKey)), 0, 4));\n        defineReadOnly(this, \"address\", computeAddress(this.publicKey));\n        defineReadOnly(this, \"chainCode\", chainCode);\n        defineReadOnly(this, \"index\", index);\n        defineReadOnly(this, \"depth\", depth);\n        if (mnemonicOrPath == null) {\n            // From a source that does not preserve the path (e.g. extended keys)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", null);\n        }\n        else if (typeof (mnemonicOrPath) === \"string\") {\n            // From a source that does not preserve the mnemonic (e.g. neutered)\n            defineReadOnly(this, \"mnemonic\", null);\n            defineReadOnly(this, \"path\", mnemonicOrPath);\n        }\n        else {\n            // From a fully qualified source\n            defineReadOnly(this, \"mnemonic\", mnemonicOrPath);\n            defineReadOnly(this, \"path\", mnemonicOrPath.path);\n        }\n    }\n    get extendedKey() {\n        // We only support the mainnet values for now, but if anyone needs\n        // testnet values, let me know. I believe current sentiment is that\n        // we should always use mainnet, and use BIP-44 to derive the network\n        //   - Mainnet: public=0x0488B21E, private=0x0488ADE4\n        //   - Testnet: public=0x043587CF, private=0x04358394\n        if (this.depth >= 256) {\n            throw new Error(\"Depth too large!\");\n        }\n        return base58check(concat([\n            ((this.privateKey != null) ? \"0x0488ADE4\" : \"0x0488B21E\"),\n            hexlify(this.depth),\n            this.parentFingerprint,\n            hexZeroPad(hexlify(this.index), 4),\n            this.chainCode,\n            ((this.privateKey != null) ? concat([\"0x00\", this.privateKey]) : this.publicKey),\n        ]));\n    }\n    neuter() {\n        return new HDNode(_constructorGuard, null, this.publicKey, this.parentFingerprint, this.chainCode, this.index, this.depth, this.path);\n    }\n    _derive(index) {\n        if (index > 0xffffffff) {\n            throw new Error(\"invalid index - \" + String(index));\n        }\n        // Base path\n        let path = this.path;\n        if (path) {\n            path += \"/\" + (index & ~HardenedBit);\n        }\n        const data = new Uint8Array(37);\n        if (index & HardenedBit) {\n            if (!this.privateKey) {\n                throw new Error(\"cannot derive child of neutered node\");\n            }\n            // Data = 0x00 || ser_256(k_par)\n            data.set(arrayify(this.privateKey), 1);\n            // Hardened path\n            if (path) {\n                path += \"'\";\n            }\n        }\n        else {\n            // Data = ser_p(point(k_par))\n            data.set(arrayify(this.publicKey));\n        }\n        // Data += ser_32(i)\n        for (let i = 24; i >= 0; i -= 8) {\n            data[33 + (i >> 3)] = ((index >> (24 - i)) & 0xff);\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, this.chainCode, data));\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n        // The private key\n        let ki = null;\n        // The public key\n        let Ki = null;\n        if (this.privateKey) {\n            ki = bytes32(BigNumber.from(IL).add(this.privateKey).mod(N));\n        }\n        else {\n            const ek = new SigningKey(hexlify(IL));\n            Ki = ek._addPoint(this.publicKey);\n        }\n        let mnemonicOrPath = path;\n        const srcMnemonic = this.mnemonic;\n        if (srcMnemonic) {\n            mnemonicOrPath = Object.freeze({\n                phrase: srcMnemonic.phrase,\n                path: path,\n                locale: (srcMnemonic.locale || \"en\")\n            });\n        }\n        return new HDNode(_constructorGuard, ki, Ki, this.fingerprint, bytes32(IR), index, this.depth + 1, mnemonicOrPath);\n    }\n    derivePath(path) {\n        const components = path.split(\"/\");\n        if (components.length === 0 || (components[0] === \"m\" && this.depth !== 0)) {\n            throw new Error(\"invalid path - \" + path);\n        }\n        if (components[0] === \"m\") {\n            components.shift();\n        }\n        let result = this;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n            if (component.match(/^[0-9]+'$/)) {\n                const index = parseInt(component.substring(0, component.length - 1));\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(HardenedBit + index);\n            }\n            else if (component.match(/^[0-9]+$/)) {\n                const index = parseInt(component);\n                if (index >= HardenedBit) {\n                    throw new Error(\"invalid path index - \" + component);\n                }\n                result = result._derive(index);\n            }\n            else {\n                throw new Error(\"invalid path component - \" + component);\n            }\n        }\n        return result;\n    }\n    static _fromSeed(seed, mnemonic) {\n        const seedArray = arrayify(seed);\n        if (seedArray.length < 16 || seedArray.length > 64) {\n            throw new Error(\"invalid seed\");\n        }\n        const I = arrayify(computeHmac(SupportedAlgorithm.sha512, MasterSecret, seedArray));\n        return new HDNode(_constructorGuard, bytes32(I.slice(0, 32)), null, \"0x00000000\", bytes32(I.slice(32)), 0, 0, mnemonic);\n    }\n    static fromMnemonic(mnemonic, password, wordlist) {\n        // If a locale name was passed in, find the associated wordlist\n        wordlist = getWordlist(wordlist);\n        // Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)\n        mnemonic = entropyToMnemonic(mnemonicToEntropy(mnemonic, wordlist), wordlist);\n        return HDNode._fromSeed(mnemonicToSeed(mnemonic, password), {\n            phrase: mnemonic,\n            path: \"m\",\n            locale: wordlist.locale\n        });\n    }\n    static fromSeed(seed) {\n        return HDNode._fromSeed(seed, null);\n    }\n    static fromExtendedKey(extendedKey) {\n        const bytes = Base58.decode(extendedKey);\n        if (bytes.length !== 82 || base58check(bytes.slice(0, 78)) !== extendedKey) {\n            logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n        }\n        const depth = bytes[4];\n        const parentFingerprint = hexlify(bytes.slice(5, 9));\n        const index = parseInt(hexlify(bytes.slice(9, 13)).substring(2), 16);\n        const chainCode = hexlify(bytes.slice(13, 45));\n        const key = bytes.slice(45, 78);\n        switch (hexlify(bytes.slice(0, 4))) {\n            // Public Key\n            case \"0x0488b21e\":\n            case \"0x043587cf\":\n                return new HDNode(_constructorGuard, null, hexlify(key), parentFingerprint, chainCode, index, depth, null);\n            // Private Key\n            case \"0x0488ade4\":\n            case \"0x04358394 \":\n                if (key[0] !== 0) {\n                    break;\n                }\n                return new HDNode(_constructorGuard, hexlify(key.slice(1)), null, parentFingerprint, chainCode, index, depth, null);\n        }\n        return logger.throwArgumentError(\"invalid extended key\", \"extendedKey\", \"[REDACTED]\");\n    }\n}\nexport function mnemonicToSeed(mnemonic, password) {\n    if (!password) {\n        password = \"\";\n    }\n    const salt = toUtf8Bytes(\"mnemonic\" + password, UnicodeNormalizationForm.NFKD);\n    return pbkdf2(toUtf8Bytes(mnemonic, UnicodeNormalizationForm.NFKD), salt, 2048, 64, \"sha512\");\n}\nexport function mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = getWordlist(wordlist);\n    logger.checkNormalize();\n    const words = wordlist.split(mnemonic);\n    if ((words.length % 3) !== 0) {\n        throw new Error(\"invalid mnemonic\");\n    }\n    const entropy = arrayify(new Uint8Array(Math.ceil(11 * words.length / 8)));\n    let offset = 0;\n    for (let i = 0; i < words.length; i++) {\n        let index = wordlist.getWordIndex(words[i].normalize(\"NFKD\"));\n        if (index === -1) {\n            throw new Error(\"invalid mnemonic\");\n        }\n        for (let bit = 0; bit < 11; bit++) {\n            if (index & (1 << (10 - bit))) {\n                entropy[offset >> 3] |= (1 << (7 - (offset % 8)));\n            }\n            offset++;\n        }\n    }\n    const entropyBits = 32 * words.length / 3;\n    const checksumBits = words.length / 3;\n    const checksumMask = getUpperMask(checksumBits);\n    const checksum = arrayify(sha256(entropy.slice(0, entropyBits / 8)))[0] & checksumMask;\n    if (checksum !== (entropy[entropy.length - 1] & checksumMask)) {\n        throw new Error(\"invalid checksum\");\n    }\n    return hexlify(entropy.slice(0, entropyBits / 8));\n}\nexport function entropyToMnemonic(entropy, wordlist) {\n    wordlist = getWordlist(wordlist);\n    entropy = arrayify(entropy);\n    if ((entropy.length % 4) !== 0 || entropy.length < 16 || entropy.length > 32) {\n        throw new Error(\"invalid entropy\");\n    }\n    const indices = [0];\n    let remainingBits = 11;\n    for (let i = 0; i < entropy.length; i++) {\n        // Consume the whole byte (with still more to go)\n        if (remainingBits > 8) {\n            indices[indices.length - 1] <<= 8;\n            indices[indices.length - 1] |= entropy[i];\n            remainingBits -= 8;\n            // This byte will complete an 11-bit index\n        }\n        else {\n            indices[indices.length - 1] <<= remainingBits;\n            indices[indices.length - 1] |= entropy[i] >> (8 - remainingBits);\n            // Start the next word\n            indices.push(entropy[i] & getLowerMask(8 - remainingBits));\n            remainingBits += 3;\n        }\n    }\n    // Compute the checksum bits\n    const checksumBits = entropy.length / 4;\n    const checksum = arrayify(sha256(entropy))[0] & getUpperMask(checksumBits);\n    // Shift the checksum into the word indices\n    indices[indices.length - 1] <<= checksumBits;\n    indices[indices.length - 1] |= (checksum >> (8 - checksumBits));\n    return wordlist.join(indices.map((index) => wordlist.getWord(index)));\n}\nexport function isValidMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexport function getAccountPath(index) {\n    if (typeof (index) !== \"number\" || index < 0 || index >= HardenedBit || index % 1) {\n        logger.throwArgumentError(\"invalid account index\", \"index\", index);\n    }\n    return `m/44'/60'/${index}'/0/0`;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { toUtf8Bytes, UnicodeNormalizationForm } from '@ethersproject/strings';\nexport function looseArrayify(hexString) {\n    if (typeof (hexString) === 'string' && hexString.substring(0, 2) !== '0x') {\n        hexString = '0x' + hexString;\n    }\n    return arrayify(hexString);\n}\nexport function zpad(value, length) {\n    value = String(value);\n    while (value.length < length) {\n        value = '0' + value;\n    }\n    return value;\n}\nexport function getPassword(password) {\n    if (typeof (password) === 'string') {\n        return toUtf8Bytes(password, UnicodeNormalizationForm.NFKC);\n    }\n    return arrayify(password);\n}\nexport function searchPath(object, path) {\n    let currentChild = object;\n    const comps = path.toLowerCase().split('/');\n    for (let i = 0; i < comps.length; i++) {\n        // Search for a child object with a case-insensitive matching key\n        let matchingChild = null;\n        for (const key in currentChild) {\n            if (key.toLowerCase() === comps[i]) {\n                matchingChild = currentChild[key];\n                break;\n            }\n        }\n        // Didn't find one. :'(\n        if (matchingChild === null) {\n            return null;\n        }\n        // Now check this child...\n        currentChild = matchingChild;\n    }\n    return currentChild;\n}\n// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\nexport function uuidV4(randomBytes) {\n    const bytes = arrayify(randomBytes);\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n//# sourceMappingURL=utils.js.map","export const version = \"random/5.6.0\";\n//# sourceMappingURL=_version.js.map"],"sourceRoot":""}